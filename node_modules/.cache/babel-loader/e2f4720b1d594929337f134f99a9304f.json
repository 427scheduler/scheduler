{"ast":null,"code":"var _jsxFileName = \"/Users/jenny/Desktop/SOAS/scheduler/src/Schedule.js\";\nimport React from 'react';\nimport firebase from './Firebase.js';\nimport { firebaseCreateDate } from \"./FirebaseHelper.js\";\nimport \"./Schedule.css\";\nimport RIGHT_BTN from './img/right-arrow.png';\nimport LEFT_BTN from './img/left-arrow.png';\nimport ErrorPage from './ErrorPage.js';\nimport ReactGA from 'react-ga';\nvar today = new Date();\nvar dd = String(today.getDate()).padStart(2, '0');\nvar mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n\nvar yyyy = today.getFullYear();\ntoday = mm + '/' + dd + '/' + yyyy; //Google Anlaytics\n\nfunction initializeReactGA() {\n  ReactGA.initialize('UA-108277898-5');\n  ReactGA.pageview('/Schedule');\n}\n\nfunction RenderDate(props) {\n  var weekday = props.date.getDay();\n  var day = props.date.getDate();\n  var month = props.date.getMonth();\n  var year = props.date.getFullYear();\n  var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n  if (props.view === 'sm-view') {\n    return React.createElement(\"div\", {\n      className: 'flight-date sm-view',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, month + \" / \" + day + \" / \" + year));\n  }\n\n  return React.createElement(\"div\", {\n    className: 'flight-date lg-view',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, days[weekday] + \", \" + months[month] + \" \" + day + \", \" + year));\n}\n\nfunction parseName(name) {\n  if (name) {\n    return name[0].toUpperCase() + \". \" + name[1].toUpperCase() + name.slice(2);\n  }\n}\n\nfunction RenderDayHeader(props) {\n  var displayDate = new Date(props.date);\n  var curDate = new Date();\n  var diff = Math.round((displayDate.getTime() - curDate.getTime()) / (24 * 60 * 60 * 1000)); // Only show flights for last 3 days to the next 2 weeks\n\n  var disableLeft = diff === -3;\n  var disableRight = diff === 14;\n  return React.createElement(\"div\", {\n    className: \"day-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: \"left\",\n    className: 'date-btn' + (disableLeft ? ' disabled' : ''),\n    src: LEFT_BTN,\n    onClick: () => {\n      props.changeDate(disableLeft ? 0 : -1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(RenderDate, {\n    date: displayDate,\n    view: \"lg-view\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(RenderDate, {\n    date: displayDate,\n    view: \"sm-view\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    alt: \"right\",\n    className: 'date-btn' + (disableRight ? ' disabled' : ''),\n    src: RIGHT_BTN,\n    onClick: () => {\n      props.changeDate(disableRight ? 0 : 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"tabs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: props.activeTab === '24HR' ? \"tab activeTab\" : \"tab\",\n    onClick: () => {\n      props.setState('24HR');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"24HR\"), React.createElement(\"button\", {\n    className: props.activeTab === 'AM' ? \"tab activeTab\" : \"tab\",\n    onClick: () => {\n      props.setState('AM');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"AM\"), React.createElement(\"button\", {\n    className: props.activeTab === 'PM' ? \"tab activeTab\" : \"tab\",\n    onClick: () => {\n      props.setState('PM');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"PM\")));\n}\n\nfunction Event(props) {\n  return React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: props.name,\n    style: props.style,\n    onClick: props.toggleOverlay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }));\n}\n\nfunction createRow(pilot, events, toggleOverlay, mode) {\n  var r = [];\n  r.push(React.createElement(\"td\", {\n    className: \"pilot-col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, parseName(pilot)));\n\n  for (var i = 0; i < 12; i += 1) {\n    r.push(React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }));\n  }\n  /*if (events.length > 0) {events.forEach(event => {\n      var [type, left, right, id] = [event.type, parseFloat(event.startTime)/100, parseFloat(event.endTime)/100, event.id];\n      //If over the hour, then increment by 50%\n      var offset = parseInt(left%2) == 0 ? 0 : 4;\n      //Divide by 15 minute increments\n      offset += (left-parseInt(left))/0.15;\n      var style = {width: ((right-left)*50)+'%', left: (offset*12.5)+'%'};\n      r[1+parseInt(left/2)] = <Event name={type} style={style} toggleOverlay={()=>{toggleOverlay(type, id)}}/>;\n  })*/\n\n\n  if (events.length > 0) {\n    events.forEach(event => {\n      var _ref = [event.type, parseFloat(event.startTime) / 100, parseFloat(event.endTime) / 100, event.id],\n          type = _ref[0],\n          left = _ref[1],\n          right = _ref[2],\n          id = _ref[3]; //If over the hour, then increment by 50%\n\n      var offset = parseInt(left % 2) == 0 ? 0 : 4; //Divide by 15 minute increments\n\n      offset += (left - parseInt(left)) / 0.15;\n      var style = {\n        width: (right - left) * 50 + '%',\n        left: offset * 12.5 + '%'\n      };\n      r[1 + parseInt(left / 2)] = React.createElement(Event, {\n        name: type,\n        style: style,\n        toggleOverlay: () => {\n          toggleOverlay(type, id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      });\n    });\n  }\n\n  return r;\n}\n\nfunction Day(props) {\n  var testdata = {\n    'aearhart': [{\n      'startTime': '0530',\n      'endTime': '0720',\n      'type': 'flight',\n      'id': ''\n    }, {\n      'startTime': '1830',\n      'endTime': '1920',\n      'type': 'apt',\n      'id': ''\n    }],\n    'pmitchell': [{\n      'startTime': '0900',\n      'endTime': '1040',\n      'type': 'flight',\n      'id': ''\n    }, {\n      'startTime': '1630',\n      'endTime': '1920',\n      'type': 'meeting',\n      'id': ''\n    }],\n    'clindberg': [{\n      'startTime': '1230',\n      'endTime': '1500',\n      'type': 'flight',\n      'id': ''\n    }],\n    'cyeager': [{\n      'startTime': '2030',\n      'endTime': '2120',\n      'type': 'flight',\n      'id': ''\n    }, {\n      'startTime': '0530',\n      'endTime': '0820',\n      'type': 'apt',\n      'id': ''\n    }],\n    'owright': [{\n      'startTime': '0330',\n      'endTime': '0720',\n      'type': 'flight',\n      'id': ''\n    }]\n  };\n  var data = props.data.length > 0 ? props.data : testdata;\n  console.log(data);\n  var tableRows = [];\n  var teamLength = Object.keys(props.teamdata).length; //Create table header \n\n  var tableHeaders = [];\n  tableHeaders.push(React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }));\n  var startIndex, endIndex, inc;\n\n  switch (props.activeTab) {\n    case \"AM\":\n      startIndex = 0;\n      endIndex = 12;\n      inc = 1;\n      break;\n\n    case \"PM\":\n      startIndex = 12;\n      endIndex = 24;\n      inc = 1;\n      break;\n\n    default:\n      startIndex = 0;\n      endIndex = 24;\n      inc = 2;\n      break;\n  }\n\n  for (var i = startIndex; i < endIndex; i += inc) {\n    tableHeaders.push(React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, (i < 10 ? '0' + i.toString() : i.toString()) + '00'));\n  } //Create empty columns for gridline\n\n\n  var rowTemplate = [];\n\n  for (i = 0; i < 12; i += 1) {\n    rowTemplate.push(React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }));\n  }\n\n  tableRows.push(React.createElement(\"tr\", {\n    className: \"underline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, createRow(props.userid, props.userdata, props.toggleOverlay, props.activeTab)));\n  Object.keys(props.teamdata).forEach(key => {\n    if (tableRows.length === teamLength) {\n      //Add divider to last element of team \n      tableRows.push(React.createElement(\"tr\", {\n        className: \"underline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, createRow(key, props.teamdata[key], props.toggleOverlay, props.activeTab)));\n    } else {\n      tableRows.push(React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, createRow(key, props.teamdata[key], props.toggleOverlay, props.activeTab)));\n    }\n  });\n  Object.keys(data).forEach(key => {\n    tableRows.push(React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, createRow(key, data[key], props.toggleOverlay)));\n  });\n  return React.createElement(\"div\", {\n    className: \"day-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    className: \"schedule-table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, tableHeaders)), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, tableRows)));\n}\n\nfunction Legend(props) {\n  return React.createElement(\"div\", {\n    className: \"legend-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"legend-color flight\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    className: \"legend-entry\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, \"Flight\"), React.createElement(\"div\", {\n    className: \"legend-color apt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    className: \"legend-entry\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, \"Appointment\"), React.createElement(\"div\", {\n    className: \"legend-color meeting\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    className: \"legend-entry\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, \"Meeting\"));\n}\n\nclass Schedule extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      date: new Date(),\n      team: [],\n      userid: '',\n      userdata: [],\n      teamdata: [],\n      hasError: false,\n      activeTab: '24HR'\n    };\n  }\n\n  getData(newDate) {\n    var date = newDate.getFullYear() + '-' + (newDate.getMonth() < 9 ? '0' : '') + (newDate.getMonth() + 1) + '-' + (newDate.getDate() < 10 ? '0' : '') + newDate.getDate(); //get new data\n\n    firebase.firestore().collection(\"dates\").doc(date).get().then(querySnapshot => {\n      if (!querySnapshot.empty) {\n        var data = querySnapshot.data();\n        var team = this.state.team;\n\n        if (data.events) {\n          var tmpteamdata = {};\n          var tmpdata = {}; //For each pilot with events today: check if they are user/same team/neither and push accordingly\n\n          this.setState({\n            userdata: data.events[this.state.userid] || []\n          });\n          team.forEach(p => {\n            tmpteamdata[p] = data.events[p] || [];\n          });\n          Object.keys(data.events).forEach(key => {\n            if (!(team.includes(key) || key === this.state.userid)) {\n              tmpdata[key] = data.events[key];\n            }\n          });\n          this.setState({\n            data: tmpdata,\n            teamdata: tmpteamdata\n          });\n        }\n      } else {\n        console.log(\"Document doesn't exist\");\n        this.setState({\n          data: null\n        });\n      }\n\n      ;\n    }).catch(function (error) {\n      //Date doesn't exist \n      firebaseCreateDate(date);\n    });\n  }\n\n  changeDate(offset) {\n    if (offset != 0) {\n      var newDate = new Date(this.state.date);\n      newDate.setDate(newDate.getDate() + offset);\n      this.setState({\n        date: new Date(newDate)\n      });\n      this.getData(newDate);\n    }\n  }\n\n  componentDidMount() {\n    initializeReactGA(); //Convert displayName to userID\n\n    var id = this.props.user[0].toLowerCase() + this.props.user.split(' ')[1].toLowerCase();\n    this.setState({\n      userid: id\n    }); //get team members\n\n    firebase.firestore().collection(\"pilots\").doc(id).get().then(querySnapshot => {\n      if (!querySnapshot.empty) {\n        var data = querySnapshot.data();\n        this.setState({\n          team: data.team\n        });\n      } else {\n        console.log(\"Document doesn't exist\");\n        this.setState({\n          team: null\n        });\n      }\n\n      ;\n    }).catch(function (error) {\n      console.log(\"Error getting documents: \", error);\n    });\n    this.getData(new Date());\n  }\n\n  componentDidCatch(error, info) {\n    // Display fallback UI\n    this.setState({\n      hasError: true\n    });\n    console.log(error, info);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return React.createElement(ErrorPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"page-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(RenderDayHeader, {\n      date: this.state.date,\n      changeDate: i => {\n        this.changeDate(i);\n      },\n      setState: newTab => {\n        this.setState({\n          activeTab: newTab\n        });\n      },\n      activeTab: this.state.activeTab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }), React.createElement(Day, {\n      toggleOverlay: (event, id) => {\n        this.props.toggleOverlay(event, id);\n      },\n      data: this.state.data,\n      teamdata: this.state.teamdata,\n      userid: this.state.userid,\n      userdata: this.state.userdata,\n      activeTab: this.state.activeTab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Schedule;","map":{"version":3,"sources":["/Users/jenny/Desktop/SOAS/scheduler/src/Schedule.js"],"names":["React","firebase","firebaseCreateDate","RIGHT_BTN","LEFT_BTN","ErrorPage","ReactGA","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","initializeReactGA","initialize","pageview","RenderDate","props","weekday","date","getDay","day","month","year","days","months","view","parseName","name","toUpperCase","slice","RenderDayHeader","displayDate","curDate","diff","Math","round","getTime","disableLeft","disableRight","changeDate","activeTab","setState","Event","style","toggleOverlay","createRow","pilot","events","mode","r","push","i","length","forEach","event","type","parseFloat","startTime","endTime","id","left","right","offset","parseInt","width","Day","testdata","data","console","log","tableRows","teamLength","Object","keys","teamdata","tableHeaders","startIndex","endIndex","inc","toString","rowTemplate","userid","userdata","key","Legend","Schedule","Component","constructor","state","team","hasError","getData","newDate","firestore","collection","doc","get","then","querySnapshot","empty","tmpteamdata","tmpdata","p","includes","catch","error","setDate","componentDidMount","user","toLowerCase","split","componentDidCatch","info","render","newTab"],"mappings":"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","sourcesContent":["import React from 'react';\nimport firebase from './Firebase.js';\nimport {firebaseCreateDate} from \"./FirebaseHelper.js\";\n\nimport \"./Schedule.css\";\nimport RIGHT_BTN from './img/right-arrow.png';\nimport LEFT_BTN from './img/left-arrow.png';\nimport ErrorPage from './ErrorPage.js';\nimport ReactGA from 'react-ga';\n\nvar today = new Date();\nvar dd = String(today.getDate()).padStart(2, '0');\nvar mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\nvar yyyy = today.getFullYear();\n\ntoday = mm + '/' + dd + '/' + yyyy;\n\n//Google Anlaytics\nfunction initializeReactGA() {\n    ReactGA.initialize('UA-108277898-5');\n    ReactGA.pageview('/Schedule');\n}\n\n\nfunction RenderDate(props) {\n    var weekday = props.date.getDay();\n    var day = props.date.getDate();\n    var month = props.date.getMonth();\n    var year = props.date.getFullYear();\n    var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\",\"December\"];\n    \n    if (props.view === 'sm-view') {\n        return (\n            <div className={'flight-date sm-view'}>\n                <h2>{month+\" / \"+day+\" / \"+year}</h2>\n            </div>\n        )\n    }\n    \n    return (\n        <div className={'flight-date lg-view'}>\n            <h2>{days[weekday] +\", \"+months[month]+\" \"+day+\", \"+year}</h2>\n        </div>\n    )\n}\n\nfunction parseName(name) {\n    if (name) {\n    return name[0].toUpperCase() + \". \" + name[1].toUpperCase() + name.slice(2);}\n}\n\nfunction RenderDayHeader(props) {\n    var displayDate = new Date(props.date);\n    var curDate = new Date();\n    var diff = Math.round((displayDate.getTime() - curDate.getTime())/(24*60*60*1000));\n\n    // Only show flights for last 3 days to the next 2 weeks\n    var disableLeft = diff === -3;\n    var disableRight= diff === 14;\n    return (\n        <div className=\"day-header\">\n            <img alt=\"left\" className={'date-btn' + (disableLeft ? ' disabled': '')} src={LEFT_BTN} onClick={()=>{props.changeDate(disableLeft ? 0 : -1)}}></img>\n            <RenderDate date={displayDate} view=\"lg-view\"/>\n            <RenderDate date={displayDate} view=\"sm-view\"/>\n            <img alt=\"right\" className={'date-btn' + (disableRight ? ' disabled': '')} src={RIGHT_BTN} onClick={()=>{props.changeDate(disableRight ? 0 : 1)}}></img>\n            <div className=\"tabs\">\n                <button className={props.activeTab === '24HR' ? \"tab activeTab\": \"tab\"} onClick={()=>{props.setState('24HR')}}>24HR</button>\n                <button className={props.activeTab === 'AM' ? \"tab activeTab\": \"tab\"} onClick={()=>{props.setState('AM')}}>AM</button>\n                <button className={props.activeTab === 'PM' ? \"tab activeTab\": \"tab\"} onClick={()=>{props.setState('PM')}}>PM</button>\n            </div>\n        </div>\n        \n    )\n}\n\nfunction Event(props) {\n    return (<td><button className={props.name} style={props.style} onClick={props.toggleOverlay}/></td>)\n}\n\nfunction createRow(pilot, events, toggleOverlay, mode) {\n    var r = [];\n    r.push(<td className='pilot-col'>{parseName(pilot)}</td>);\n    for (var i = 0; i < 12 ; i += 1) {\n        r.push(<td></td>);\n    }\n        /*if (events.length > 0) {events.forEach(event => {\n            var [type, left, right, id] = [event.type, parseFloat(event.startTime)/100, parseFloat(event.endTime)/100, event.id];\n            //If over the hour, then increment by 50%\n            var offset = parseInt(left%2) == 0 ? 0 : 4;\n            //Divide by 15 minute increments\n            offset += (left-parseInt(left))/0.15;\n            var style = {width: ((right-left)*50)+'%', left: (offset*12.5)+'%'};\n            r[1+parseInt(left/2)] = <Event name={type} style={style} toggleOverlay={()=>{toggleOverlay(type, id)}}/>;\n        })*/\n        if (events.length > 0) {events.forEach(event => {\n            var [type, left, right, id] = [event.type, parseFloat(event.startTime)/100, parseFloat(event.endTime)/100, event.id];\n            //If over the hour, then increment by 50%\n            var offset = parseInt(left%2) == 0 ? 0 : 4;\n            //Divide by 15 minute increments\n            offset += (left-parseInt(left))/0.15;\n            var style = {width: ((right-left)*50)+'%', left: (offset*12.5)+'%'};\n            r[1+parseInt(left/2)] = <Event name={type} style={style} toggleOverlay={()=>{toggleOverlay(type, id)}}/>;\n        })\n    }\n    return r;\n}\n\nfunction Day(props) {\n    var testdata = {'aearhart': [{'startTime': '0530', 'endTime': '0720', 'type': 'flight', 'id': ''}, {'startTime': '1830', 'endTime': '1920', 'type': 'apt', 'id': ''}], \n    'pmitchell': [{'startTime': '0900', 'endTime': '1040', 'type': 'flight', 'id': ''}, {'startTime': '1630', 'endTime': '1920', 'type': 'meeting', 'id': ''}],\n    'clindberg': [{'startTime': '1230', 'endTime': '1500', 'type': 'flight', 'id': ''}],\n    'cyeager': [{'startTime': '2030', 'endTime': '2120', 'type': 'flight', 'id': ''}, {'startTime': '0530', 'endTime': '0820', 'type': 'apt', 'id': ''}],\n    'owright': [{'startTime': '0330', 'endTime': '0720', 'type': 'flight', 'id': ''}],}\n    var data = props.data.length > 0 ? props.data : testdata;\n    console.log(data);\n    var tableRows = [];\n    var teamLength = Object.keys(props.teamdata).length;\n\n    //Create table header \n    var tableHeaders = [];\n    tableHeaders.push(<th></th>);\n    var startIndex, endIndex, inc;\n    switch(props.activeTab) {\n        case \"AM\": \n            [startIndex, endIndex, inc] = [0, 12, 1];\n            break;\n        case \"PM\": \n            [startIndex, endIndex, inc] = [12, 24, 1];\n            break;\n        default: \n            [startIndex, endIndex, inc] = [0, 24, 2];\n            break;\n    }\n    for (var i = startIndex; i < endIndex ; i += inc) {\n        tableHeaders.push(<th>{(i < 10 ? '0'+i.toString() : i.toString())+'00'}</th>);\n    }\n    //Create empty columns for gridline\n    var rowTemplate = [];\n    for (i = 0; i < 12 ; i += 1) {\n        rowTemplate.push(<td></td>);\n    }\n\n    tableRows.push(<tr className='underline'>{createRow(props.userid, props.userdata, props.toggleOverlay, props.activeTab)}</tr>);\n\n    Object.keys(props.teamdata).forEach(key => {\n        if (tableRows.length === teamLength) {\n            //Add divider to last element of team \n            tableRows.push(<tr className='underline'>{createRow(key, props.teamdata[key], props.toggleOverlay, props.activeTab)}</tr>);\n        }\n        else {\n            tableRows.push(<tr>{createRow(key, props.teamdata[key], props.toggleOverlay, props.activeTab)}</tr>);\n        }\n    });\n    \n\n    Object.keys(data).forEach(key => {\n        tableRows.push(<tr>{createRow(key, data[key], props.toggleOverlay)}</tr>);\n    });\n\n    return (\n        <div className=\"day-container\">\n            <table className='schedule-table'>\n                <thead>\n                    <tr>\n                        {tableHeaders}\n                    </tr>\n                </thead>\n                <tbody> \n                    {tableRows}\n                </tbody>\n            </table>\n        </div>\n        \n    )\n}\n\nfunction Legend(props) {\n    return (\n        <div className=\"legend-container\">\n            <div className=\"legend-color flight\"></div>\n            <h4 className=\"legend-entry\">Flight</h4>\n            <div className=\"legend-color apt\"></div>\n            <h4 className=\"legend-entry\">Appointment</h4>\n            <div className=\"legend-color meeting\"></div>\n            <h4 className=\"legend-entry\">Meeting</h4>\n        </div>\n    )\n}\n\n\nclass Schedule extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            date: new Date(),\n            team: [],\n            userid: '',\n            userdata: [],\n            teamdata: [],\n            hasError:false,\n            activeTab: '24HR',\n        }\n    }\n\n\n    getData(newDate) {\n        var date = newDate.getFullYear() + '-' + (newDate.getMonth() < 9 ? '0':'') + (newDate.getMonth()+1) + '-' + (newDate.getDate() < 10 ? '0':'') + (newDate.getDate()) ;\n\n        //get new data\n        firebase.firestore().collection(\"dates\").doc(date)\n        .get()\n        .then((querySnapshot) => {\n            if (!querySnapshot.empty) {\n                var data = querySnapshot.data();\n                var team = this.state.team;\n\n                if (data.events) {\n                    var tmpteamdata = {};\n                    var tmpdata = {};\n\n                    //For each pilot with events today: check if they are user/same team/neither and push accordingly\n                    this.setState({userdata: data.events[this.state.userid] || []})\n                    team.forEach(p => {\n                        tmpteamdata[p] = data.events[p] || []\n                    })\n                    Object.keys(data.events).forEach(key => {\n                        if(!(team.includes(key) || key === this.state.userid)) {\n                            tmpdata[key] = data.events[key];\n                        }\n                    })\n                    this.setState({data: tmpdata, teamdata: tmpteamdata})\n                }\n            }\n            else {\n                console.log(\"Document doesn't exist\");\n                this.setState({data: null});\n            };\n        })\n        .catch(function(error) {\n            //Date doesn't exist \n            firebaseCreateDate(date);\n        });\n    }\n\n    changeDate(offset) {\n        if (offset != 0) {\n            var newDate = new Date(this.state.date);\n            newDate.setDate(newDate.getDate() + offset);\n            this.setState({date: new Date(newDate)})\n            this.getData(newDate);\n        }\n    }\n\n    componentDidMount() {\n        initializeReactGA();\n        \n        //Convert displayName to userID\n        var id = this.props.user[0].toLowerCase() + this.props.user.split(' ')[1].toLowerCase();\n        this.setState({userid: id});\n        \n         //get team members\n         firebase.firestore().collection(\"pilots\").doc(id)\n         .get()\n         .then((querySnapshot) => {\n             if (!querySnapshot.empty) {\n                 var data = querySnapshot.data();\n                 this.setState({team: data.team});\n             }\n             else {\n                 console.log(\"Document doesn't exist\");\n                 this.setState({team: null});\n             };\n         })\n         .catch(function(error) {\n             console.log(\"Error getting documents: \", error);\n         });\n\n         this.getData(new Date())\n    }\n\n    componentDidCatch(error, info) {\n        // Display fallback UI\n        this.setState({ hasError: true });\n        console.log(error, info);\n    }\n\n\n    render() {\n        if (this.state.hasError) {\n            return <ErrorPage/>\n        }\n        return (\n            <div className='page-container'>\n                <RenderDayHeader date={this.state.date} changeDate={(i)=>{this.changeDate(i)}} setState={(newTab)=>{this.setState({activeTab: newTab})}} activeTab={this.state.activeTab}/>\n                <Day toggleOverlay={(event,id)=>{this.props.toggleOverlay(event, id)}} data={this.state.data} teamdata={this.state.teamdata}\n                    userid={this.state.userid} \n                    userdata={this.state.userdata}\n                    activeTab={this.state.activeTab}/>\n                <Legend/>\n            </div>\n        )\n    }\n}\n\nexport default Schedule;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import firebase from \"./Firebase.js\";\nimport { randomBytes } from \"crypto\"; // Add a new document in collection \"dates\"\n\n/*for (var i = 1; i <= 3; i++) {\n    var date = '06-' + (i < 10 ? '0': '') + i + '-2019';\nfirebase.firestore().collection(\"dates\").doc(date).set({\ntwilight: {civil: null, naut: null},\ndutymtp: null,\noic: null,\ngroundrun: null,\ndesksgt: {day: null, night: null},\nfdo: {day: null, night: null}\n})\n.then(()=> {\nconsole.log(\"Document successfully written!\");\n})\n.catch(function(error) {\nconsole.error(\"Error writing document: \", error);\n});}*/\n\nfunction getRandom(x, y) {\n  var min = Math.ceil(x);\n  var max = Math.floor(y);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction updateData() {\n  /*** \n  firebase.firestore().collection(\"pilots\").doc('aearhart').set({\n  team: 1, \n  role: 'aviator',\n  lastFlight: '01-01-2019',\n  })\n  .then(function(docRef) {\n  console.log(\"Document successfully written!\", docRef.id);\n  })\n  .catch(function(error) {\n  console.error(\"Error writing document: \", error);\n  });\n  firebase.firestore().collection(\"pilots\").doc('clindbergh').set({\n  team: 1, \n  role: 'aviator',\n  lastFlight: '01-01-2019',\n  })\n  .then(function(docRef) {\n  console.log(\"Document successfully written!\", docRef.id);\n  })\n  .catch(function(error) {\n  console.error(\"Error writing document: \", error);\n  });\n  firebase.firestore().collection(\"pilots\").doc('pmitchell').set({\n  team: 1, \n  displayName: 'Pete Mitchell',\n  role: 'ace',\n  lastFlight: '01-01-2019',\n  })\n  .then(function(docRef) {\n  console.log(\"Document successfully written!\", docRef.id);\n  })\n  .catch(function(error) {\n  console.error(\"Error writing document: \", error);\n  });\n  firebase.firestore().collection(\"pilots\").doc('jdoolittle').set({\n  team: 1, \n  displayName: 'Jimmy Doolittle',\n  role: 'aviator',\n  lastFlight: '01-01-2019',\n  })\n  .then(function(docRef) {\n  console.log(\"Document successfully written!\", docRef.id);\n  })\n  .catch(function(error) {\n  console.error(\"Error writing document: \", error);\n  });\n  firebase.firestore().collection(\"pilots\").doc('cyeager').set({\n  team: 2, \n  displayName: 'Chuck Yeager',\n  role: 'test pilot',\n  lastFlight: '01-01-2019',\n  })\n  .then(function(docRef) {\n  console.log(\"Document successfully written!\", docRef.id);\n  })\n  .catch(function(error) {\n  console.error(\"Error writing document: \", error);\n  });\n  firebase.firestore().collection(\"pilots\").doc('owright').set({\n  team: 1, \n  displayName: 'Orvill Wright',\n  role: 'test pilot',\n  lastFlight: '01-01-2019',\n  })\n  .then(function(docRef) {\n  console.log(\"Document successfully written!\", docRef.id);\n  })\n  .catch(function(error) {\n  console.error(\"Error writing document: \", error);\n  });\n  firebase.firestore().collection(\"pilots\").doc('ehartmann').set({\n  team: 2,\n  displayName: 'Erich Hartmann',\n  role: 'ace',\n  lastFlight: '01-01-2019',\n  })\n  .then(function(docRef) {\n  console.log(\"Document successfully written!\", docRef.id);\n  })\n  .catch(function(error) {\n  console.error(\"Error writing document: \", error);\n  });\n  firebase.firestore().collection(\"pilots\").doc('wwright').set({\n  team: 2,\n  displayName: 'Wilbur Wright',\n  role: 'aviator',\n  lastFlight: '01-01-2019',\n  })\n  .then(function(docRef) {\n  console.log(\"Document successfully written!\", docRef.id);\n  })\n  .catch(function(error) {\n  console.error(\"Error writing document: \", error);\n  });*/\n\n  /** \n  \n  var ac = [472, 582, 479, 496, 428, 409]\n  var pilots = ['wwright', 'clindbergh', 'cyeager', 'aearhart', 'pmitchell', 'jdoolittle', 'ehartmann', 'owright'];\n  var config = ['NR FF', \"V FF\", \"DC6S\", \"DC0S\"];\n  var dco = ['ok','ok','ok','ok','ok','ok','warn', 'warn', 'bad'];\n  var details = ['SME', \"ALP2\"];\n  \n  for (var i  = 0; i < 10 ; i ++) {\n      var pilot = pilots[getRandom(0, 7)];\n      var fo = pilots[getRandom(0, 7)];\n      var date = \"2019-07-\" + getRandom(18, 30);\n      var acval = ac[getRandom(0, 5)];\n      var configval = config[getRandom(0, 3)];\n      var detail = details[getRandom(0, 1)];\n      var end=  parseInt(getRandom(0, 23) + getRandom(0, 5) +'0');\n      var start = parseInt(getRandom(Math.floor(end/100), 23) + getRandom(0, 5) +'0');\n  var newEvent = firebase.firestore().collection(\"events\").doc();\n  var newUpcomingEvent = firebase.firestore().collection('pilots').doc(pilot).collection('upcoming-events').doc();\n  \n  \n  \n  newUpcomingEvent.set({\n      ac: acval,\n      captain: pilot,\n      flightid: newEvent.id,\n      config: configval,\n      date: date,\n      fo: fo,\n      details: detail,\n      timeEnd: end,\n      timeStart: start,\n      })\n  .then(function(docRef) {\n      console.log(\"Document successfully written!\");})\n  .catch(function(error) {\n      console.error(\"Error writing document: \", error);\n  })\n  \n  newEvent.set({\n      ac: acval,\n      captain: pilot,\n      config: configval,\n      date: date,\n      dco: dco[getRandom(0, 8)],\n      details: detail,\n      fo: fo,\n      mission: \"427 AU H\"+ getRandom(1, 8) + getRandom(0,6) + \"3 G0\" + getRandom(0, 9),\n      pri: getRandom(1, 6),\n      remarks: getRandom(1,6) == 4 ? 'Academic Shoot' : '',\n      meal: getRandom(1,15) == 6 ? true : false,\n      timeEnd: end,\n      timeStart: start,\n      type: \"flight\",\n      })\n  .then(function(docRef) {\n      console.log(\"Document successfully written!\");})\n  .catch(function(error) {\n      console.error(\"Error writing document: \", error);\n  })\n  \n  \n  \n  }\n  */\n\n  /*\n  firebase.firestore().collection(\"pilots\").doc('aearhart').set({\n      ac: ac[getRandom(0, 5)],\n      captain: pilots[getRandom(0, 7)],\n      config: config[getRandom(0, 3)],\n      date: \"2019-07-\" + getRandom(18, 30),\n      dco: dco[getRandom(0, 8)],\n      details: details[getRandom(0, 1)],\n      fo: pilots[getRandom(0,7)],\n      mission: \"427 AU H\"+ getRandom(1, 8) + getRandom(0,6) + \"3 G0\" + getRandom(0, 9),\n      pri: getRandom(1, 6),\n      remarks: getRandom(1,6) == 4 ? 'Academic Shoot' : '',\n      meal: getRandom(1,15) == 6 ? true : false,\n      timeEnd: parseInt(getRandom(0, 23) + getRandom(0, 5) +'0'),\n      timeStart: parseInt(getRandom(0, 23) + getRandom(0, 5) +'0'),\n      type: \"flight\",\n      })\n  .then(function(docRef) {\n      console.log(\"Document successfully written!\");})\n  .catch(function(error) {\n      console.error(\"Error writing document: \", error);\n  })*/\n  var ac = [472, 582, 479, 496, 428, 409];\n  var pilots = ['wwright', 'clindbergh', 'cyeager', 'aearhart', 'pmitchell', 'jdoolittle', 'ehartmann', 'owright'];\n  var config = ['NR FF', \"V FF\", \"DC6S\", \"DC0S\"];\n  var dco = ['ok', 'ok', 'ok', 'ok', 'ok', 'ok', 'warn', 'warn', 'bad'];\n  var details = ['SME', \"ALP2\"];\n  var state = {};\n\n  for (var i = 0; i < 10; i++) {\n    state.captain = pilots[getRandom(0, 7)];\n    state.fo = pilots[getRandom(0, 7)];\n    state.date = \"2019-07-\" + getRandom(18, 30);\n    state.ac = ac[getRandom(0, 5)];\n    state.config = config[getRandom(0, 3)];\n    state.details = details[getRandom(0, 1)];\n    state.timeStart = parseInt(getRandom(0, 23) + getRandom(0, 5) + '0');\n    state.timeEnd = parseInt(getRandom(Math.floor(state.timeStart / 100), 23) + getRandom(0, 5) + '0');\n    console.log(this.state);\n    var newEvent = firebase.firestore().collection(\"events\").doc();\n    newEvent.set(this.state).then(function () {\n      console.log(\"Event successfully added to events!\");\n    }).catch(function (error) {\n      console.error(\"Error adding event: \", error);\n    });\n    var updates = {};\n    updates['events.' + state.captain] = firebase.firestore.FieldValue.arrayUnion({\n      'type': 'flight',\n      'startTime': state.timeStart,\n      'endTime': state.timeEnd,\n      'id': newEvent.id\n    });\n    updates['events.' + state.fo] = firebase.firestore.FieldValue.arrayUnion({\n      'type': 'flight',\n      'startTime': state.timeStart,\n      'endTime': state.timeEnd,\n      'id': newEvent.id\n    });\n    var newUpcomingEvents = [firebase.firestore().collection('pilots').doc(state.captain).collection('upcoming-events').doc(), firebase.firestore().collection('pilots').doc(state.captain).collection('upcoming-events').doc()];\n\n    if (state.fe) {\n      updates['events.' + state.fo] = firebase.firestore.FieldValue.arrayUnion({\n        'type': 'flight',\n        'startTime': state.timeStart,\n        'endTime': state.timeEnd,\n        'id': newEvent.id\n      });\n      newUpcomingEvents.push(firebase.firestore().collection('pilots').doc(state.fe).collection('upcoming-events').doc());\n    }\n\n    if (state.crew) {\n      updates['events.' + state.fo] = firebase.firestore.FieldValue.arrayUnion({\n        'type': 'flight',\n        'startTime': state.timeStart,\n        'endTime': state.timeEnd,\n        'id': newEvent.id\n      });\n      newUpcomingEvents.push(firebase.firestore().collection('pilots').doc(state.crew).collection('upcoming-events').doc());\n    }\n\n    firebase.firestore().collection(\"dates\").doc(state.date).update(updates).then(function () {\n      console.log(\"Event successfully added to dates!\");\n    }).catch(function (error) {\n      console.error(\"Error writing document: \", error);\n    });\n    newUpcomingEvents.forEach(x => {\n      x.set({\n        ac: state.ac,\n        captain: state.captain,\n        flightid: newEvent.id,\n        config: state.config,\n        date: state.date,\n        fo: state.fo,\n        fe: state.fe,\n        crew: state.crew,\n        details: state.details,\n        timeEnd: state.timeEnd,\n        timeStart: state.timeStart\n      }).then(function () {\n        console.log(\"Event successfully added to pilots!\");\n      }).catch(function (error) {\n        console.error(\"Error writing document: \", error);\n      });\n    });\n  }\n}\n\nexport default updateData;","map":{"version":3,"sources":["/Users/jenny/Desktop/SOAS/scheduler/src/insertDataTest.js"],"names":["firebase","randomBytes","getRandom","x","y","min","Math","ceil","max","floor","random","updateData","ac","pilots","config","dco","details","state","i","captain","fo","date","timeStart","parseInt","timeEnd","console","log","newEvent","firestore","collection","doc","set","then","catch","error","updates","FieldValue","arrayUnion","id","newUpcomingEvents","fe","push","crew","update","forEach","flightid"],"mappings":"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","sourcesContent":["import firebase from \"./Firebase.js\";\nimport { randomBytes } from \"crypto\";\n\n    // Add a new document in collection \"dates\"\n    /*for (var i = 1; i <= 3; i++) {\n        var date = '06-' + (i < 10 ? '0': '') + i + '-2019';\nfirebase.firestore().collection(\"dates\").doc(date).set({\n    twilight: {civil: null, naut: null},\n    dutymtp: null,\n    oic: null,\n    groundrun: null,\n    desksgt: {day: null, night: null},\n    fdo: {day: null, night: null}\n})\n.then(()=> {\n    console.log(\"Document successfully written!\");\n})\n.catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});}*/\n\nfunction getRandom(x, y) {\n    var min = Math.ceil(x);\n    var max = Math.floor(y);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n\nfunction updateData() {\n    /*** \nfirebase.firestore().collection(\"pilots\").doc('aearhart').set({\n    team: 1, \n    role: 'aviator',\n    lastFlight: '01-01-2019',\n})\n    .then(function(docRef) {\n    console.log(\"Document successfully written!\", docRef.id);\n    })\n    .catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});\nfirebase.firestore().collection(\"pilots\").doc('clindbergh').set({\n    team: 1, \n    role: 'aviator',\n    lastFlight: '01-01-2019',\n    })\n    .then(function(docRef) {\n    console.log(\"Document successfully written!\", docRef.id);\n    })\n    .catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});\nfirebase.firestore().collection(\"pilots\").doc('pmitchell').set({\n    team: 1, \n    displayName: 'Pete Mitchell',\n    role: 'ace',\n    lastFlight: '01-01-2019',\n    })\n    .then(function(docRef) {\n    console.log(\"Document successfully written!\", docRef.id);\n    })\n    .catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});\n\nfirebase.firestore().collection(\"pilots\").doc('jdoolittle').set({\n    team: 1, \n    displayName: 'Jimmy Doolittle',\n    role: 'aviator',\n    lastFlight: '01-01-2019',\n    })\n    .then(function(docRef) {\n    console.log(\"Document successfully written!\", docRef.id);\n    })\n    .catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});\nfirebase.firestore().collection(\"pilots\").doc('cyeager').set({\n    team: 2, \n    displayName: 'Chuck Yeager',\n    role: 'test pilot',\n    lastFlight: '01-01-2019',\n    })\n    .then(function(docRef) {\n    console.log(\"Document successfully written!\", docRef.id);\n    })\n    .catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});\nfirebase.firestore().collection(\"pilots\").doc('owright').set({\n    team: 1, \n    displayName: 'Orvill Wright',\n    role: 'test pilot',\n    lastFlight: '01-01-2019',\n    })\n    .then(function(docRef) {\n    console.log(\"Document successfully written!\", docRef.id);\n    })\n    .catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});\nfirebase.firestore().collection(\"pilots\").doc('ehartmann').set({\n    team: 2,\n    displayName: 'Erich Hartmann',\n    role: 'ace',\n    lastFlight: '01-01-2019',\n    })\n    .then(function(docRef) {\n    console.log(\"Document successfully written!\", docRef.id);\n    })\n    .catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});\nfirebase.firestore().collection(\"pilots\").doc('wwright').set({\n    team: 2,\n    displayName: 'Wilbur Wright',\n    role: 'aviator',\n    lastFlight: '01-01-2019',\n    })\n    .then(function(docRef) {\n    console.log(\"Document successfully written!\", docRef.id);\n    })\n    .catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});*/\n\n\n/** \n\nvar ac = [472, 582, 479, 496, 428, 409]\nvar pilots = ['wwright', 'clindbergh', 'cyeager', 'aearhart', 'pmitchell', 'jdoolittle', 'ehartmann', 'owright'];\nvar config = ['NR FF', \"V FF\", \"DC6S\", \"DC0S\"];\nvar dco = ['ok','ok','ok','ok','ok','ok','warn', 'warn', 'bad'];\nvar details = ['SME', \"ALP2\"];\n\nfor (var i  = 0; i < 10 ; i ++) {\n    var pilot = pilots[getRandom(0, 7)];\n    var fo = pilots[getRandom(0, 7)];\n    var date = \"2019-07-\" + getRandom(18, 30);\n    var acval = ac[getRandom(0, 5)];\n    var configval = config[getRandom(0, 3)];\n    var detail = details[getRandom(0, 1)];\n    var end=  parseInt(getRandom(0, 23) + getRandom(0, 5) +'0');\n    var start = parseInt(getRandom(Math.floor(end/100), 23) + getRandom(0, 5) +'0');\nvar newEvent = firebase.firestore().collection(\"events\").doc();\nvar newUpcomingEvent = firebase.firestore().collection('pilots').doc(pilot).collection('upcoming-events').doc();\n\n\n\nnewUpcomingEvent.set({\n    ac: acval,\n    captain: pilot,\n    flightid: newEvent.id,\n    config: configval,\n    date: date,\n    fo: fo,\n    details: detail,\n    timeEnd: end,\n    timeStart: start,\n    })\n.then(function(docRef) {\n    console.log(\"Document successfully written!\");})\n.catch(function(error) {\n    console.error(\"Error writing document: \", error);\n})\n\nnewEvent.set({\n    ac: acval,\n    captain: pilot,\n    config: configval,\n    date: date,\n    dco: dco[getRandom(0, 8)],\n    details: detail,\n    fo: fo,\n    mission: \"427 AU H\"+ getRandom(1, 8) + getRandom(0,6) + \"3 G0\" + getRandom(0, 9),\n    pri: getRandom(1, 6),\n    remarks: getRandom(1,6) == 4 ? 'Academic Shoot' : '',\n    meal: getRandom(1,15) == 6 ? true : false,\n    timeEnd: end,\n    timeStart: start,\n    type: \"flight\",\n    })\n.then(function(docRef) {\n    console.log(\"Document successfully written!\");})\n.catch(function(error) {\n    console.error(\"Error writing document: \", error);\n})\n\n\n\n}\n*/\n\n\n/*\nfirebase.firestore().collection(\"pilots\").doc('aearhart').set({\n    ac: ac[getRandom(0, 5)],\n    captain: pilots[getRandom(0, 7)],\n    config: config[getRandom(0, 3)],\n    date: \"2019-07-\" + getRandom(18, 30),\n    dco: dco[getRandom(0, 8)],\n    details: details[getRandom(0, 1)],\n    fo: pilots[getRandom(0,7)],\n    mission: \"427 AU H\"+ getRandom(1, 8) + getRandom(0,6) + \"3 G0\" + getRandom(0, 9),\n    pri: getRandom(1, 6),\n    remarks: getRandom(1,6) == 4 ? 'Academic Shoot' : '',\n    meal: getRandom(1,15) == 6 ? true : false,\n    timeEnd: parseInt(getRandom(0, 23) + getRandom(0, 5) +'0'),\n    timeStart: parseInt(getRandom(0, 23) + getRandom(0, 5) +'0'),\n    type: \"flight\",\n    })\n.then(function(docRef) {\n    console.log(\"Document successfully written!\");})\n.catch(function(error) {\n    console.error(\"Error writing document: \", error);\n})*/\n\n\nvar ac = [472, 582, 479, 496, 428, 409]\nvar pilots = ['wwright', 'clindbergh', 'cyeager', 'aearhart', 'pmitchell', 'jdoolittle', 'ehartmann', 'owright'];\nvar config = ['NR FF', \"V FF\", \"DC6S\", \"DC0S\"];\nvar dco = ['ok','ok','ok','ok','ok','ok','warn', 'warn', 'bad'];\nvar details = ['SME', \"ALP2\"];\nvar state = {};\n\nfor (var i  = 0; i < 10 ; i ++) {\n    state.captain = pilots[getRandom(0, 7)];\n    state.fo = pilots[getRandom(0, 7)];\n    state.date = \"2019-07-\" + getRandom(18, 30);\n    state.ac = ac[getRandom(0, 5)];\n    state.config = config[getRandom(0, 3)];\n    state.details = details[getRandom(0, 1)];\n    state.timeStart=  parseInt(getRandom(0, 23) + getRandom(0, 5) +'0');\n    state.timeEnd = parseInt(getRandom(Math.floor(state.timeStart/100), 23) + getRandom(0, 5) +'0');\n    console.log(this.state);\n    var newEvent = firebase.firestore().collection(\"events\").doc();\n    newEvent.set(this.state)\n    .then(function() {\n        console.log(\"Event successfully added to events!\");})\n    .catch(function(error) {\n        console.error(\"Error adding event: \", error);\n    });\n\n    var updates = {};\n    updates['events.'+state.captain] = firebase.firestore.FieldValue.arrayUnion({'type':'flight', 'startTime': state.timeStart, 'endTime': state.timeEnd, 'id':newEvent.id});\n    updates['events.'+state.fo] = firebase.firestore.FieldValue.arrayUnion({'type':'flight', 'startTime': state.timeStart, 'endTime': state.timeEnd, 'id':newEvent.id});\n    var newUpcomingEvents = [firebase.firestore().collection('pilots').doc(state.captain).collection('upcoming-events').doc(),\n    firebase.firestore().collection('pilots').doc(state.captain).collection('upcoming-events').doc()];\n\n    if (state.fe) {\n        updates['events.'+state.fo] = firebase.firestore.FieldValue.arrayUnion({'type':'flight', 'startTime': state.timeStart, 'endTime': state.timeEnd, 'id':newEvent.id});\n        newUpcomingEvents.push(firebase.firestore().collection('pilots').doc(state.fe).collection('upcoming-events').doc());\n    }\n    if (state.crew) {\n        updates['events.'+state.fo] = firebase.firestore.FieldValue.arrayUnion({'type':'flight', 'startTime': state.timeStart, 'endTime': state.timeEnd, 'id':newEvent.id});\n        newUpcomingEvents.push(firebase.firestore().collection('pilots').doc(state.crew).collection('upcoming-events').doc());\n    }\n    firebase.firestore().collection(\"dates\").doc(state.date).update(updates)\n    .then(function() {\n        console.log(\"Event successfully added to dates!\");})\n    .catch(function(error) {\n        console.error(\"Error writing document: \", error);\n    })\n\n    newUpcomingEvents.forEach((x)=>{x.set({\n        ac: state.ac,\n        captain: state.captain,\n        flightid: newEvent.id,\n        config: state.config,\n        date: state.date,\n        fo: state.fo,\n        fe: state.fe,\n        crew: state.crew,\n        details: state.details,\n        timeEnd: state.timeEnd,\n        timeStart: state.timeStart,})\n    .then(function() {\n        console.log(\"Event successfully added to pilots!\");})\n    .catch(function(error) {\n        console.error(\"Error writing document: \", error);\n    })})\n}\n\n}\n\nexport default updateData;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import XLSX from 'xlsx';\nimport firebase from \"./Firebase.js\";\nconst flightHeaders = [\"startTime\", \"endTime\", \"ac\", \"captain\", \"config\", \"fo\", \"fe\", \"crew\", \"details\", \"backup\", \"mission\", \"details\", \"config\", \"remarks\", \"pri\", \"meal\", \"dco\"];\nvar flightData = [];\n\nfunction s2ab(s) {\n  var buf = new ArrayBuffer(s.length);\n  var view = new Uint8Array(buf);\n\n  for (var i = 0; i < s.length; i++) view[i] = s.charCodeAt(i) & 0xFF;\n\n  return buf;\n}\n\nconst download = (url, name) => {\n  let a = document.createElement('a');\n  a.href = url;\n  a.download = name;\n  a.click();\n  window.URL.revokeObjectURL(url);\n};\n\nfunction getFlightsFromID(ids) {\n  console.log(\"ids: \", ids);\n  var flights = [flightHeaders];\n  firebase.firestore().collection(\"events\").where(firebase.firestore.FieldPath.documentId(), 'in', ids).get().then(querySnapshot => {\n    console.log(querySnapshot.docs);\n    querySnapshot.docs.forEach(d => {\n      var d = querySnapshot.data();\n      flights.push([d.startTime, d.endTime, d.ac, d.captain, d.config, d.fo, d.fe, d.crew, d.details, d.backup, d.mission, d.details, d.config, d.remarks, d.pri, d.meal, d.dco]);\n    });\n    return flights;\n  }).catch(function (error) {\n    console.log(\"Error getting data: \", error);\n  });\n}\n\nfunction Export(ids, dayInfo) {\n  //Gathering all data: \n  var data = getFlightsFromID(ids);\n  console.log(\"getFlights(): \", data);\n  /* convert from array of arrays to workbook */\n\n  var worksheet = XLSX.utils.aoa_to_sheet(data);\n  var new_workbook = XLSX.utils.book_new();\n  XLSX.utils.book_append_sheet(new_workbook, worksheet, \"ExportedFile\");\n  /* write file */\n\n  const wbout = XLSX.write(new_workbook, {\n    type: 'binary',\n    bookType: \"xlsx\"\n  });\n  let url = window.URL.createObjectURL(new Blob([s2ab(wbout)], {\n    type: 'application/octet-stream'\n  }));\n  download(url, 'DailyFlyingOrder.xlsx');\n}\n\nexport default Export;","map":{"version":3,"sources":["/Users/jenny/Desktop/SOAS/scheduler/src/Export.js"],"names":["XLSX","firebase","flightHeaders","flightData","s2ab","s","buf","ArrayBuffer","length","view","Uint8Array","i","charCodeAt","download","url","name","a","document","createElement","href","click","window","URL","revokeObjectURL","getFlightsFromID","ids","console","log","flights","firestore","collection","where","FieldPath","documentId","get","then","querySnapshot","docs","forEach","d","data","push","startTime","endTime","ac","captain","config","fo","fe","crew","details","backup","mission","remarks","pri","meal","dco","catch","error","Export","dayInfo","worksheet","utils","aoa_to_sheet","new_workbook","book_new","book_append_sheet","wbout","write","type","bookType","createObjectURL","Blob"],"mappings":"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","sourcesContent":["import XLSX from 'xlsx';\nimport firebase from \"./Firebase.js\";\n\nconst flightHeaders = [\"startTime\",\"endTime\",\"ac\",\"captain\",\"config\",\"fo\",\"fe\",\"crew\",\"details\",\"backup\",\"mission\",\"details\",\"config\",\"remarks\",\"pri\",\"meal\",\"dco\"];\nvar flightData = [];\n\nfunction s2ab(s) {\n    var buf = new ArrayBuffer(s.length);\n    var view = new Uint8Array(buf);\n    for (var i=0; i<s.length; i++) view[i] = s.charCodeAt(i) & 0xFF;\n    return buf;\n}\n\nconst download = (url, name) => {\n    let a = document.createElement('a')\n    a.href = url\n    a.download = name\n    a.click()\n\n    window.URL.revokeObjectURL(url)\n}\n\nfunction getFlightsFromID(ids) {\n    console.log(\"ids: \", ids)\n    var flights = [flightHeaders];\n        firebase.firestore().collection(\"events\").where(firebase.firestore.FieldPath.documentId(), 'in', ids)\n            .get()\n            .then((querySnapshot) => {\n                console.log(querySnapshot.docs);\n                querySnapshot.docs.forEach((d) => {\n                    var d = querySnapshot.data();\n                    flights.push([\n                        d.startTime,\n                        d.endTime,\n                        d.ac,\n                        d.captain,\n                        d.config,\n                        d.fo,\n                        d.fe,\n                        d.crew,\n                        d.details,\n                        d.backup,\n                        d.mission,\n                        d.details,\n                        d.config,\n                        d.remarks,\n                        d.pri,\n                        d.meal,\n                        d.dco,]);\n                    })\n                    return flights;\n                })\n                \n                \n            \n            .catch(function(error) {\n                console.log(\"Error getting data: \", error);\n            });\n\n}\n\nfunction Export(ids, dayInfo) {\n    //Gathering all data: \n    var data = getFlightsFromID(ids);\n    console.log(\"getFlights(): \", data)\n    /* convert from array of arrays to workbook */\n    var worksheet = XLSX.utils.aoa_to_sheet(data);\n    var new_workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(new_workbook, worksheet, \"ExportedFile\");\n\n\n    /* write file */\n    const wbout = XLSX.write(new_workbook, {type:'binary', bookType:\"xlsx\"});\n\n    let url = window.URL.createObjectURL(new Blob([s2ab(wbout)], {type:'application/octet-stream'}))\n\n    download(url, 'DailyFlyingOrder.xlsx')\n}\n\nexport default Export;\n\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/jenny/Desktop/SOAS/scheduler/src/Flights.js\";\nimport React from 'react';\nimport \"./Flights.css\";\nimport RIGHT_BTN from './img/right-arrow.png';\nimport LEFT_BTN from './img/left-arrow.png';\nimport firebase from \"./Firebase.js\";\nvar today = new Date();\nvar dd = String(today.getDate()).padStart(2, '0');\nvar mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n\nvar yyyy = today.getFullYear();\ntoday = mm + '/' + dd + '/' + yyyy;\n/** var data = []\nfirebase.collection(\"flights\").get().then(querySnapshot => {\nquerySnapshot.docs.map(doc => {\n    console.log(doc)\n});})*/\n\nfunction date(curDate) {\n  //var today = new Date();\n  var weekday = curDate.getDay();\n  var day = curDate.getDate();\n  var month = curDate.getMonth();\n  var year = curDate.getFullYear();\n  var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  return React.createElement(\"div\", {\n    className: \"flight-date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, days[weekday] + \", \" + months[month] + \" \" + day + \", \" + year));\n}\n\nfunction RenderFlightDayHeader(props) {\n  var displayDate = new Date(props.date);\n  var curDate = new Date();\n  var diff = Math.round((displayDate.getTime() - curDate.getTime()) / (24 * 60 * 60 * 1000)); // Only show flights for last 3 days to the next 2 weeks\n\n  var disableLeft = diff == -3;\n  var disableRight = diff == 14;\n  return React.createElement(\"div\", {\n    className: \"flight-day-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: 'date-btn' + (disableLeft ? ' disabled' : ''),\n    src: LEFT_BTN,\n    onClick: () => {\n      props.changeDate(disableLeft ? 0 : -1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), date(displayDate), React.createElement(\"img\", {\n    className: 'date-btn' + (disableRight ? ' disabled' : ''),\n    src: RIGHT_BTN,\n    onClick: () => {\n      props.changeDate(disableRight ? 0 : 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }));\n}\n\nfunction RenderFlightDay(props) {\n  var d = new Date(props.date);\n  var date = (d.getMonth() < 10 ? '0' : '') + d.getMonth() + '-' + d.getDate() + '-' + d.getFullYear();\n  var headers = ['ETD', 'AC', 'CREW', 'MISSION', 'DETAILS', 'CONFIG', 'REMARKS', 'SQ PRI', 'DCO', 'ETR'];\n  var tableHeaders = [];\n  var ac = React.createElement(\"div\", {\n    className: \"ac-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"462\");\n  var dot = React.createElement(\"div\", {\n    className: \"dot-ok\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  });\n  headers.forEach(title => {\n    tableHeaders.push(React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, title));\n  });\n  var data = [['0900', ac, 'Amelia E | Charlies L', '427 AU H102 G00', 'SME', 'DC6S', \"\", '1 SOA', dot, '1030'], ['2520', ac, 'D.B. Cooper | Maverick', '427 AU H105 G00', 'ALP1', 'DC6S', \"\", '3 SOA', dot, '1230']];\n  var tableRows = [];\n  data.forEach(row => {\n    var r = [];\n\n    for (var i = 0; i < row.length; i++) {\n      r.push(React.createElement(\"td\", {\n        className: headers[i].toLowerCase(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, row[i]));\n    }\n\n    var hr = parseInt(row[0][0] + row[0][1]);\n    var min = parseInt(row[0][2] + row[0][3]);\n    tableRows.push(React.createElement(\"tr\", {\n      className: props.curTime.getHours() > hr || hr == props.curTime.getHours() && props.curTime.getMinutes() > min ? 'expired' : '',\n      onClick: props.toggleOverlay.bind(this, '521512'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, r));\n  });\n  return React.createElement(\"div\", {\n    className: \"flight-day\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, tableHeaders), tableRows));\n}\n\nfunction RenderFlightDayBox(props) {\n  return React.createElement(\"div\", {\n    className: \"flight-day-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(RenderFlightDayHeader, {\n    date: props.date,\n    changeDate: offset => {\n      props.changeDate(offset);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(RenderFlightDay, {\n    date: props.date,\n    curTime: props.curTime,\n    toggleOverlay: id => {\n      props.toggleOverlay(id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }));\n}\n\nfunction RenderInfoBox(props) {\n  return React.createElement(\"div\", {\n    className: \"info-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"info-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, props.title)), React.createElement(\"div\", {\n    className: \"info-content\",\n    contentEditable: true,\n    suppressContentEditableWarning: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"N/A\")));\n}\n\nfunction RenderInfoBar(props) {\n  const default_info = [\"EVENING TWILIGHT\", \"SNAGS DESK SGT\", \"DUTY MVP\", \"FDO\", \"DUTY GROUND RUN\"];\n  var boxes = [];\n\n  for (var i = 0; i < default_info.length; i++) {\n    var title = default_info[i];\n    boxes.push(React.createElement(RenderInfoBox, {\n      title: title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"info-bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"time-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"CURRENT TIME\")), React.createElement(\"div\", {\n    className: \"time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, (props.curTime.getHours() < 10 ? \"0\" : \"\") + props.curTime.getHours() + ':' + (props.curTime.getMinutes() < 10 ? \"0\" : \"\") + props.curTime.getMinutes())), boxes);\n}\n\nclass Flights extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      curTime: new Date(),\n      date: new Date()\n    };\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      curTime: new Date()\n    });\n  }\n\n  changeDate(offset) {\n    if (offset != 0) {\n      var newDate = new Date(this.state.date);\n      newDate.setDate(newDate.getDate() + offset);\n      this.setState({\n        date: newDate\n      }); //get new data\n\n      firebase.firestore().collection(\"events\").where('type', '==', 'flight').where('date', '==', date).get().then(function (querySnapshot) {\n        console.log(querySnapshot);\n\n        if (!querySnapshot.empty) {\n          querySnapshot.forEach(function (doc) {\n            // doc.data() is never undefined for query doc snapshots\n            console.log(doc.id, \" => \", doc.data());\n          });\n        } else {\n          firebase.firestore().collection(\"dates\").doc(date).set({\n            twilight: {\n              civil: null,\n              naut: null\n            },\n            dutymtp: null,\n            oic: null,\n            groundrun: null,\n            desksgt: {\n              day: null,\n              night: null\n            },\n            fdo: {\n              day: null,\n              night: null\n            }\n          }).then(function (docRef) {\n            console.log(\"Document successfully written!\", docRef.id);\n          }).catch(function (error) {\n            console.error(\"Error writing document: \", error);\n          });\n        }\n\n        ;\n      }).catch(function (error) {\n        console.log(\"Error getting documents: \", error);\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(RenderFlightDayBox, {\n      date: this.state.date,\n      curTime: this.state.curTime,\n      toggleOverlay: id => {\n        this.props.toggleOverlay(id);\n      },\n      changeDate: offset => {\n        this.changeDate(offset);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), React.createElement(RenderInfoBar, {\n      date: this.state.date,\n      curTime: this.state.curTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Flights;","map":{"version":3,"sources":["/Users/jenny/Desktop/SOAS/scheduler/src/Flights.js"],"names":["React","RIGHT_BTN","LEFT_BTN","firebase","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","date","curDate","weekday","getDay","day","month","year","days","months","RenderFlightDayHeader","props","displayDate","diff","Math","round","getTime","disableLeft","disableRight","changeDate","RenderFlightDay","d","headers","tableHeaders","ac","dot","forEach","title","push","data","tableRows","row","r","i","length","toLowerCase","hr","parseInt","min","curTime","getHours","getMinutes","toggleOverlay","bind","RenderFlightDayBox","offset","id","RenderInfoBox","RenderInfoBar","default_info","boxes","Flights","Component","constructor","state","componentDidMount","timerID","setInterval","tick","componentWillUnmount","clearInterval","setState","newDate","setDate","firestore","collection","where","get","then","querySnapshot","console","log","empty","doc","set","twilight","civil","naut","dutymtp","oic","groundrun","desksgt","night","fdo","docRef","catch","error","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport \"./Flights.css\";\nimport RIGHT_BTN from './img/right-arrow.png';\nimport LEFT_BTN from './img/left-arrow.png';\nimport firebase from \"./Firebase.js\";\n\nvar today = new Date();\nvar dd = String(today.getDate()).padStart(2, '0');\nvar mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\nvar yyyy = today.getFullYear();\n\ntoday = mm + '/' + dd + '/' + yyyy;\n\n/** var data = []\nfirebase.collection(\"flights\").get().then(querySnapshot => {\nquerySnapshot.docs.map(doc => {\n    console.log(doc)\n});})*/\n\n\n\nfunction date(curDate) {\n    //var today = new Date();\n    var weekday = curDate.getDay();\n    var day = curDate.getDate();\n    var month = curDate.getMonth();\n    var year = curDate.getFullYear();\n    var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\",\"December\"];\n    return (\n        <div className='flight-date'>\n            <h2>{days[weekday] +\", \"+months[month]+\" \"+day+\", \"+year}</h2>\n        </div>\n    )\n}\n\nfunction RenderFlightDayHeader(props) {\n    var displayDate = new Date(props.date);\n    var curDate = new Date();\n    var diff = Math.round((displayDate.getTime() - curDate.getTime())/(24*60*60*1000));\n\n    // Only show flights for last 3 days to the next 2 weeks\n    var disableLeft = diff == -3;\n    var disableRight= diff == 14;\n\n    return (\n        <div className=\"flight-day-header\">\n            <img className={'date-btn' + (disableLeft ? ' disabled': '')} src={LEFT_BTN} onClick={()=>{props.changeDate(disableLeft ? 0 : -1)}}></img>\n            {date(displayDate)}\n            <img className={'date-btn' + (disableRight ? ' disabled': '')} src={RIGHT_BTN} onClick={()=>{props.changeDate(disableRight ? 0 : 1)}}></img>\n        </div>\n    )\n}\n\n\nfunction RenderFlightDay(props) {\n    var d = new Date(props.date);\n    var date = (d.getMonth() < 10 ? '0':'') + d.getMonth() + '-' + d.getDate() + '-' + d.getFullYear();\n\n    var headers = ['ETD', 'AC', 'CREW', 'MISSION', 'DETAILS', 'CONFIG', 'REMARKS', 'SQ PRI', 'DCO', 'ETR'];\n    var tableHeaders = [];\n    var ac = <div className='ac-wrap'>462</div>;\n    var dot = <div className=\"dot-ok\"></div>;\n    headers.forEach(title => {\n        tableHeaders.push(<th>{title}</th>)\n    });\n    var data = [['0900', ac, 'Amelia E | Charlies L', '427 AU H102 G00', 'SME', 'DC6S', \"\", '1 SOA', dot, '1030'], \n                ['2520', ac, 'D.B. Cooper | Maverick', '427 AU H105 G00', 'ALP1', 'DC6S', \"\", '3 SOA', dot, '1230']]\n\n    var tableRows = [];\n    \n    data.forEach(row => {\n        var r = [];\n        for (var i = 0; i<row.length; i++) {\n            r.push(<td className={headers[i].toLowerCase()}>{row[i]}</td>);\n        }  \n        var hr = parseInt(row[0][0]+row[0][1]);\n        var min = parseInt(row[0][2]+row[0][3]);\n        tableRows.push(<tr className={(props.curTime.getHours() > hr) || (hr == props.curTime.getHours() && props.curTime.getMinutes() > min) ? 'expired':''} onClick={props.toggleOverlay.bind(this,'521512')}>{r}</tr>);\n    });\n    return (\n        <div className=\"flight-day\">\n            <table>\n                <tr>\n                    {tableHeaders}\n                </tr>\n                {tableRows}\n            </table>\n        </div>\n    )\n}\n\nfunction RenderFlightDayBox(props) {\n    return (\n        <div className=\"flight-day-box\">\n            <RenderFlightDayHeader date={props.date} changeDate={(offset)=>{props.changeDate(offset)}}/>\n            <RenderFlightDay date={props.date} curTime={props.curTime} toggleOverlay={(id)=>{props.toggleOverlay(id)}}/>\n        </div>\n    )\n}\n\nfunction RenderInfoBox(props) {\n    return (\n        <div className=\"info-box\">\n            <div className=\"info-title\">\n                <h5>{props.title}</h5>\n            </div>\n            <div className=\"info-content\" contentEditable={true} suppressContentEditableWarning={true}>\n                <h5>N/A</h5>\n            </div>\n        </div>\n    )\n}\n\nfunction RenderInfoBar(props) {\n    const default_info = [\"EVENING TWILIGHT\", \"SNAGS DESK SGT\", \"DUTY MVP\", \"FDO\", \"DUTY GROUND RUN\"];\n    var boxes = [];\n    for (var i = 0; i < default_info.length; i++) {\n        var title = default_info[i]\n        boxes.push(<RenderInfoBox title={title}/>)\n    }\n    return (\n        <div className=\"info-bar\">\n            <div className=\"time-title\">\n                <h5>CURRENT TIME</h5>\n            </div>\n            <div className=\"time\">\n                <h2>{(props.curTime.getHours()<10?\"0\":\"\")+props.curTime.getHours()+':'+(props.curTime.getMinutes()<10?\"0\":\"\")+props.curTime.getMinutes()}</h2>\n            </div>\n            {boxes}\n        </div>\n    )\n}\n\nclass Flights extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            curTime: new Date(),\n            date: new Date()};\n    }\n    componentDidMount() {\n        this.timerID = setInterval(() => this.tick(), 1000);\n    }\n\n    componentWillUnmount() {clearInterval(this.timerID);}\n\n    tick() {this.setState({curTime: new Date()});}\n\n    changeDate(offset) {\n        if (offset != 0) {\n            var newDate = new Date(this.state.date);\n            newDate.setDate(newDate.getDate() + offset);\n            this.setState({date: newDate})\n\n            //get new data\n            firebase.firestore().collection(\"events\").where('type', '==', 'flight').where('date', '==', date)\n            .get()\n            .then(function(querySnapshot) {\n                console.log(querySnapshot)\n                if (!querySnapshot.empty) {\n                    querySnapshot.forEach(function(doc) {\n                        // doc.data() is never undefined for query doc snapshots\n                        console.log(doc.id, \" => \", doc.data());\n                    })\n                }\n                else {\n                    firebase.firestore().collection(\"dates\").doc(date).set({\n                        twilight: {civil: null, naut: null},\n                        dutymtp: null,\n                        oic: null,\n                        groundrun: null,\n                        desksgt: {day: null, night: null},\n                        fdo: {day: null, night: null}\n                    })\n                    .then(function(docRef) {\n                        console.log(\"Document successfully written!\", docRef.id);\n                    })\n                    .catch(function(error) {\n                        console.error(\"Error writing document: \", error);\n                    });\n                };\n            })\n            .catch(function(error) {\n                console.log(\"Error getting documents: \", error);\n            });\n\n        }\n    }\n\n    render() {\n        return (\n            <div className='container'>\n                <RenderFlightDayBox date={this.state.date} curTime={this.state.curTime} toggleOverlay={(id)=>{this.props.toggleOverlay(id)}} changeDate={(offset)=>{this.changeDate(offset)}}/>\n                <RenderInfoBar date={this.state.date} curTime={this.state.curTime}/>\n            </div>\n        )\n    }\n}\n\nexport default Flights;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import XLSX from 'xlsx';\nimport firebase from \"./Firebase.js\";\n\nfunction s2ab(s) {\n  var buf = new ArrayBuffer(s.length);\n  var view = new Uint8Array(buf);\n\n  for (var i = 0; i < s.length; i++) view[i] = s.charCodeAt(i) & 0xFF;\n\n  return buf;\n}\n\nconst download = (url, name) => {\n  let a = document.createElement('a');\n  a.href = url;\n  a.download = name;\n  a.click();\n  window.URL.revokeObjectURL(url);\n};\n\nfunction getFlightsFromID(ids) {\n  var flights = [];\n  ids.forEach(id => {\n    firebase.firestore().collection(\"events\").doc(id).get().then(querySnapshot => {\n      var d = querySnapshot.data();\n      flights.push([d.startTime, d.endTime, d.ac, d.captain, d.config, d.fo, d.fe, d.crew, d.details, d.backup, d.mission, d.details, d.config, d.remarks, d.pri, d.meal, d.dco]);\n    }).catch(function (error) {\n      firebaseCreateDate(date);\n    });\n  });\n}\n\nfunction Export(ids, dayInfo) {\n  var data = getFlightsFromID(ids);\n  /* convert from array of arrays to workbook */\n\n  var worksheet = XLSX.utils.aoa_to_sheet(data);\n  var new_workbook = XLSX.utils.book_new();\n  XLSX.utils.book_append_sheet(new_workbook, worksheet, \"ExportedFile\");\n  /* write file */\n\n  const wbout = XLSX.write(new_workbook, {\n    type: 'binary',\n    bookType: \"xlsx\"\n  });\n  let url = window.URL.createObjectURL(new Blob([s2ab(wbout)], {\n    type: 'application/octet-stream'\n  }));\n  download(url, 'DailyFlyingOrder.xlsx');\n}\n\nexport default Export;","map":{"version":3,"sources":["/Users/jenny/Desktop/SOAS/scheduler/src/Export.js"],"names":["XLSX","firebase","s2ab","s","buf","ArrayBuffer","length","view","Uint8Array","i","charCodeAt","download","url","name","a","document","createElement","href","click","window","URL","revokeObjectURL","getFlightsFromID","ids","flights","forEach","id","firestore","collection","doc","get","then","querySnapshot","d","data","push","startTime","endTime","ac","captain","config","fo","fe","crew","details","backup","mission","remarks","pri","meal","dco","catch","error","firebaseCreateDate","date","Export","dayInfo","worksheet","utils","aoa_to_sheet","new_workbook","book_new","book_append_sheet","wbout","write","type","bookType","createObjectURL","Blob"],"mappings":"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","sourcesContent":["import XLSX from 'xlsx';\nimport firebase from \"./Firebase.js\";\n\nfunction s2ab(s) {\n    var buf = new ArrayBuffer(s.length);\n    var view = new Uint8Array(buf);\n    for (var i=0; i<s.length; i++) view[i] = s.charCodeAt(i) & 0xFF;\n    return buf;\n}\n\nconst download = (url, name) => {\n    let a = document.createElement('a')\n    a.href = url\n    a.download = name\n    a.click()\n\n    window.URL.revokeObjectURL(url)\n}\n\nfunction getFlightsFromID(ids) {\n    var flights = [];\n    ids.forEach((id) => {\n        firebase.firestore().collection(\"events\").doc(id)\n            .get()\n            .then((querySnapshot) => {\n                var d = querySnapshot.data();\n                flights.push([\n                    d.startTime,\n                    d.endTime,\n                    d.ac,\n                    d.captain,\n                    d.config,\n                    d.fo,\n                    d.fe,\n                    d.crew,\n                    d.details,\n                    d.backup,\n                    d.mission,\n                    d.details,\n                    d.config,\n                    d.remarks,\n                    d.pri,\n                    d.meal,\n                    d.dco,]);\n            })\n            .catch(function(error) {\n                firebaseCreateDate(date);\n            });\n    })\n}\n\nfunction Export(ids, dayInfo) {\n\n    var data = getFlightsFromID(ids);\n    /* convert from array of arrays to workbook */\n    var worksheet = XLSX.utils.aoa_to_sheet(data);\n    var new_workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(new_workbook, worksheet, \"ExportedFile\");\n\n\n    /* write file */\n    const wbout = XLSX.write(new_workbook, {type:'binary', bookType:\"xlsx\"});\n\n    let url = window.URL.createObjectURL(new Blob([s2ab(wbout)], {type:'application/octet-stream'}))\n\n    download(url, 'DailyFlyingOrder.xlsx')\n}\n\nexport default Export;\n\n"]},"metadata":{},"sourceType":"module"}
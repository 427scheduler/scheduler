{"ast":null,"code":"\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nvar _regeneratorRuntime = require(\"/Users/jenny/Desktop/SOAS/scheduler/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/jenny/Desktop/SOAS/scheduler/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _possibleConstructorReturn = require(\"/Users/jenny/Desktop/SOAS/scheduler/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/jenny/Desktop/SOAS/scheduler/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/jenny/Desktop/SOAS/scheduler/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _classCallCheck = require(\"/Users/jenny/Desktop/SOAS/scheduler/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/jenny/Desktop/SOAS/scheduler/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar metadata_1 = require(\"./metadata\");\n\nfunction isCurrentOauth2Client(client) {\n  return 'getRequestHeaders' in client && typeof client.getRequestHeaders === 'function';\n}\n/**\n * A class that represents a generic method of adding authentication-related\n * metadata on a per-request basis.\n */\n\n\nvar CallCredentials =\n/*#__PURE__*/\nfunction () {\n  function CallCredentials() {\n    _classCallCheck(this, CallCredentials);\n  }\n\n  _createClass(CallCredentials, null, [{\n    key: \"createFromMetadataGenerator\",\n\n    /**\n     * Creates a new CallCredentials object from a given function that generates\n     * Metadata objects.\n     * @param metadataGenerator A function that accepts a set of options, and\n     * generates a Metadata object based on these options, which is passed back\n     * to the caller via a supplied (err, metadata) callback.\n     */\n    value: function createFromMetadataGenerator(metadataGenerator) {\n      return new SingleCallCredentials(metadataGenerator);\n    }\n    /**\n     * Create a gRPC credential from a Google credential object.\n     * @param googleCredentials The authentication client to use.\n     * @return The resulting CallCredentials object.\n     */\n\n  }, {\n    key: \"createFromGoogleCredential\",\n    value: function createFromGoogleCredential(googleCredentials) {\n      return CallCredentials.createFromMetadataGenerator(function (options, callback) {\n        var getHeaders;\n\n        if (isCurrentOauth2Client(googleCredentials)) {\n          getHeaders = googleCredentials.getRequestHeaders(options.service_url);\n        } else {\n          getHeaders = new Promise(function (resolve, reject) {\n            googleCredentials.getRequestMetadata(options.service_url, function (err, headers) {\n              if (err) {\n                reject(err);\n                return;\n              }\n\n              resolve(headers);\n            });\n          });\n        }\n\n        getHeaders.then(function (headers) {\n          var metadata = new metadata_1.Metadata();\n\n          for (var _i = 0, _Object$keys = Object.keys(headers); _i < _Object$keys.length; _i++) {\n            var key = _Object$keys[_i];\n            metadata.add(key, headers[key]);\n          }\n\n          callback(null, metadata);\n        }, function (err) {\n          callback(err);\n        });\n      });\n    }\n  }, {\n    key: \"createEmpty\",\n    value: function createEmpty() {\n      return new EmptyCallCredentials();\n    }\n  }]);\n\n  return CallCredentials;\n}();\n\nexports.CallCredentials = CallCredentials;\n\nvar ComposedCallCredentials =\n/*#__PURE__*/\nfunction (_CallCredentials) {\n  _inherits(ComposedCallCredentials, _CallCredentials);\n\n  function ComposedCallCredentials(creds) {\n    var _this;\n\n    _classCallCheck(this, ComposedCallCredentials);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ComposedCallCredentials).call(this));\n    _this.creds = creds;\n    return _this;\n  }\n\n  _createClass(ComposedCallCredentials, [{\n    key: \"generateMetadata\",\n    value: function () {\n      var _generateMetadata = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(options) {\n        var base, generated, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, gen;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                base = new metadata_1.Metadata();\n                _context.next = 3;\n                return Promise.all(this.creds.map(function (cred) {\n                  return cred.generateMetadata(options);\n                }));\n\n              case 3:\n                generated = _context.sent;\n                _iteratorNormalCompletion = true;\n                _didIteratorError = false;\n                _iteratorError = undefined;\n                _context.prev = 7;\n\n                for (_iterator = generated[Symbol.iterator](); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                  gen = _step.value;\n                  base.merge(gen);\n                }\n\n                _context.next = 15;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](7);\n                _didIteratorError = true;\n                _iteratorError = _context.t0;\n\n              case 15:\n                _context.prev = 15;\n                _context.prev = 16;\n\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                  _iterator.return();\n                }\n\n              case 18:\n                _context.prev = 18;\n\n                if (!_didIteratorError) {\n                  _context.next = 21;\n                  break;\n                }\n\n                throw _iteratorError;\n\n              case 21:\n                return _context.finish(18);\n\n              case 22:\n                return _context.finish(15);\n\n              case 23:\n                return _context.abrupt(\"return\", base);\n\n              case 24:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[7, 11, 15, 23], [16,, 18, 22]]);\n      }));\n\n      function generateMetadata(_x) {\n        return _generateMetadata.apply(this, arguments);\n      }\n\n      return generateMetadata;\n    }()\n  }, {\n    key: \"compose\",\n    value: function compose(other) {\n      return new ComposedCallCredentials(this.creds.concat([other]));\n    }\n  }, {\n    key: \"_equals\",\n    value: function _equals(other) {\n      if (this === other) {\n        return true;\n      }\n\n      if (other instanceof ComposedCallCredentials) {\n        return this.creds.every(function (value, index) {\n          return value._equals(other.creds[index]);\n        });\n      } else {\n        return false;\n      }\n    }\n  }]);\n\n  return ComposedCallCredentials;\n}(CallCredentials);\n\nvar SingleCallCredentials =\n/*#__PURE__*/\nfunction (_CallCredentials2) {\n  _inherits(SingleCallCredentials, _CallCredentials2);\n\n  function SingleCallCredentials(metadataGenerator) {\n    var _this2;\n\n    _classCallCheck(this, SingleCallCredentials);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(SingleCallCredentials).call(this));\n    _this2.metadataGenerator = metadataGenerator;\n    return _this2;\n  }\n\n  _createClass(SingleCallCredentials, [{\n    key: \"generateMetadata\",\n    value: function generateMetadata(options) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this3.metadataGenerator(options, function (err, metadata) {\n          if (metadata !== undefined) {\n            resolve(metadata);\n          } else {\n            reject(err);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"compose\",\n    value: function compose(other) {\n      return new ComposedCallCredentials([this, other]);\n    }\n  }, {\n    key: \"_equals\",\n    value: function _equals(other) {\n      if (this === other) {\n        return true;\n      }\n\n      if (other instanceof SingleCallCredentials) {\n        return this.metadataGenerator === other.metadataGenerator;\n      } else {\n        return false;\n      }\n    }\n  }]);\n\n  return SingleCallCredentials;\n}(CallCredentials);\n\nvar EmptyCallCredentials =\n/*#__PURE__*/\nfunction (_CallCredentials3) {\n  _inherits(EmptyCallCredentials, _CallCredentials3);\n\n  function EmptyCallCredentials() {\n    _classCallCheck(this, EmptyCallCredentials);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(EmptyCallCredentials).apply(this, arguments));\n  }\n\n  _createClass(EmptyCallCredentials, [{\n    key: \"generateMetadata\",\n    value: function generateMetadata(options) {\n      return Promise.resolve(new metadata_1.Metadata());\n    }\n  }, {\n    key: \"compose\",\n    value: function compose(other) {\n      return other;\n    }\n  }, {\n    key: \"_equals\",\n    value: function _equals(other) {\n      return other instanceof EmptyCallCredentials;\n    }\n  }]);\n\n  return EmptyCallCredentials;\n}(CallCredentials);","map":null,"metadata":{},"sourceType":"script"}
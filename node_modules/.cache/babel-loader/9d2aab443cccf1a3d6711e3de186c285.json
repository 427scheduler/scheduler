{"ast":null,"code":"var _jsxFileName = \"/Users/jenny/Documents/GitHub/scheduler/src/Calendar.js\";\nimport React from 'react';\nimport moment from 'moment';\nimport firebase from \"./Firebase.js\";\nimport './Dashboard.css';\nimport Helper from './Helper.js';\nimport RIGHT_BTN from './img/right-arrow.png';\nimport LEFT_BTN from './img/left-arrow.png';\nimport Switch from './Switch.js';\n\nfunction DayHeader(props) {\n  return React.createElement(\"div\", {\n    className: \"dayHeader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    id: \"date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, props.day + \"  \"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, props.date));\n}\n\nfunction DayContents(props) {\n  var content = [];\n\n  if (props.curDayData) {\n    var sortedDayData = Helper.sortEvents(props.curDayData);\n    sortedDayData.forEach(event => {\n      var _ref = [event.type, event.startTime, event.endTime, event.title],\n          type = _ref[0],\n          start = _ref[1],\n          end = _ref[2],\n          details = _ref[3];\n      var h = Math.max(end - start, 60);\n      content.push(React.createElement(\"div\", {\n        key: event.type + event.startTime + event.endTime,\n        className: type + 'Event',\n        style: {\n          height: h * 0.6 + 'px'\n        },\n        onClick: () => {\n          props.toggleOverlay(type, event.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, start + \" - \" + end), React.createElement(\"h5\", {\n        className: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, type[0].toUpperCase() + type.slice(1)), React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, details)));\n    });\n  }\n\n  return content;\n}\n\nfunction DayView(props) {\n  return React.createElement(\"div\", {\n    className: \"dayView\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(DayHeader, {\n    day: props.day,\n    date: props.date,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(DayContents, {\n    events: props.events,\n    curDayData: props.curDayData,\n    toggleOverlay: (type, id) => {\n      props.toggleOverlay(type, id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }));\n}\n\nfunction WeekView(props) {\n  var dayCount = props.curWeek.length;\n  var days = dayCount == 7 ? ['Sun', 'Mon', 'Tues', 'Wed', 'Thur', 'Fri', 'Sat'] : ['Mon', 'Tues', 'Wed', 'Thur', 'Fri'];\n  var week = props.curWeek;\n  var weekContent = [];\n\n  for (var i = 0; i < dayCount; i++) {\n    //console.log(props.curWeekData[i]);\n    weekContent.push(React.createElement(DayView, {\n      key: week[i].date(),\n      day: days[i],\n      date: week[i].date(),\n      curDayData: props.curWeekData[i],\n      toggleOverlay: (type, id) => {\n        props.toggleOverlay(type, id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"weekView\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, weekContent);\n}\n\nfunction getCurWeekDates(showWeekends, date) {\n  //Getting dates in the week\n  //Edge case: if a Sunday is selected and only weekDays are shown, show the next week\n  if (date.format('dddd') == \"Sunday\") {\n    var day = showWeekends ? date : date.clone().add(1, 'day');\n  } else {\n    var day = showWeekends ? date.startOf('week') : date.startOf('isoweek');\n  }\n\n  var week = [];\n  var dayCount = showWeekends ? 7 : 5;\n\n  for (var i = 0; i < dayCount; i++) {\n    week.push(day);\n    day = day.clone().add(1, 'day');\n  }\n\n  return week;\n}\n\nfunction WeekdaysHeader() {\n  var weekdayShort = moment.weekdaysShort();\n  var content = [];\n\n  for (var i = 0; i < 7; i++) {\n    content.push(React.createElement(\"th\", {\n      key: weekdayShort[i],\n      className: \"week-day\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, weekdayShort[i]));\n  }\n\n  return content;\n}\n\nfunction DaysOfMonth(props) {\n  var m = props.selectedDate.clone().format(\"MM\");\n  var y = props.selectedDate.clone().format(\"YYYY\"); //var curWeek = getCurWeekDates(props.showWeekends, props.selectedDate.clone())\n\n  var blanks = [];\n\n  for (let i = 0; i < props.firstDayOfMonth; i++) {\n    blanks.push(React.createElement(\"td\", {\n      key: 'blanks' + i,\n      className: \"calendar-day empty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"\"));\n  }\n\n  var parsedWeek = {\n    firstDay: props.curWeek[0].date(),\n    month: props.curWeek[0].month(),\n    doesOverlap: props.curWeek[0].date() > 22 && props.curWeek[4].date() < 6,\n    days: []\n  };\n  props.curWeek.forEach(a => {\n    parsedWeek.days.push(a.date());\n  });\n  var daysInMonth = [];\n  var selectedDateMonth = props.selectedDate.month();\n\n  for (let d = 1; d <= props.selectedDate.daysInMonth(); d++) {\n    var currentDay = \"\";\n\n    if (selectedDateMonth == parsedWeek.month && parsedWeek.days.includes(d) && d >= parsedWeek.days[0]) {\n      currentDay = \"curweek\";\n    }\n\n    var testDate = y + \"-\" + m + \"-\" + (d < 10 ? '0' : '') + d;\n    var dot = props.flights && props.flights[testDate] == true ? 'cal-dot hasFlight' : 'cal-dot';\n    daysInMonth.push(React.createElement(\"td\", {\n      key: d,\n      className: \"calendar-day \".concat(currentDay),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onClick: e => {\n        props.setCurWeek(moment().month(selectedDateMonth).date(d));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, d), React.createElement(\"div\", {\n      className: dot,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })));\n  }\n\n  var totalSlots = [...blanks, ...daysInMonth];\n  let rows = [];\n  let cells = [];\n  totalSlots.forEach((row, i) => {\n    if (i % 7 !== 0) {\n      cells.push(row); // if index not equal 7 that means not go to next week\n    } else {\n      rows.push(cells); // when reach next week we contain all td in last week to rows : we're excluding weekends\n\n      cells = []; // empty container \n\n      cells.push(row); // in current loop we still push current row to new container\n    }\n\n    if (i === totalSlots.length - 1) {\n      // when end loop we add remain date\n      rows.push(cells);\n    }\n  });\n  let daysinmonth = rows.map((d, i) => {\n    return React.createElement(\"tr\", {\n      key: 'row' + i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, d);\n  });\n  return React.createElement(\"table\", {\n    className: \"calendar-table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, WeekdaysHeader())), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, daysinmonth));\n}\n\nclass Calendar extends React.Component {\n  constructor(props) {\n    super(props);\n    /*  curDate : \n    *   id : \n    *   showWeekends : bool\n    *   toggleOverlay()\n    *   setCurWeek(day)\n    */\n\n    this.firstDayOfMonth = () => {\n      let dateObject = moment(this.state.selectedDate);\n      let firstDay = moment(dateObject).startOf(\"month\").format(\"d\");\n      return firstDay;\n    };\n\n    this.month = () => {\n      return this.state.selectedDate.format(\"MMMM\");\n    };\n\n    this.year = () => {\n      return this.state.selectedDate.format(\"YYYY\");\n    };\n\n    this.onPrev = () => {\n      this.setState({\n        selectedDate: this.state.selectedDate.subtract(1, 'month')\n      });\n    };\n\n    this.onNext = () => {\n      this.setState({\n        selectedDate: this.state.selectedDate.add(1, 'month')\n      });\n    };\n\n    this.state = {\n      selectedDate: moment(),\n      flights: {},\n      showWeekends: false,\n      curWeekData: [],\n      curWeek: []\n    };\n  }\n\n  componentWillMount() {\n    //Retrieving data with showWeekends as OFF by default\n    this.getWeekData(false, this.state.selectedDate); //Convert displayName to userID\n\n    if (this.props.id) {\n      var id = this.props.id[0].toLowerCase() + this.props.id.split(' ')[1].toLowerCase();\n      firebase.firestore().collection('pilots').doc(id).get().then(querySnapshot => {\n        this.setState({\n          flights: querySnapshot.data().flights\n        });\n      }).catch(function (error) {\n        console.log(\"Error getting documents: \", error);\n      });\n    }\n  }\n\n  selectDate(date) {\n    this.setState({\n      selectedDate: date\n    });\n    this.getWeekData(this.state.showWeekends, date);\n  }\n\n  toggleWeekendView() {\n    console.log(\"toggleWeekendView: \", this.state.selectedDate);\n    var showWeekends = !this.state.showWeekends;\n    this.getWeekData(showWeekends, this.state.selectedDate);\n    this.setState({\n      showWeekends: showWeekends\n    });\n  }\n\n  getWeekData(showWeekends, date) {\n    //Getting dates in the week\n    console.log(showWeekends, date);\n\n    if (this.props.id) {\n      var week = getCurWeekDates(showWeekends, date);\n      var id = this.props.id[0].toLowerCase() + this.props.id.split(' ')[1].toLowerCase();\n      this.setState({\n        curWeek: week\n      });\n      console.log(showWeekends, date);\n      console.log(week);\n      this.setState({\n        curWeekData: []\n      });\n      week.forEach(day => {\n        var d = day.format('YYYY') + '-' + day.format('MM') + '-' + day.format('DD');\n        console.log(d);\n        firebase.firestore().collection('dates').doc(d).get().then(querySnapshot => {\n          var events = querySnapshot.get(\"events\");\n          var newData = this.state.curWeekData;\n\n          if (querySnapshot.exists && events != undefined) {\n            newData.push(events[id]);\n            console.log(d, events[id]);\n          } else {\n            newData.push(undefined);\n          }\n\n          console.log(newData);\n          this.setState({\n            curWeekData: newData\n          });\n        }).catch(function (error) {\n          console.log(\"Error getting documents: \", error);\n        });\n      });\n    }\n  }\n\n  render() {\n    var firstDay = this.firstDayOfMonth();\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"my-schedule-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, \"My Schedule\"), React.createElement(\"div\", {\n      className: \"weekend-toggle-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"show-weekends-toggle\",\n      onClick: this.toggleWeekendView.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, \"Show Weekends\"), React.createElement(Switch, {\n      isOn: this.state.showWeekends,\n      handleToggle: this.toggleWeekendView.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"upcomingEvents\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(WeekView, {\n      selectedDate: this.state.selectedDate,\n      curWeek: this.state.curWeek,\n      curWeekData: this.state.curWeekData,\n      toggleOverlay: (type, id) => {\n        this.props.toggleOverlay(type, id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"monthView\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"month-calendar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"month-btn\",\n      src: LEFT_BTN,\n      onClick: e => {\n        this.onPrev();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"month-calendar-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, this.month() + \" \" + this.year()), React.createElement(\"img\", {\n      className: \"month-btn\",\n      src: RIGHT_BTN,\n      onClick: e => {\n        this.onNext();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    })), React.createElement(DaysOfMonth, {\n      showWeekends: this.state.showWeekends,\n      setCurWeek: day => {\n        this.selectDate(day);\n      },\n      curWeek: this.state.curWeek,\n      selectedDate: this.state.selectedDate,\n      firstDayOfMonth: firstDay,\n      flights: this.state.flights,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Calendar;","map":{"version":3,"sources":["/Users/jenny/Documents/GitHub/scheduler/src/Calendar.js"],"names":["React","moment","firebase","Helper","RIGHT_BTN","LEFT_BTN","Switch","DayHeader","props","day","date","DayContents","content","curDayData","sortedDayData","sortEvents","forEach","event","type","startTime","endTime","title","start","end","details","h","Math","max","push","height","toggleOverlay","id","toUpperCase","slice","DayView","events","WeekView","dayCount","curWeek","length","days","week","weekContent","i","curWeekData","getCurWeekDates","showWeekends","format","clone","add","startOf","WeekdaysHeader","weekdayShort","weekdaysShort","DaysOfMonth","m","selectedDate","y","blanks","firstDayOfMonth","parsedWeek","firstDay","month","doesOverlap","a","daysInMonth","selectedDateMonth","d","currentDay","includes","testDate","dot","flights","e","setCurWeek","totalSlots","rows","cells","row","daysinmonth","map","Calendar","Component","constructor","dateObject","state","year","onPrev","setState","subtract","onNext","componentWillMount","getWeekData","toLowerCase","split","firestore","collection","doc","get","then","querySnapshot","data","catch","error","console","log","selectDate","toggleWeekendView","newData","exists","undefined","render","bind"],"mappings":"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","sourcesContent":["import React from 'react';\nimport moment from 'moment'\nimport firebase from \"./Firebase.js\";\nimport './Dashboard.css';\nimport Helper from './Helper.js';\nimport RIGHT_BTN from './img/right-arrow.png';\nimport LEFT_BTN from './img/left-arrow.png';\nimport Switch from './Switch.js';\n\nfunction DayHeader(props) {\n    return (\n        \n        <div className='dayHeader'>\n            <h3 id='date'>{props.day + \"  \"}</h3><h3>{props.date}</h3>\n        </div>\n    )\n}\n\nfunction DayContents(props) {\n    var content = [];\n    if (props.curDayData) {\n        var sortedDayData = Helper.sortEvents(props.curDayData);\n\n        sortedDayData.forEach(event => {\n            var [type, start, end, details] = [event.type, event.startTime, event.endTime, event.title];\n            var h = Math.max(end-start, 60);\n            content.push(\n                <div key={event.type+event.startTime+event.endTime} className={type+'Event'} style={{height: (h*0.6)+'px'}} onClick={()=>{props.toggleOverlay(type, event.id)}}>\n                    <p>{start + \" - \" +end}</p>\n                    <h5 className='name'>{type[0].toUpperCase()+type.slice(1,)}</h5>\n                    <h6>{details}</h6>\n                </div>\n            )\n        });\n    }\n    return content;\n}\n\nfunction DayView(props) {\n    return (\n        <div className='dayView'>\n            <DayHeader day={props.day} date={props.date}/>\n            <DayContents events={props.events} curDayData={props.curDayData} toggleOverlay={(type,id)=>{props.toggleOverlay(type,id)}}/>\n        </div>\n    )\n}\n\nfunction WeekView(props) {\n    var dayCount = props.curWeek.length;\n    var days = dayCount == 7 ? ['Sun', 'Mon', 'Tues', 'Wed', 'Thur', 'Fri', 'Sat'] : ['Mon', 'Tues', 'Wed', 'Thur', 'Fri'];\n    var week = props.curWeek;\n    var weekContent = [];\n\n    for (var i=0; i < dayCount; i++) {\n        //console.log(props.curWeekData[i]);\n        weekContent.push(<DayView\n                        key={week[i].date()} day={days[i]} \n                        date={week[i].date()} \n                        curDayData={props.curWeekData[i]} \n                        toggleOverlay={(type,id)=>{props.toggleOverlay(type,id)}}/>)\n    }\n\n    return (\n        <div className=\"weekView\">{weekContent}</div>)\n}\n\nfunction getCurWeekDates(showWeekends, date) {\n    //Getting dates in the week\n\n    //Edge case: if a Sunday is selected and only weekDays are shown, show the next week\n    if (date.format('dddd')==\"Sunday\") {\n        var day = showWeekends ? date : date.clone().add(1, 'day');\n    }\n    else {var day = showWeekends ? date.startOf('week') : date.startOf('isoweek');}\n\n    var week = [];\n    var dayCount = showWeekends ? 7 : 5;\n\n    for (var i =0; i < dayCount; i++) {\n        week.push(day);\n        day = day.clone().add(1, 'day');\n    }\n    return week\n}\n\nfunction WeekdaysHeader() {\n    var weekdayShort = moment.weekdaysShort();\n    var content = []\n    for (var i = 0; i < 7; i++) {\n        content.push(<th key={weekdayShort[i]} className=\"week-day\">\n        {weekdayShort[i]}\n       </th>);\n    }\n\n    return content;\n}\n\n\n\nfunction DaysOfMonth(props) {\n    var m = props.selectedDate.clone().format(\"MM\");\n    var y = props.selectedDate.clone().format(\"YYYY\");\n    //var curWeek = getCurWeekDates(props.showWeekends, props.selectedDate.clone())\n\n    var blanks = [];\n    for (let i = 0; i < props.firstDayOfMonth; i++) {\n      blanks.push(\n        <td key={'blanks'+i} className=\"calendar-day empty\">{\"\"}</td>\n      );\n    }\n    var parsedWeek = {firstDay: props.curWeek[0].date(), month: props.curWeek[0].month(), doesOverlap: (props.curWeek[0].date()>22 && props.curWeek[4].date() < 6), days: []};\n    props.curWeek.forEach(a => {parsedWeek.days.push(a.date())});\n    var daysInMonth = [];\n    var selectedDateMonth = props.selectedDate.month();\n    \n    for (let d = 1; d <= props.selectedDate.daysInMonth(); d++) { \n        var currentDay = \"\";   \n        if (selectedDateMonth == parsedWeek.month && parsedWeek.days.includes(d) && d >= parsedWeek.days[0]) {\n            currentDay = \"curweek\";\n        }\n        var testDate = y + \"-\" + m + \"-\" + (d < 10 ? '0':'') + d;\n        var dot = props.flights && props.flights[testDate] == true ? 'cal-dot hasFlight' : 'cal-dot';\n        daysInMonth.push(  \n            <td key={d} className={`calendar-day ${currentDay}`}>   \n                <span onClick={e => { props.setCurWeek(moment().month(selectedDateMonth).date(d));}} >{d}</span>\n                <div className={dot}></div>\n            </td>);\n    }\n    var totalSlots = [...blanks, ...daysInMonth];\n    let rows = [];\n    let cells = [];\n\n    totalSlots.forEach((row, i) => {\n        if (i % 7 !== 0 ) {\n          cells.push(row); // if index not equal 7 that means not go to next week\n        } else {\n            rows.push(cells); // when reach next week we contain all td in last week to rows : we're excluding weekends\n            cells = []; // empty container \n            cells.push(row); // in current loop we still push current row to new container\n        }\n        if (i === totalSlots.length - 1) { // when end loop we add remain date\n          rows.push(cells);\n        }\n    });\n\n    let daysinmonth = rows.map((d, i) => {\n    return <tr key={'row'+i}>{d}</tr>;\n    });\n\n    return (\n        <table className=\"calendar-table\">\n        <thead>\n            <tr>{WeekdaysHeader()}</tr>\n        </thead>\n        <tbody>{daysinmonth}</tbody>\n        </table>\n    )\n}\n\nclass Calendar extends React.Component {\n    constructor(props) {\n        super(props); \n            /*  curDate : \n            *   id : \n            *   showWeekends : bool\n            *   toggleOverlay()\n            *   setCurWeek(day)\n            */\n        this.state = {\n            selectedDate: moment(), \n            flights: {},\n            showWeekends: false,\n            curWeekData: [],\n            curWeek: []\n        }\n    }\n\n    firstDayOfMonth = () => {\n        let dateObject = moment(this.state.selectedDate);\n        let firstDay = moment(dateObject)\n                     .startOf(\"month\")\n                     .format(\"d\"); \n       return firstDay;\n    };\n \n    month = () => {\n        return this.state.selectedDate.format(\"MMMM\");};\n    year = () => {\n        return this.state.selectedDate.format(\"YYYY\");\n    }\n\n    onPrev = () => {\n        this.setState({selectedDate: this.state.selectedDate.subtract(1, 'month')});\n    };\n    onNext = () => {\n        this.setState({selectedDate: this.state.selectedDate.add(1, 'month')});\n    };\n\n    componentWillMount() {\n\n        //Retrieving data with showWeekends as OFF by default\n        this.getWeekData(false, this.state.selectedDate);\n        \n        //Convert displayName to userID\n        if (this.props.id) {\n            var id = this.props.id[0].toLowerCase() + this.props.id.split(' ')[1].toLowerCase();\n\n            firebase.firestore().collection('pilots').doc(id).get()\n            .then((querySnapshot) => {\n                this.setState({flights: querySnapshot.data().flights})\n            })\n            .catch(function(error) {\n                console.log(\"Error getting documents: \", error);\n            });\n        }\n    }\n\n    selectDate(date) {\n        this.setState({selectedDate: date});\n        this.getWeekData(this.state.showWeekends, date);\n    }\n\n    toggleWeekendView() {\n        console.log(\"toggleWeekendView: \", this.state.selectedDate);\n        var showWeekends = !this.state.showWeekends;\n        this.getWeekData(showWeekends, this.state.selectedDate)\n        this.setState({showWeekends: showWeekends});\n    }\n\n    getWeekData(showWeekends, date) {\n        //Getting dates in the week\n        console.log(showWeekends, date);\n\n        if (this.props.id) {\n            var week = getCurWeekDates(showWeekends, date);\n            var id = this.props.id[0].toLowerCase() + this.props.id.split(' ')[1].toLowerCase();\n            this.setState({curWeek: week});\n            console.log(showWeekends, date);\n            console.log(week);\n\n            this.setState({curWeekData: []});\n            week.forEach(day => {\n                var d = day.format('YYYY') + '-' + day.format('MM') + '-' + day.format('DD') ;\n                console.log(d);\n                firebase.firestore().collection('dates').doc(d).get()\n                    .then((querySnapshot) => {\n                        var events = querySnapshot.get(\"events\");\n                        var newData = this.state.curWeekData;\n                        if (querySnapshot.exists && events != undefined) {\n                            newData.push(events[id]);\n                            console.log(d, events[id])\n                        }\n                        else {\n                            newData.push(undefined);\n                        }\n                        console.log(newData);\n                        this.setState({curWeekData: newData});\n                    })\n                    .catch(function(error) {\n                        console.log(\"Error getting documents: \", error);\n                });\n            })\n        }\n    }\n\n    render () {\n        var firstDay = this.firstDayOfMonth();\n\n        return (\n            <div>\n                <div className=\"my-schedule-div\">\n                    <h2>My Schedule</h2>\n                    <div className='weekend-toggle-div'>\n                        <button className=\"show-weekends-toggle\" onClick={this.toggleWeekendView.bind(this)}>Show Weekends</button>\n                        <Switch isOn={this.state.showWeekends} handleToggle={this.toggleWeekendView.bind(this)}/>\n                    </div>\n                </div>\n                <div className=\"upcomingEvents\">\n                    <WeekView  \n                                selectedDate={this.state.selectedDate}\n                                curWeek={this.state.curWeek}\n                                curWeekData={this.state.curWeekData}\n                                toggleOverlay={(type,id)=>{this.props.toggleOverlay(type,id)}}/>\n                    \n                    <div className=\"monthView\">\n                        <div className=\"month-calendar\">\n                            <img className='month-btn' src={LEFT_BTN} onClick={e => {this.onPrev();}}></img>\n                            <div className=\"month-calendar-header\">{this.month() + \" \" + this.year()}</div>\n                            <img className='month-btn' src={RIGHT_BTN} onClick={e => {this.onNext();}}></img>\n                        </div>\n                        <DaysOfMonth \n                                    showWeekends={this.state.showWeekends}\n                                    setCurWeek={(day)=>{this.selectDate(day)}} \n                                    curWeek={this.state.curWeek}\n                                    selectedDate={this.state.selectedDate} \n                                    firstDayOfMonth={firstDay}\n                                    flights={this.state.flights}/>\n                    </div>\n                </div>\n            </div>)\n    }\n}\n\nexport default Calendar;"]},"metadata":{},"sourceType":"module"}
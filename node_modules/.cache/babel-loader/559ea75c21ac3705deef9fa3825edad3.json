{"ast":null,"code":"import firebase from \"./Firebase.js\"; // Add a new document in collection \"dates\"\n\n/*for (var i = 1; i <= 30; i++) {\n    var a = i < 10 ? '0' : '';\n    var date = '2020-04-'  + a + i ;\n const ref = firebase.firestore().collection(\"dates\").doc(date);\nconsole.log(date);\nref.get()\n    .then((docSnapshot) => {if (!docSnapshot.exists)\n    { ref.set({\n        dutymtp: null,\n        oic: null,\n        groundrun: null,\n        twilightciv: null,twilightnaut: null,\n        desksgtday: null, desksgtnight: null,\n        fdoday: null, fdonight: null\n    })\n    .then(()=> {\n        console.log(\"Date successfully written!\");\n    })\n    .catch(function(error) {\n        console.error(\"Error writing date: \", error);\n    });\n}});\n}*/\n\nfunction getRandom(x, y) {\n  var min = Math.ceil(x);\n  var max = Math.floor(y);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction updateData() {\n  /*\n  firebase.firestore().collection(\"pilots\").doc('aearhart').set({\n  team: 1, \n  role: 'aviator',\n  displayName: 'Amelia Earhart',\n  lastFlight: '01-01-2019',\n  })\n  .then(function(docRef) {\n  console.log(\"Document successfully written!\", docRef.id);\n  })\n  .catch(function(error) {\n  console.error(\"Error writing document: \", error);\n  });\n  firebase.firestore().collection(\"pilots\").doc('clindbergh').set({\n  team: 1, \n  role: 'aviator',\n  lastFlight: '01-01-2019',\n  displayName: 'Charles Lindbergh',\n  })\n  .then(function(docRef) {\n  console.log(\"Document successfully written!\", docRef.id);\n  })\n  .catch(function(error) {\n  console.error(\"Error writing document: \", error);\n  });\n  firebase.firestore().collection(\"pilots\").doc('pmitchell').set({\n  team: 1, \n  displayName: 'Pete Mitchell',\n  role: 'ace',\n  lastFlight: '01-01-2019',\n  })\n  .then(function(docRef) {\n  console.log(\"Document successfully written!\", docRef.id);\n  })\n  .catch(function(error) {\n  console.error(\"Error writing document: \", error);\n  });\n  firebase.firestore().collection(\"pilots\").doc('jdoolittle').set({\n  team: 1, \n  displayName: 'Jimmy Doolittle',\n  role: 'aviator',\n  lastFlight: '01-01-2019',\n  })\n  .then(function(docRef) {\n  console.log(\"Document successfully written!\", docRef.id);\n  })\n  .catch(function(error) {\n  console.error(\"Error writing document: \", error);\n  });\n  firebase.firestore().collection(\"pilots\").doc('cyeager').set({\n  team: 2, \n  displayName: 'Chuck Yeager',\n  role: 'test pilot',\n  lastFlight: '01-01-2019',\n  })\n  .then(function(docRef) {\n  console.log(\"Document successfully written!\", docRef.id);\n  })\n  .catch(function(error) {\n  console.error(\"Error writing document: \", error);\n  });\n  firebase.firestore().collection(\"pilots\").doc('owright').set({\n  team: 1, \n  displayName: 'Orvill Wright',\n  role: 'test pilot',\n  lastFlight: '01-01-2019',\n  })\n  .then(function(docRef) {\n  console.log(\"Document successfully written!\", docRef.id);\n  })\n  .catch(function(error) {\n  console.error(\"Error writing document: \", error);\n  });\n  firebase.firestore().collection(\"pilots\").doc('ehartmann').set({\n  team: 2,\n  displayName: 'Erich Hartmann',\n  role: 'ace',\n  lastFlight: '01-01-2019',\n  })\n  .then(function(docRef) {\n  console.log(\"Document successfully written!\", docRef.id);\n  })\n  .catch(function(error) {\n  console.error(\"Error writing document: \", error);\n  });\n  firebase.firestore().collection(\"pilots\").doc('wwright').set({\n  team: 2,\n  displayName: 'Wilbur Wright',\n  role: 'aviator',\n  lastFlight: '01-01-2019',\n  })\n  .then(function(docRef) {\n  console.log(\"Document successfully written!\", docRef.id);\n  })\n  .catch(function(error) {\n  console.error(\"Error writing document: \", error);\n  });*/\n\n  /** \n  \n  var ac = [472, 582, 479, 496, 428, 409]\n  var pilots = ['wwright', 'clindbergh', 'cyeager', 'aearhart', 'pmitchell', 'jdoolittle', 'ehartmann', 'owright'];\n  var config = ['NR FF', \"V FF\", \"DC6S\", \"DC0S\"];\n  var dco = ['ok','ok','ok','ok','ok','ok','warn', 'warn', 'bad'];\n  var details = ['SME', \"ALP2\"];\n  \n  for (var i  = 0; i < 10 ; i ++) {\n      var pilot = pilots[getRandom(0, 7)];\n      var fo = pilots[getRandom(0, 7)];\n      var date = \"2019-07-\" + getRandom(18, 30);\n      var acval = ac[getRandom(0, 5)];\n      var configval = config[getRandom(0, 3)];\n      var detail = details[getRandom(0, 1)];\n      var end=  parseInt(getRandom(0, 23) + getRandom(0, 5) +'0');\n      var start = parseInt(getRandom(Math.floor(end/100), 23) + getRandom(0, 5) +'0');\n  var newEvent = firebase.firestore().collection(\"events\").doc();\n  var newUpcomingEvent = firebase.firestore().collection('pilots').doc(pilot).collection('upcoming-events').doc();\n  \n  \n  \n  newUpcomingEvent.set({\n      ac: acval,\n      captain: pilot,\n      flightid: newEvent.id,\n      config: configval,\n      date: date,\n      fo: fo,\n      details: detail,\n      endTime: end,\n      startTime: start,\n      })\n  .then(function(docRef) {\n      console.log(\"Document successfully written!\");})\n  .catch(function(error) {\n      console.error(\"Error writing document: \", error);\n  })\n  \n  newEvent.set({\n      ac: acval,\n      captain: pilot,\n      config: configval,\n      date: date,\n      dco: dco[getRandom(0, 8)],\n      details: detail,\n      fo: fo,\n      mission: \"427 AU H\"+ getRandom(1, 8) + getRandom(0,6) + \"3 G0\" + getRandom(0, 9),\n      pri: getRandom(1, 6),\n      remarks: getRandom(1,6) == 4 ? 'Academic Shoot' : '',\n      meal: getRandom(1,15) == 6 ? true : false,\n      endTime: end,\n      startTime: start,\n      type: \"flight\",\n      })\n  .then(function(docRef) {\n      console.log(\"Document successfully written!\");})\n  .catch(function(error) {\n      console.error(\"Error writing document: \", error);\n  })\n  \n  \n  \n  }\n  */\n\n  /*\n  firebase.firestore().collection(\"pilots\").doc('aearhart').set({\n      ac: ac[getRandom(0, 5)],\n      captain: pilots[getRandom(0, 7)],\n      config: config[getRandom(0, 3)],\n      date: \"2019-07-\" + getRandom(18, 30),\n      dco: dco[getRandom(0, 8)],\n      details: details[getRandom(0, 1)],\n      fo: pilots[getRandom(0,7)],\n      mission: \"427 AU H\"+ getRandom(1, 8) + getRandom(0,6) + \"3 G0\" + getRandom(0, 9),\n      pri: getRandom(1, 6),\n      remarks: getRandom(1,6) == 4 ? 'Academic Shoot' : '',\n      meal: getRandom(1,15) == 6 ? true : false,\n      endTime: parseInt(getRandom(0, 23) + getRandom(0, 5) +'0'),\n      startTime: parseInt(getRandom(0, 23) + getRandom(0, 5) +'0'),\n      type: \"flight\",\n      })\n  .then(function(docRef) {\n      console.log(\"Document successfully written!\");})\n  .catch(function(error) {\n      console.error(\"Error writing document: \", error);\n  })*/\n\n  /**************************** MASS FLIGHT CREEATION  ****************************/\n\n  /*\n  var ac = [472, 582, 479, 496, 428, 409]\n  var pilots = ['wwright', 'clindbergh', 'cyeager', 'aearhart', 'pmitchell', 'jdoolittle', 'ehartmann', 'owright', '', '', '', '', '', '', ''];\n  var config = ['NR FF', \"V FF\", \"DC6S\", \"DC0S\"];\n  var dco = ['ok','ok','ok','ok','warn', 'warn', 'bad', 'ok','ok'];\n  var details = ['SME', \"ALP2\"];\n  var start = [130, 250, 320, 430, 520, 510, 720, 800, 930, 1020, 1110, 1130, 1230, 1310, 1350, 1420, 1530, 1720, 1820, 1920, 2040];\n  var l = [60,90, 120, 120, 120, 150, 180, 210, 60,  90, 90, 90, 90, 90, 120, 120, 120, 150, 180]\n  var state = {};\n  \n  function firebaseSetBool(pilot, date) {\n      var flightDate = 'flights.' + date;\n      firebase.firestore().collection(\"pilots\").doc(pilot).update({[flightDate]: true})\n      .then(function() {\n          console.log(\"Boolean successfully set for pilot\");})\n      .catch(function(error) {\n          console.error(\"Error setting flight boolean\", error);\n      })\n  }\n  \n  for (var i  = 0; i < 10 ; i ++) {\n      var s = start[getRandom(0,20)];\n      var e = s + l[getRandom(0,18)];\n      state.captain = pilots[getRandom(0, 7)];\n      state.fo = pilots[getRandom(0, 7)];\n      state.date = \"2020-04-\"+ getRandom(10, 18);\n      state.ac = ac[getRandom(0, 5)];\n      state.mission= \"427 AU H\"+ getRandom(1, 8) + getRandom(0,6) + \"3 G0\" + getRandom(0, 9);\n      state.fe = pilots[getRandom(0, 13)];\n      state.remarks= getRandom(1,6) == 4 ? 'Academic Shoot' : '';\n      state.crew = pilots[getRandom(0, 13)];\n      state.dco = dco[getRandom(0,8)];\n      state.pri = getRandom(1, 6);\n      state.config = config[getRandom(0, 3)];\n      state.details = details[getRandom(0, 1)];\n      state.startTime= (s < 1000 ? '0': '') + s.toString();\n      state.type=\"flight\";\n      state.endTime= (e < 1000 ? '0': '') + e.toString();\n  \n      var newEvent = firebase.firestore().collection(\"events\").doc();\n      newEvent.set(state)\n      .then(function() {\n          console.log(\"Event successfully added to events!\");})\n      .catch(function(error) {\n          console.error(\"Error adding event: \", error);\n      });\n  \n      var updates = {};\n      updates['events.'+state.captain] = firebase.firestore.FieldValue.arrayUnion({'type':'flight', 'startTime': state.startTime, 'endTime': state.endTime, 'id':newEvent.id});\n      updates['events.'+state.fo] = firebase.firestore.FieldValue.arrayUnion({'type':'flight', 'startTime': state.startTime, 'endTime': state.endTime, 'id':newEvent.id});\n      firebaseSetBool(state.captain, state.date);\n      firebaseSetBool(state.fo, state.date);\n      var newUpcomingEvents = [firebase.firestore().collection('pilots').doc(state.captain).collection('upcoming-events').doc(),\n      firebase.firestore().collection('pilots').doc(state.fo).collection('upcoming-events').doc()];\n  \n      if (state.fe) {\n          updates['events.'+state.fe] = firebase.firestore.FieldValue.arrayUnion({'type':'flight', 'startTime': state.startTime, 'endTime': state.endTime, 'id':newEvent.id});\n          newUpcomingEvents.push(firebase.firestore().collection('pilots').doc(state.fe).collection('upcoming-events').doc());\n          firebaseSetBool(state.fe, state.date);\n      }\n      if (state.crew) {\n          updates['events.'+state.crew] = firebase.firestore.FieldValue.arrayUnion({'type':'flight', 'startTime': state.startTime, 'endTime': state.endTime, 'id':newEvent.id});\n          newUpcomingEvents.push(firebase.firestore().collection('pilots').doc(state.crew).collection('upcoming-events').doc());\n          firebaseSetBool(state.crew, state.date);\n      }\n  \n      const ref = firebase.firestore().collection(\"dates\").doc(state.date);\n      ref.get()\n          .then((docSnapshot) => {if (!docSnapshot.exists)\n          { ref.set({\n              dutymtp: null,\n              oic: null,\n              groundrun: null,\n              twilightciv: null,twilightnaut: null,\n              desksgtday: null, desksgtnight: null,\n              fdoday: null, fdonight: null\n          })\n          .then(()=> {\n              console.log(\"Date successfully written!\");\n          })\n          .catch(function(error) {\n              console.error(\"Error writing date: \", error);\n          });\n      }});\n      firebase.firestore().collection(\"dates\").doc(state.date).update(updates)\n      .then(function() {\n          console.log(\"Event successfully added to dates!\");})\n      .catch(function(error) {\n          console.error(\"Error writing document: \", error);\n      })\n  \n      console.log(newUpcomingEvents)\n      newUpcomingEvents.forEach((x)=>{x.set({\n          ac: state.ac,\n          captain: state.captain,\n          flightid: newEvent.id,\n          config: state.config,\n          date: state.date,\n          fo: state.fo,\n          fe: state.fe,\n          crew: state.crew,\n          details: state.details,\n          endTime: state.endTime,\n          startTime: state.startTime,})\n      .then(function() {\n          console.log(\"Event successfully added to pilots!\");})\n      .catch(function(error) {\n          console.error(\"Error writing document: \", error);\n      })})\n  \n      firebase.firestore().collection(\"dates\").doc(state.date).update(updates)\n      .then(function() {\n          console.log(\"Event successfully added to dates!\");})\n      .catch(function(error) {\n          console.error(\"Error writing document: \", error);\n      })\n  }*/\n\n  /*************************************************     MASS MEETING UPDATES **************************************************/\n\n  /*\n  var l = [30, 60, 60, 60, 90, 90, 90, 90, 90, 90, 120, 120, 120, 150, 180]\n  var pilots = ['aerhart', 'wwright', 'clindbergh', 'cyeager', 'aearhart', 'pmitchell', 'jdoolittle', 'ehartmann', 'owright'];\n  var start = [800, 900, 1020, 1150, 1130, 1240, 1320, 1340, 1420, 1530];\n  var location = ['', \"\", '', 'Classroom A', 'Room 201', \"Courtyard\", '', '', ''];\n  var details = ['Strategy Discussion', \"Sync with CO\", \"Lunch Discussion\", \"Review Scheduler\"];\n  var state = {};\n  for (var i  = 0; i < 5 ; i ++) {\n      var s = start[getRandom(0,9)];\n     var e = s + l[getRandom(0,14)];\n      state.title =  details[getRandom(0, 3)];\n     state.type= \"meeting\";\n     state.date= \"2020-04-\" + getRandom(10, 30);\n     state.startTime= (s < 1000 ? '0': '') + s.toString();\n     state.endTime= (e < 1000 ? '0': '') + e.toString();\n     state.location= location[getRandom(0, 8)]; \n     state.confLink= \"\";\n     state.notes= \"\";\n     state.userid=pilots[getRandom(0, 8)];\n     console.log(state);\n  \n  console.log(state);\n  var newEvent = firebase.firestore().collection(\"events\").doc()\n  newEvent.set(state)\n  .then(function() {\n     console.log(\"Event successfully added to events!\");})\n  .catch(function(error) {\n     console.error(\"Error adding event: \", error);\n  });\n  var field = 'events.'+state.userid;\n  firebase.firestore().collection(\"dates\").doc(state.date).update({\n     [field]: firebase.firestore.FieldValue.arrayUnion({'type':'meeting', 'startTime': state.startTime, 'endTime': state.endTime, 'id':newEvent.id})\n     })\n  .then(function() {\n     console.log(\"Event successfully added to dates!\");})\n  .catch(function(error) {\n     console.log({'type':'meeting', 'startTime': state.startTime, 'endTime': state.endTime, 'id':newEvent.id});\n     console.error(\"Error writing document: \", error);\n  })}\n  */\n\n  /*************************************************     MASS APT UPDATES **************************************************/\n  function makeApts(num, month, start, end) {\n    var l = [30, 30, 60, 60, 60, 90, 90, 90, 90, 90, 120, 120, 120, 150, 180];\n    var pilots = ['wwright', 'clindbergh', 'cyeager', 'aearhart', 'pmitchell', 'jdoolittle', 'ehartmann', 'owright'];\n    var start = [800, 900, 1020, 1150, 1130, 1240, 1320, 1340, 1420, 1530];\n    var location = ['', \"\", '', 'Classroom A', 'Room 201', \"Courtyard\", '', '', ''];\n    var details = ['Medical', \"Dentist\", \"Course\", \"Temp Leave\"];\n    var event = ['apt', 'leave', 'pers', 'yl'];\n    var state = {};\n\n    for (var i = 0; i < num; i++) {\n      state.title = details[getRandom(0, 3)];\n      state.type = \"apt\";\n      var s = start[getRandom(0, 9)];\n      var e = s + l[getRandom(0, 14)];\n      var d = getRandom(start, end);\n      state.date = \"2020-\" + month + '-' + (d < 10 ? '0' : '') + d;\n      state.startTime = (s < 1000 ? '0' : '') + s.toString();\n      state.endTime = (e < 1000 ? '0' : '') + e.toString();\n      state.event = event[getRandom(0, 3)];\n      state.notes = \"\";\n      state.location = location[getRandom(0, 8)];\n      state.userid = pilots[getRandom(0, 7)];\n      console.log(state);\n      console.log(state);\n      var newEvent = firebase.firestore().collection(\"events\").doc();\n      newEvent.set(state).then(function () {\n        console.log(\"Event successfully added to events!\");\n      }).catch(function (error) {\n        console.error(\"Error adding event: \", error);\n      });\n      var field = 'events.' + state.userid;\n      firebase.firestore().collection(\"dates\").doc(state.date).update({\n        [field]: firebase.firestore.FieldValue.arrayUnion({\n          'type': 'apt',\n          'startTime': state.startTime,\n          'endTime': state.endTime,\n          'id': newEvent.id\n        })\n      }).then(function () {\n        console.log(\"Event successfully added to dates!\");\n      }).catch(function (error) {\n        console.error(\"Error writing document: \", error);\n      });\n    }\n  }\n}\n\nexport default updateData;","map":{"version":3,"sources":["/Users/jenny/Desktop/SOAS/scheduler/src/insertDataTest.js"],"names":["firebase","getRandom","x","y","min","Math","ceil","max","floor","random","updateData","makeApts","num","month","start","end","l","pilots","location","details","event","state","i","title","type","s","e","d","date","startTime","toString","endTime","notes","userid","console","log","newEvent","firestore","collection","doc","set","then","catch","error","field","update","FieldValue","arrayUnion","id"],"mappings":"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","sourcesContent":["import firebase from \"./Firebase.js\";\n\n    // Add a new document in collection \"dates\"\n    /*for (var i = 1; i <= 30; i++) {\n        var a = i < 10 ? '0' : '';\n        var date = '2020-04-'  + a + i ;\n\n    const ref = firebase.firestore().collection(\"dates\").doc(date);\n    console.log(date);\n    ref.get()\n        .then((docSnapshot) => {if (!docSnapshot.exists)\n        { ref.set({\n            dutymtp: null,\n            oic: null,\n            groundrun: null,\n            twilightciv: null,twilightnaut: null,\n            desksgtday: null, desksgtnight: null,\n            fdoday: null, fdonight: null\n        })\n        .then(()=> {\n            console.log(\"Date successfully written!\");\n        })\n        .catch(function(error) {\n            console.error(\"Error writing date: \", error);\n        });\n    }});\n}*/\n\n\n\n\nfunction getRandom(x, y) {\n    var min = Math.ceil(x);\n    var max = Math.floor(y);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n\nfunction updateData() {\n    /*\nfirebase.firestore().collection(\"pilots\").doc('aearhart').set({\n    team: 1, \n    role: 'aviator',\n    displayName: 'Amelia Earhart',\n    lastFlight: '01-01-2019',\n})\n    .then(function(docRef) {\n    console.log(\"Document successfully written!\", docRef.id);\n    })\n    .catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});\nfirebase.firestore().collection(\"pilots\").doc('clindbergh').set({\n    team: 1, \n    role: 'aviator',\n    lastFlight: '01-01-2019',\n    displayName: 'Charles Lindbergh',\n    })\n    .then(function(docRef) {\n    console.log(\"Document successfully written!\", docRef.id);\n    })\n    .catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});\nfirebase.firestore().collection(\"pilots\").doc('pmitchell').set({\n    team: 1, \n    displayName: 'Pete Mitchell',\n    role: 'ace',\n    lastFlight: '01-01-2019',\n    })\n    .then(function(docRef) {\n    console.log(\"Document successfully written!\", docRef.id);\n    })\n    .catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});\n\nfirebase.firestore().collection(\"pilots\").doc('jdoolittle').set({\n    team: 1, \n    displayName: 'Jimmy Doolittle',\n    role: 'aviator',\n    lastFlight: '01-01-2019',\n    })\n    .then(function(docRef) {\n    console.log(\"Document successfully written!\", docRef.id);\n    })\n    .catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});\nfirebase.firestore().collection(\"pilots\").doc('cyeager').set({\n    team: 2, \n    displayName: 'Chuck Yeager',\n    role: 'test pilot',\n    lastFlight: '01-01-2019',\n    })\n    .then(function(docRef) {\n    console.log(\"Document successfully written!\", docRef.id);\n    })\n    .catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});\nfirebase.firestore().collection(\"pilots\").doc('owright').set({\n    team: 1, \n    displayName: 'Orvill Wright',\n    role: 'test pilot',\n    lastFlight: '01-01-2019',\n    })\n    .then(function(docRef) {\n    console.log(\"Document successfully written!\", docRef.id);\n    })\n    .catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});\nfirebase.firestore().collection(\"pilots\").doc('ehartmann').set({\n    team: 2,\n    displayName: 'Erich Hartmann',\n    role: 'ace',\n    lastFlight: '01-01-2019',\n    })\n    .then(function(docRef) {\n    console.log(\"Document successfully written!\", docRef.id);\n    })\n    .catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});\nfirebase.firestore().collection(\"pilots\").doc('wwright').set({\n    team: 2,\n    displayName: 'Wilbur Wright',\n    role: 'aviator',\n    lastFlight: '01-01-2019',\n    })\n    .then(function(docRef) {\n    console.log(\"Document successfully written!\", docRef.id);\n    })\n    .catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});*/\n\n\n/** \n\nvar ac = [472, 582, 479, 496, 428, 409]\nvar pilots = ['wwright', 'clindbergh', 'cyeager', 'aearhart', 'pmitchell', 'jdoolittle', 'ehartmann', 'owright'];\nvar config = ['NR FF', \"V FF\", \"DC6S\", \"DC0S\"];\nvar dco = ['ok','ok','ok','ok','ok','ok','warn', 'warn', 'bad'];\nvar details = ['SME', \"ALP2\"];\n\nfor (var i  = 0; i < 10 ; i ++) {\n    var pilot = pilots[getRandom(0, 7)];\n    var fo = pilots[getRandom(0, 7)];\n    var date = \"2019-07-\" + getRandom(18, 30);\n    var acval = ac[getRandom(0, 5)];\n    var configval = config[getRandom(0, 3)];\n    var detail = details[getRandom(0, 1)];\n    var end=  parseInt(getRandom(0, 23) + getRandom(0, 5) +'0');\n    var start = parseInt(getRandom(Math.floor(end/100), 23) + getRandom(0, 5) +'0');\nvar newEvent = firebase.firestore().collection(\"events\").doc();\nvar newUpcomingEvent = firebase.firestore().collection('pilots').doc(pilot).collection('upcoming-events').doc();\n\n\n\nnewUpcomingEvent.set({\n    ac: acval,\n    captain: pilot,\n    flightid: newEvent.id,\n    config: configval,\n    date: date,\n    fo: fo,\n    details: detail,\n    endTime: end,\n    startTime: start,\n    })\n.then(function(docRef) {\n    console.log(\"Document successfully written!\");})\n.catch(function(error) {\n    console.error(\"Error writing document: \", error);\n})\n\nnewEvent.set({\n    ac: acval,\n    captain: pilot,\n    config: configval,\n    date: date,\n    dco: dco[getRandom(0, 8)],\n    details: detail,\n    fo: fo,\n    mission: \"427 AU H\"+ getRandom(1, 8) + getRandom(0,6) + \"3 G0\" + getRandom(0, 9),\n    pri: getRandom(1, 6),\n    remarks: getRandom(1,6) == 4 ? 'Academic Shoot' : '',\n    meal: getRandom(1,15) == 6 ? true : false,\n    endTime: end,\n    startTime: start,\n    type: \"flight\",\n    })\n.then(function(docRef) {\n    console.log(\"Document successfully written!\");})\n.catch(function(error) {\n    console.error(\"Error writing document: \", error);\n})\n\n\n\n}\n*/\n\n\n/*\nfirebase.firestore().collection(\"pilots\").doc('aearhart').set({\n    ac: ac[getRandom(0, 5)],\n    captain: pilots[getRandom(0, 7)],\n    config: config[getRandom(0, 3)],\n    date: \"2019-07-\" + getRandom(18, 30),\n    dco: dco[getRandom(0, 8)],\n    details: details[getRandom(0, 1)],\n    fo: pilots[getRandom(0,7)],\n    mission: \"427 AU H\"+ getRandom(1, 8) + getRandom(0,6) + \"3 G0\" + getRandom(0, 9),\n    pri: getRandom(1, 6),\n    remarks: getRandom(1,6) == 4 ? 'Academic Shoot' : '',\n    meal: getRandom(1,15) == 6 ? true : false,\n    endTime: parseInt(getRandom(0, 23) + getRandom(0, 5) +'0'),\n    startTime: parseInt(getRandom(0, 23) + getRandom(0, 5) +'0'),\n    type: \"flight\",\n    })\n.then(function(docRef) {\n    console.log(\"Document successfully written!\");})\n.catch(function(error) {\n    console.error(\"Error writing document: \", error);\n})*/\n\n\n\n\n/**************************** MASS FLIGHT CREEATION  ****************************/\n/*\nvar ac = [472, 582, 479, 496, 428, 409]\nvar pilots = ['wwright', 'clindbergh', 'cyeager', 'aearhart', 'pmitchell', 'jdoolittle', 'ehartmann', 'owright', '', '', '', '', '', '', ''];\nvar config = ['NR FF', \"V FF\", \"DC6S\", \"DC0S\"];\nvar dco = ['ok','ok','ok','ok','warn', 'warn', 'bad', 'ok','ok'];\nvar details = ['SME', \"ALP2\"];\nvar start = [130, 250, 320, 430, 520, 510, 720, 800, 930, 1020, 1110, 1130, 1230, 1310, 1350, 1420, 1530, 1720, 1820, 1920, 2040];\nvar l = [60,90, 120, 120, 120, 150, 180, 210, 60,  90, 90, 90, 90, 90, 120, 120, 120, 150, 180]\nvar state = {};\n\nfunction firebaseSetBool(pilot, date) {\n    var flightDate = 'flights.' + date;\n    firebase.firestore().collection(\"pilots\").doc(pilot).update({[flightDate]: true})\n    .then(function() {\n        console.log(\"Boolean successfully set for pilot\");})\n    .catch(function(error) {\n        console.error(\"Error setting flight boolean\", error);\n    })\n}\n\nfor (var i  = 0; i < 10 ; i ++) {\n    var s = start[getRandom(0,20)];\n    var e = s + l[getRandom(0,18)];\n    state.captain = pilots[getRandom(0, 7)];\n    state.fo = pilots[getRandom(0, 7)];\n    state.date = \"2020-04-\"+ getRandom(10, 18);\n    state.ac = ac[getRandom(0, 5)];\n    state.mission= \"427 AU H\"+ getRandom(1, 8) + getRandom(0,6) + \"3 G0\" + getRandom(0, 9);\n    state.fe = pilots[getRandom(0, 13)];\n    state.remarks= getRandom(1,6) == 4 ? 'Academic Shoot' : '';\n    state.crew = pilots[getRandom(0, 13)];\n    state.dco = dco[getRandom(0,8)];\n    state.pri = getRandom(1, 6);\n    state.config = config[getRandom(0, 3)];\n    state.details = details[getRandom(0, 1)];\n    state.startTime= (s < 1000 ? '0': '') + s.toString();\n    state.type=\"flight\";\n    state.endTime= (e < 1000 ? '0': '') + e.toString();\n\n    var newEvent = firebase.firestore().collection(\"events\").doc();\n    newEvent.set(state)\n    .then(function() {\n        console.log(\"Event successfully added to events!\");})\n    .catch(function(error) {\n        console.error(\"Error adding event: \", error);\n    });\n\n    var updates = {};\n    updates['events.'+state.captain] = firebase.firestore.FieldValue.arrayUnion({'type':'flight', 'startTime': state.startTime, 'endTime': state.endTime, 'id':newEvent.id});\n    updates['events.'+state.fo] = firebase.firestore.FieldValue.arrayUnion({'type':'flight', 'startTime': state.startTime, 'endTime': state.endTime, 'id':newEvent.id});\n    firebaseSetBool(state.captain, state.date);\n    firebaseSetBool(state.fo, state.date);\n    var newUpcomingEvents = [firebase.firestore().collection('pilots').doc(state.captain).collection('upcoming-events').doc(),\n    firebase.firestore().collection('pilots').doc(state.fo).collection('upcoming-events').doc()];\n\n    if (state.fe) {\n        updates['events.'+state.fe] = firebase.firestore.FieldValue.arrayUnion({'type':'flight', 'startTime': state.startTime, 'endTime': state.endTime, 'id':newEvent.id});\n        newUpcomingEvents.push(firebase.firestore().collection('pilots').doc(state.fe).collection('upcoming-events').doc());\n        firebaseSetBool(state.fe, state.date);\n    }\n    if (state.crew) {\n        updates['events.'+state.crew] = firebase.firestore.FieldValue.arrayUnion({'type':'flight', 'startTime': state.startTime, 'endTime': state.endTime, 'id':newEvent.id});\n        newUpcomingEvents.push(firebase.firestore().collection('pilots').doc(state.crew).collection('upcoming-events').doc());\n        firebaseSetBool(state.crew, state.date);\n    }\n\n    const ref = firebase.firestore().collection(\"dates\").doc(state.date);\n    ref.get()\n        .then((docSnapshot) => {if (!docSnapshot.exists)\n        { ref.set({\n            dutymtp: null,\n            oic: null,\n            groundrun: null,\n            twilightciv: null,twilightnaut: null,\n            desksgtday: null, desksgtnight: null,\n            fdoday: null, fdonight: null\n        })\n        .then(()=> {\n            console.log(\"Date successfully written!\");\n        })\n        .catch(function(error) {\n            console.error(\"Error writing date: \", error);\n        });\n    }});\n    firebase.firestore().collection(\"dates\").doc(state.date).update(updates)\n    .then(function() {\n        console.log(\"Event successfully added to dates!\");})\n    .catch(function(error) {\n        console.error(\"Error writing document: \", error);\n    })\n\n    console.log(newUpcomingEvents)\n    newUpcomingEvents.forEach((x)=>{x.set({\n        ac: state.ac,\n        captain: state.captain,\n        flightid: newEvent.id,\n        config: state.config,\n        date: state.date,\n        fo: state.fo,\n        fe: state.fe,\n        crew: state.crew,\n        details: state.details,\n        endTime: state.endTime,\n        startTime: state.startTime,})\n    .then(function() {\n        console.log(\"Event successfully added to pilots!\");})\n    .catch(function(error) {\n        console.error(\"Error writing document: \", error);\n    })})\n\n    firebase.firestore().collection(\"dates\").doc(state.date).update(updates)\n    .then(function() {\n        console.log(\"Event successfully added to dates!\");})\n    .catch(function(error) {\n        console.error(\"Error writing document: \", error);\n    })\n}*/\n/*************************************************     MASS MEETING UPDATES **************************************************/\n /*\nvar l = [30, 60, 60, 60, 90, 90, 90, 90, 90, 90, 120, 120, 120, 150, 180]\nvar pilots = ['aerhart', 'wwright', 'clindbergh', 'cyeager', 'aearhart', 'pmitchell', 'jdoolittle', 'ehartmann', 'owright'];\nvar start = [800, 900, 1020, 1150, 1130, 1240, 1320, 1340, 1420, 1530];\nvar location = ['', \"\", '', 'Classroom A', 'Room 201', \"Courtyard\", '', '', ''];\nvar details = ['Strategy Discussion', \"Sync with CO\", \"Lunch Discussion\", \"Review Scheduler\"];\nvar state = {};\n\nfor (var i  = 0; i < 5 ; i ++) {\n\n    var s = start[getRandom(0,9)];\n    var e = s + l[getRandom(0,14)];\n\n    state.title =  details[getRandom(0, 3)];\n    state.type= \"meeting\";\n    state.date= \"2020-04-\" + getRandom(10, 30);\n    state.startTime= (s < 1000 ? '0': '') + s.toString();\n    state.endTime= (e < 1000 ? '0': '') + e.toString();\n    state.location= location[getRandom(0, 8)]; \n    state.confLink= \"\";\n    state.notes= \"\";\n    state.userid=pilots[getRandom(0, 8)];\n    console.log(state);\n\n\n\nconsole.log(state);\nvar newEvent = firebase.firestore().collection(\"events\").doc()\nnewEvent.set(state)\n.then(function() {\n    console.log(\"Event successfully added to events!\");})\n.catch(function(error) {\n    console.error(\"Error adding event: \", error);\n});\n\nvar field = 'events.'+state.userid;\nfirebase.firestore().collection(\"dates\").doc(state.date).update({\n    [field]: firebase.firestore.FieldValue.arrayUnion({'type':'meeting', 'startTime': state.startTime, 'endTime': state.endTime, 'id':newEvent.id})\n    })\n.then(function() {\n    console.log(\"Event successfully added to dates!\");})\n.catch(function(error) {\n    console.log({'type':'meeting', 'startTime': state.startTime, 'endTime': state.endTime, 'id':newEvent.id});\n    console.error(\"Error writing document: \", error);\n})}\n\n*/\n\n/*************************************************     MASS APT UPDATES **************************************************/\nfunction makeApts(num, month, start, end)\n\n{\nvar l = [30,30, 60, 60, 60, 90, 90, 90, 90, 90, 120, 120, 120, 150, 180]\nvar pilots = ['wwright', 'clindbergh', 'cyeager', 'aearhart', 'pmitchell', 'jdoolittle', 'ehartmann', 'owright'];\nvar start = [800, 900, 1020, 1150, 1130, 1240, 1320, 1340, 1420, 1530];\nvar location = ['', \"\", '', 'Classroom A', 'Room 201', \"Courtyard\", '', '', ''];\nvar details = ['Medical', \"Dentist\", \"Course\", \"Temp Leave\"];\nvar event = ['apt', 'leave', 'pers', 'yl'];\nvar state = {};\n\nfor (var i  = 0; i < num ; i ++) {\n\n    state.title =  details[getRandom(0, 3)];\n    state.type=  \"apt\";\n    var s = start[getRandom(0,9)];\n    var e = s + l[getRandom(0,14)];\n    var d = getRandom(start,end);\n    state.date= \"2020-\" + month + '-' + (d < 10 ? '0' : '') + d;\n    \n    state.startTime= (s < 1000 ? '0': '') + s.toString();\n    state.endTime= (e < 1000 ? '0': '') + e.toString();\n    state.event = event[getRandom(0, 3)];\n    state.notes= \"\";\n    state.location=location[getRandom(0, 8)];\n    state.userid=pilots[getRandom(0, 7)];\n    console.log(state);\n\n\n\nconsole.log(state);\nvar newEvent = firebase.firestore().collection(\"events\").doc()\nnewEvent.set(state)\n.then(function() {\n    console.log(\"Event successfully added to events!\");})\n.catch(function(error) {\n    console.error(\"Error adding event: \", error);\n});\n\nvar field = 'events.'+state.userid;\nfirebase.firestore().collection(\"dates\").doc(state.date).update({\n    [field]: firebase.firestore.FieldValue.arrayUnion({'type':'apt', 'startTime': state.startTime, 'endTime': state.endTime, 'id':newEvent.id})\n    })\n.then(function() {\n    console.log(\"Event successfully added to dates!\");})\n.catch(function(error) {\n    console.error(\"Error writing document: \", error);\n})}\n\n}\n\n}\n\nexport default updateData;"]},"metadata":{},"sourceType":"module"}
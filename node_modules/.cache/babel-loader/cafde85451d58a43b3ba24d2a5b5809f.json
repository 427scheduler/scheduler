{"ast":null,"code":"var _jsxFileName = \"/Users/jenny/Desktop/SOAS/scheduler/src/Flights.js\";\nimport React from 'react';\nimport \"./Flights.css\";\nimport RIGHT_BTN from './img/right-arrow.png';\nimport LEFT_BTN from './img/left-arrow.png';\nimport OK from './img/good.png';\nimport WARNING from './img/warning.png';\nimport BAD from './img/bad.png';\nimport firebase from \"./Firebase.js\";\nvar today = new Date();\nvar dd = String(today.getDate()).padStart(2, '0');\nvar mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n\nvar yyyy = today.getFullYear();\ntoday = mm + '/' + dd + '/' + yyyy;\n/** var data = []\nfirebase.collection(\"flights\").get().then(querySnapshot => {\nquerySnapshot.docs.map(doc => {\n    console.log(doc)\n});})*/\n// Add a new document in collection \"cities\"\n\n/** firebase.collection(\"flights\").add({\n    name: \"Los Angeles\",\n    country: \"USA\"\n})\n.then(function(docRef) {\n    console.log(\"Document successfully written!\", docRef.id);\n})\n.catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});*/\n\nfunction date(props) {\n  var today = new Date();\n  var weekday = today.getDay();\n  var day = today.getDate();\n  var month = today.getMonth();\n  var year = today.getFullYear();\n  var days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n  var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  return React.createElement(\"div\", {\n    className: \"flight-date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, days[weekday] + \", \" + months[month] + \" \" + day + \", \" + year));\n}\n\nfunction renderFlightDayHeader(props) {\n  return React.createElement(\"div\", {\n    className: \"flight-day-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"date-btn\",\n    src: LEFT_BTN,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), date(), React.createElement(\"img\", {\n    className: \"date-btn\",\n    src: RIGHT_BTN,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }));\n}\n\nfunction RenderFlightDay(props) {\n  var headers = ['ETD', 'AC', 'CREW', 'MISSION', 'DETAILS', 'CONFIG', 'REMARKS', 'SQ PRI', 'DCO', 'ETR'];\n  var tableHeaders = [];\n  var ac = React.createElement(\"div\", {\n    className: \"ac-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"462\");\n  var dot = React.createElement(\"div\", {\n    className: \"dot-ok\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  });\n  headers.forEach(title => {\n    tableHeaders.push(React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, title));\n  });\n  var data = [['0900', ac, 'Amelia E | Charlies L', '427 AU H102 G00', 'SME', 'DC6S', \"\", '1 SOA', dot, '1030'], ['2520', ac, 'D.B. Cooper | Maverick', '427 AU H105 G00', 'ALP1', 'DC6S', \"\", '3 SOA', dot, '1230']];\n  var tableRows = [];\n  data.forEach(row => {\n    var r = [];\n\n    for (var i = 0; i < row.length; i++) {\n      r.push(React.createElement(\"td\", {\n        className: headers[i].toLowerCase(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, row[i]));\n    }\n\n    var hr = parseInt(row[0][0] + row[0][1]);\n    var min = parseInt(row[0][2] + row[0][3]);\n    tableRows.push(React.createElement(\"tr\", {\n      className: props.date.getHours() > hr || hr == props.date.getHours() && props.date.getMinutes() > min ? 'expired' : '',\n      onClick: props.toggleOverlay.bind(this, \"AC940\", '521512'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, r));\n  });\n  return React.createElement(\"div\", {\n    className: \"flight-day\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, tableHeaders), tableRows));\n}\n\nfunction RenderFlightDayBox(props) {\n  return React.createElement(\"div\", {\n    className: \"flight-day-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, renderFlightDayHeader(), React.createElement(RenderFlightDay, {\n    date: props.date,\n    toggleOverlay: (event, id) => {\n      props.toggleOverlay(event, id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }));\n}\n\nfunction RenderInfoBox(props) {\n  return React.createElement(\"div\", {\n    className: \"info-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"info-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, props.title)), React.createElement(\"div\", {\n    className: \"info-content\",\n    contentEditable: true,\n    suppressContentEditableWarning: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"N/A\")));\n}\n\nfunction RenderInfoBar(props) {\n  const default_info = [\"EVENING TWILIGHT\", \"SNAGS DESK SGT\", \"DUTY MVP\", \"FDO\", \"DUTY GROUND RUN\"];\n  var boxes = [];\n\n  for (var i = 0; i < default_info.length; i++) {\n    var title = default_info[i];\n    boxes.push(React.createElement(RenderInfoBox, {\n      title: title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"info-bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"time-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"CURRENT TIME\")), React.createElement(\"div\", {\n    className: \"time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, (props.date.getHours() < 10 ? \"0\" : \"\") + props.date.getHours() + ':' + (props.date.getMinutes() < 10 ? \"0\" : \"\") + props.date.getMinutes())), boxes);\n}\n\nclass Flights extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date()\n    };\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date()\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(RenderFlightDayBox, {\n      date: this.state.date,\n      toggleOverlay: (event, id) => {\n        this.props.toggleOverlay(event, id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(RenderInfoBar, {\n      date: this.state.date,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Flights;","map":{"version":3,"sources":["/Users/jenny/Desktop/SOAS/scheduler/src/Flights.js"],"names":["React","RIGHT_BTN","LEFT_BTN","OK","WARNING","BAD","firebase","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","date","props","weekday","getDay","day","month","year","days","months","renderFlightDayHeader","RenderFlightDay","headers","tableHeaders","ac","dot","forEach","title","push","data","tableRows","row","r","i","length","toLowerCase","hr","parseInt","min","getHours","getMinutes","toggleOverlay","bind","RenderFlightDayBox","event","id","RenderInfoBox","RenderInfoBar","default_info","boxes","Flights","Component","constructor","state","componentDidMount","timerID","setInterval","tick","componentWillUnmount","clearInterval","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,EAAP,MAAe,gBAAf;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAOC,QAAP,MAAqB,eAArB;AAEA,IAAIC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACA,IAAIC,EAAE,GAAGC,MAAM,CAACH,KAAK,CAACI,OAAN,EAAD,CAAN,CAAwBC,QAAxB,CAAiC,CAAjC,EAAoC,GAApC,CAAT;AACA,IAAIC,EAAE,GAAGH,MAAM,CAACH,KAAK,CAACO,QAAN,KAAmB,CAApB,CAAN,CAA6BF,QAA7B,CAAsC,CAAtC,EAAyC,GAAzC,CAAT,C,CAAwD;;AACxD,IAAIG,IAAI,GAAGR,KAAK,CAACS,WAAN,EAAX;AAEAT,KAAK,GAAGM,EAAE,GAAG,GAAL,GAAWJ,EAAX,GAAgB,GAAhB,GAAsBM,IAA9B;AAEA;;;;;AAMA;;AACA;;;;;;;;;;;AAWA,SAASE,IAAT,CAAcC,KAAd,EAAqB;AACjB,MAAIX,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACA,MAAIW,OAAO,GAAGZ,KAAK,CAACa,MAAN,EAAd;AACA,MAAIC,GAAG,GAAGd,KAAK,CAACI,OAAN,EAAV;AACA,MAAIW,KAAK,GAAGf,KAAK,CAACO,QAAN,EAAZ;AACA,MAAIS,IAAI,GAAGhB,KAAK,CAACS,WAAN,EAAX;AACA,MAAIQ,IAAI,GAAG,CAAC,QAAD,EAAW,SAAX,EAAsB,WAAtB,EAAmC,UAAnC,EAA+C,QAA/C,EAAyD,UAAzD,EAAqE,QAArE,CAAX;AACA,MAAIC,MAAM,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,QAAjE,EAA2E,WAA3E,EAAwF,SAAxF,EAAmG,UAAnG,EAA8G,UAA9G,CAAb;AACA,SACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,IAAI,CAACL,OAAD,CAAJ,GAAe,IAAf,GAAoBM,MAAM,CAACH,KAAD,CAA1B,GAAkC,GAAlC,GAAsCD,GAAtC,GAA0C,IAA1C,GAA+CE,IAApD,CADJ,CADJ;AAKH;;AAED,SAASG,qBAAT,CAA+BR,KAA/B,EAAsC;AAClC,SACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,GAAG,EAAEhB,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKe,IAAI,EAFT,EAGI;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,GAAG,EAAEhB,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAOH;;AACD,SAAS0B,eAAT,CAAyBT,KAAzB,EAAgC;AAC5B,MAAIU,OAAO,GAAG,CAAC,KAAD,EAAQ,IAAR,EAAc,MAAd,EAAsB,SAAtB,EAAiC,SAAjC,EAA4C,QAA5C,EAAsD,SAAtD,EAAiE,QAAjE,EAA2E,KAA3E,EAAkF,KAAlF,CAAd;AACA,MAAIC,YAAY,GAAG,EAAnB;AACA,MAAIC,EAAE,GAAG;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAT;AACA,MAAIC,GAAG,GAAG;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAV;AACAH,EAAAA,OAAO,CAACI,OAAR,CAAgBC,KAAK,IAAI;AACrBJ,IAAAA,YAAY,CAACK,IAAb,CAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,KAAL,CAAlB;AACH,GAFD;AAGA,MAAIE,IAAI,GAAG,CAAC,CAAC,MAAD,EAASL,EAAT,EAAa,uBAAb,EAAsC,iBAAtC,EAAyD,KAAzD,EAAgE,MAAhE,EAAwE,EAAxE,EAA4E,OAA5E,EAAqFC,GAArF,EAA0F,MAA1F,CAAD,EACC,CAAC,MAAD,EAASD,EAAT,EAAa,wBAAb,EAAuC,iBAAvC,EAA0D,MAA1D,EAAkE,MAAlE,EAA0E,EAA1E,EAA8E,OAA9E,EAAuFC,GAAvF,EAA4F,MAA5F,CADD,CAAX;AAEA,MAAIK,SAAS,GAAG,EAAhB;AAEAD,EAAAA,IAAI,CAACH,OAAL,CAAaK,GAAG,IAAI;AAChB,QAAIC,CAAC,GAAG,EAAR;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAACF,GAAG,CAACG,MAAtB,EAA8BD,CAAC,EAA/B,EAAmC;AAC/BD,MAAAA,CAAC,CAACJ,IAAF,CAAO;AAAI,QAAA,SAAS,EAAEN,OAAO,CAACW,CAAD,CAAP,CAAWE,WAAX,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0CJ,GAAG,CAACE,CAAD,CAA7C,CAAP;AACH;;AACD,QAAIG,EAAE,GAAGC,QAAQ,CAACN,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,IAAUA,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAX,CAAjB;AACA,QAAIO,GAAG,GAAGD,QAAQ,CAACN,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,IAAUA,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAX,CAAlB;AACAD,IAAAA,SAAS,CAACF,IAAV,CAAe;AAAI,MAAA,SAAS,EAAGhB,KAAK,CAACD,IAAN,CAAW4B,QAAX,KAAwBH,EAAzB,IAAiCA,EAAE,IAAIxB,KAAK,CAACD,IAAN,CAAW4B,QAAX,EAAN,IAA+B3B,KAAK,CAACD,IAAN,CAAW6B,UAAX,KAA0BF,GAA1F,GAAiG,SAAjG,GAA2G,EAA1H;AAA8H,MAAA,OAAO,EAAE1B,KAAK,CAAC6B,aAAN,CAAoBC,IAApB,CAAyB,IAAzB,EAA8B,OAA9B,EAAsC,QAAtC,CAAvI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyLV,CAAzL,CAAf;AACH,GARD;AASA,SACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,YADL,CADJ,EAIKO,SAJL,CADJ,CADJ;AAUH;;AAED,SAASa,kBAAT,CAA4B/B,KAA5B,EAAmC;AAC/B,SACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKQ,qBAAqB,EAD1B,EAEI,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAER,KAAK,CAACD,IAA7B;AAAmC,IAAA,aAAa,EAAE,CAACiC,KAAD,EAAOC,EAAP,KAAY;AAACjC,MAAAA,KAAK,CAAC6B,aAAN,CAAoBG,KAApB,EAA2BC,EAA3B;AAA+B,KAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH;;AAED,SAASC,aAAT,CAAuBlC,KAAvB,EAA8B;AAC1B,SACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACe,KAAX,CADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,eAAe,EAAE,IAA/C;AAAqD,IAAA,8BAA8B,EAAE,IAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,CAJJ,CADJ;AAUH;;AAED,SAASoB,aAAT,CAAuBnC,KAAvB,EAA8B;AAC1B,QAAMoC,YAAY,GAAG,CAAC,kBAAD,EAAqB,gBAArB,EAAuC,UAAvC,EAAmD,KAAnD,EAA0D,iBAA1D,CAArB;AACA,MAAIC,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIhB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGe,YAAY,CAACd,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC1C,QAAIN,KAAK,GAAGqB,YAAY,CAACf,CAAD,CAAxB;AACAgB,IAAAA,KAAK,CAACrB,IAAN,CAAW,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAED,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAX;AACH;;AACD,SACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,CAACf,KAAK,CAACD,IAAN,CAAW4B,QAAX,KAAsB,EAAtB,GAAyB,GAAzB,GAA6B,EAA9B,IAAkC3B,KAAK,CAACD,IAAN,CAAW4B,QAAX,EAAlC,GAAwD,GAAxD,IAA6D3B,KAAK,CAACD,IAAN,CAAW6B,UAAX,KAAwB,EAAxB,GAA2B,GAA3B,GAA+B,EAA5F,IAAgG5B,KAAK,CAACD,IAAN,CAAW6B,UAAX,EAArG,CADJ,CAJJ,EAOKS,KAPL,CADJ;AAWH;;AAED,MAAMC,OAAN,SAAsBxD,KAAK,CAACyD,SAA5B,CAAsC;AAClCC,EAAAA,WAAW,CAACxC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKyC,KAAL,GAAa;AAAC1C,MAAAA,IAAI,EAAE,IAAIT,IAAJ;AAAP,KAAb;AACH;;AACDoD,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,OAAL,GAAeC,WAAW,CAAC,MAAM,KAAKC,IAAL,EAAP,EAAoB,IAApB,CAA1B;AACH;;AAEDC,EAAAA,oBAAoB,GAAG;AAACC,IAAAA,aAAa,CAAC,KAAKJ,OAAN,CAAb;AAA6B;;AAErDE,EAAAA,IAAI,GAAG;AAAC,SAAKG,QAAL,CAAc;AAACjD,MAAAA,IAAI,EAAE,IAAIT,IAAJ;AAAP,KAAd;AAAmC;;AAE3C2D,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,kBAAD;AAAoB,MAAA,IAAI,EAAE,KAAKR,KAAL,CAAW1C,IAArC;AAA2C,MAAA,aAAa,EAAE,CAACiC,KAAD,EAAOC,EAAP,KAAY;AAAC,aAAKjC,KAAL,CAAW6B,aAAX,CAAyBG,KAAzB,EAAgCC,EAAhC;AAAoC,OAA3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,aAAD;AAAe,MAAA,IAAI,EAAE,KAAKQ,KAAL,CAAW1C,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AApBiC;;AAuBtC,eAAeuC,OAAf","sourcesContent":["import React from 'react';\nimport \"./Flights.css\";\nimport RIGHT_BTN from './img/right-arrow.png';\nimport LEFT_BTN from './img/left-arrow.png';\nimport OK from './img/good.png';\nimport WARNING from './img/warning.png';\nimport BAD from './img/bad.png';\nimport firebase from \"./Firebase.js\";\n\nvar today = new Date();\nvar dd = String(today.getDate()).padStart(2, '0');\nvar mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\nvar yyyy = today.getFullYear();\n\ntoday = mm + '/' + dd + '/' + yyyy;\n\n/** var data = []\nfirebase.collection(\"flights\").get().then(querySnapshot => {\nquerySnapshot.docs.map(doc => {\n    console.log(doc)\n});})*/\n\n// Add a new document in collection \"cities\"\n/** firebase.collection(\"flights\").add({\n    name: \"Los Angeles\",\n    country: \"USA\"\n})\n.then(function(docRef) {\n    console.log(\"Document successfully written!\", docRef.id);\n})\n.catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});*/\n\nfunction date(props) {\n    var today = new Date();\n    var weekday = today.getDay();\n    var day = today.getDate();\n    var month = today.getMonth();\n    var year = today.getFullYear();\n    var days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n    var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\",\"December\"];\n    return (\n        <div className='flight-date'>\n            <h2>{days[weekday] +\", \"+months[month]+\" \"+day+\", \"+year}</h2>\n        </div>\n    )\n}\n\nfunction renderFlightDayHeader(props) {\n    return (\n        <div className=\"flight-day-header\">\n            <img className='date-btn' src={LEFT_BTN}></img>\n            {date()}\n            <img className='date-btn' src={RIGHT_BTN}></img>\n        </div>\n    )\n}\nfunction RenderFlightDay(props) {\n    var headers = ['ETD', 'AC', 'CREW', 'MISSION', 'DETAILS', 'CONFIG', 'REMARKS', 'SQ PRI', 'DCO', 'ETR'];\n    var tableHeaders = [];\n    var ac = <div className='ac-wrap'>462</div>;\n    var dot = <div className=\"dot-ok\"></div>;\n    headers.forEach(title => {\n        tableHeaders.push(<th>{title}</th>)\n    });\n    var data = [['0900', ac, 'Amelia E | Charlies L', '427 AU H102 G00', 'SME', 'DC6S', \"\", '1 SOA', dot, '1030'], \n                ['2520', ac, 'D.B. Cooper | Maverick', '427 AU H105 G00', 'ALP1', 'DC6S', \"\", '3 SOA', dot, '1230']]\n    var tableRows = [];\n    \n    data.forEach(row => {\n        var r = [];\n        for (var i = 0; i<row.length; i++) {\n            r.push(<td className={headers[i].toLowerCase()}>{row[i]}</td>);\n        }  \n        var hr = parseInt(row[0][0]+row[0][1]);\n        var min = parseInt(row[0][2]+row[0][3]);\n        tableRows.push(<tr className={(props.date.getHours() > hr) || (hr == props.date.getHours() && props.date.getMinutes() > min) ? 'expired':''} onClick={props.toggleOverlay.bind(this,\"AC940\",'521512')}>{r}</tr>);\n    });\n    return (\n        <div className=\"flight-day\">\n            <table>\n                <tr>\n                    {tableHeaders}\n                </tr>\n                {tableRows}\n            </table>\n        </div>\n    )\n}\n\nfunction RenderFlightDayBox(props) {\n    return (\n        <div className=\"flight-day-box\">\n            {renderFlightDayHeader()}\n            <RenderFlightDay date={props.date} toggleOverlay={(event,id)=>{props.toggleOverlay(event, id)}}/>\n        </div>\n    )\n}\n\nfunction RenderInfoBox(props) {\n    return (\n        <div className=\"info-box\">\n            <div className=\"info-title\">\n                <h5>{props.title}</h5>\n            </div>\n            <div className=\"info-content\" contentEditable={true} suppressContentEditableWarning={true}>\n                <h5>N/A</h5>\n            </div>\n        </div>\n    )\n}\n\nfunction RenderInfoBar(props) {\n    const default_info = [\"EVENING TWILIGHT\", \"SNAGS DESK SGT\", \"DUTY MVP\", \"FDO\", \"DUTY GROUND RUN\"];\n    var boxes = [];\n    for (var i = 0; i < default_info.length; i++) {\n        var title = default_info[i]\n        boxes.push(<RenderInfoBox title={title}/>)\n    }\n    return (\n        <div className=\"info-bar\">\n            <div className=\"time-title\">\n                <h5>CURRENT TIME</h5>\n            </div>\n            <div className=\"time\">\n                <h2>{(props.date.getHours()<10?\"0\":\"\")+props.date.getHours()+':'+(props.date.getMinutes()<10?\"0\":\"\")+props.date.getMinutes()}</h2>\n            </div>\n            {boxes}\n        </div>\n    )\n}\n\nclass Flights extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {date: new Date()};\n    }\n    componentDidMount() {\n        this.timerID = setInterval(() => this.tick(), 1000);\n    }\n\n    componentWillUnmount() {clearInterval(this.timerID);}\n\n    tick() {this.setState({date: new Date()});}\n\n    render() {\n        return (\n            <div className='container'>\n                <RenderFlightDayBox date={this.state.date} toggleOverlay={(event,id)=>{this.props.toggleOverlay(event, id)}}/>\n                <RenderInfoBar date={this.state.date}/>\n            </div>\n        )\n    }\n}\n\nexport default Flights;\n"]},"metadata":{},"sourceType":"module"}
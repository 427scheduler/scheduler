{"ast":null,"code":"import _slicedToArray from \"/Users/jenny/Desktop/SOAS/scheduler/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jenny/Desktop/SOAS/scheduler/src/Login.js\";\nimport React from 'react';\nimport \"./Login.css\";\nimport firebase from \"./Firebase.js\";\n/*function checkInput(input) {\n    if (input == \"Amelia Earhart\") {\n        document.getElementsByClassName(\"pswdForm\")[0].hidden = false;\n        document.getElementsByClassName(\"pswdInput\")[0].hidden = false;\n    }\n    else {\n        if (document.getElementsByClassName(\"pswdForm\")[0].hidden == false) {\n            document.getElementsByClassName(\"pswdForm\")[0].hidden = true;\n            document.getElementsByClassName(\"pswdInput\")[0].hidden = true;\n        }\n    }\n}*/\n\nfunction validateInput(email, password) {\n  var ok = true; //if (email.length < 4 || email.slice(-13) != '@forces.gc.ca') {\n\n  if (email.length < 4) {\n    setAlert('email', 'Please enter your @forces.gc.ca email address');\n    ok = false;\n  } else {\n    setAlert('email', '');\n  }\n\n  if (password.length < 5) {\n    setAlert('password', 'Please enter a password');\n    ok = false;\n  } else {\n    setAlert('password', '');\n  }\n\n  return ok;\n}\n\nfunction handleError(errorCode, errorMessage) {\n  switch (errorCode) {\n    case 'auth/weak-password':\n      setAlert('password', 'The password is too weak');\n      break;\n\n    case 'auth/wrong-password':\n      setAlert('password', 'Wrong password');\n      break;\n\n    case 'auth/email-already-in-use':\n      setAlert('email', 'The email address is already in use by another account.');\n      break;\n\n    default:\n      setAlert('email', errorMessage);\n  }\n}\n/**\n * Handles the sign up button press.\n */\n\n\nfunction signUp() {\n  var email = document.getElementById('email').value;\n  var password = document.getElementById('password').value;\n  var actionCodeSettings = {\n    // URL you want to redirect back to. The domain (www.example.com) for this\n    // URL must be whitelisted in the Firebase Console.\n    url: 'http://localhost:3000/',\n    // This must be true.\n    handleCodeInApp: true,\n    iOS: {\n      bundleId: 'com.example.ios'\n    },\n    android: {\n      packageName: 'com.example.android',\n      installApp: true,\n      minimumVersion: '12'\n    },\n    dynamicLinkDomain: 'http://localhost:3000/'\n  };\n\n  if (!validateInput(email, password)) {\n    return;\n  } // Sign in with email and pass.\n  // [START createwithemail]\n\n\n  firebase.auth().createUserWithEmailAndPassword(email, password).catch(function (error) {\n    // Handle Errors here.\n    handleError(error.code, error.message);\n    console.log(error);\n    return;\n  });\n  firebase.auth().sendSignInLinkToEmail(email, actionCodeSettings).then(function () {\n    // The link was successfully sent. Inform the user.\n    // Save the email locally so you don't need to ask the user for it again\n    // if they open the link on the same device.\n    window.localStorage.setItem('emailForSignIn', email);\n  }).catch(function (error) {// Some error occurred, you can inspect the code: error.code\n  });\n  var user = firebase.auth().currentUser;\n\n  if (user) {\n    var userName = email.split(/([0-9]+)/)[0];\n\n    var _userName$split$ = _slicedToArray(userName.split('@')[0], 2),\n        first = _userName$split$[0],\n        last = _userName$split$[1];\n\n    user.updateProfile({\n      displayName: first + \" \" + last\n    }).catch(function (error) {\n      console.log(\"An error occurred while creating name. Please try again.\");\n    });\n  }\n}\n\nfunction toggleSignIn() {\n  if (firebase.auth().currentUser) {\n    // [START signout]\n    firebase.auth().signOut(); // [END signout]\n  } else {\n    var email = document.getElementById('email').value;\n    var password = document.getElementById('password').value;\n\n    if (!validateInput(email, password)) {\n      return;\n    } // Sign in with email and pass.\n\n\n    firebase.auth().signInWithEmailAndPassword(email, password).catch(function (error) {\n      // Handle Errors here.\n      handleError(error.code, error.message);\n      console.log(error);\n    });\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        if (!user.emailVerified) {\n          setAlert('email', 'Please verify your email.');\n        }\n      }\n    });\n  } //document.getElementById('quickstart-sign-in').disabled = true;\n\n}\n\nfunction setAlert(type, alertText) {\n  var errorType = type + 'Error';\n  document.getElementById(errorType).innerHTML = alertText;\n}\n\nfunction LoginForm() {\n  //var pilots = []\n  //firebase.ref('/pilots').once('name').then(function(snapshot) {\n  //    console.log(snapshot.val())\n  //});\n  return React.createElement(\"form\", {\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"userForm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"input\", {\n    id: \"email\",\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    id: \"emailError\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    className: \"pswdForm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    id: \"password\",\n    type: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    id: \"passwordError\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }), React.createElement(RenderFormButtons, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }));\n}\n\nfunction RenderFormButtons() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"sign-up-btn\",\n    type: \"button\",\n    onClick: signUp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"Sign Up\"), React.createElement(\"button\", {\n    className: \"sign-in-btn\",\n    type: \"button\",\n    onClick: toggleSignIn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"Next\"));\n}\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return React.createElement(LoginForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/jenny/Desktop/SOAS/scheduler/src/Login.js"],"names":["React","firebase","validateInput","email","password","ok","length","setAlert","handleError","errorCode","errorMessage","signUp","document","getElementById","value","actionCodeSettings","url","handleCodeInApp","iOS","bundleId","android","packageName","installApp","minimumVersion","dynamicLinkDomain","auth","createUserWithEmailAndPassword","catch","error","code","message","console","log","sendSignInLinkToEmail","then","window","localStorage","setItem","user","currentUser","userName","split","first","last","updateProfile","displayName","toggleSignIn","signOut","signInWithEmailAndPassword","onAuthStateChanged","emailVerified","type","alertText","errorType","innerHTML","LoginForm","RenderFormButtons","Login","Component","constructor","props","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport \"./Login.css\"\nimport firebase from \"./Firebase.js\";\n\n\n/*function checkInput(input) {\n    if (input == \"Amelia Earhart\") {\n        document.getElementsByClassName(\"pswdForm\")[0].hidden = false;\n        document.getElementsByClassName(\"pswdInput\")[0].hidden = false;\n    }\n    else {\n        if (document.getElementsByClassName(\"pswdForm\")[0].hidden == false) {\n            document.getElementsByClassName(\"pswdForm\")[0].hidden = true;\n            document.getElementsByClassName(\"pswdInput\")[0].hidden = true;\n        }\n    }\n}*/\n\nfunction validateInput(email, password) {\n    var ok = true;\n    //if (email.length < 4 || email.slice(-13) != '@forces.gc.ca') {\n    if (email.length < 4){\n        setAlert('email', 'Please enter your @forces.gc.ca email address');\n        ok = false;\n    }\n    else {setAlert('email', '')}\n    if (password.length < 5 ) {\n        setAlert('password','Please enter a password');\n        ok = false;\n    }\n    else {setAlert('password', '')}\n    return ok;\n}\n\n\n\nfunction handleError(errorCode, errorMessage) {\n    switch(errorCode) {\n        case 'auth/weak-password':\n            setAlert('password','The password is too weak');\n            break;\n        case 'auth/wrong-password': \n            setAlert('password', 'Wrong password')\n            break;\n        case 'auth/email-already-in-use': \n            setAlert('email','The email address is already in use by another account.');\n            break;\n        default: \n            setAlert('email', errorMessage);\n    }\n}\n/**\n * Handles the sign up button press.\n */\nfunction signUp() {\n    var email = document.getElementById('email').value;\n    var password = document.getElementById('password').value;\n    var actionCodeSettings = {\n        // URL you want to redirect back to. The domain (www.example.com) for this\n        // URL must be whitelisted in the Firebase Console.\n        url: 'http://localhost:3000/',\n        // This must be true.\n        handleCodeInApp: true,\n        iOS: {\n            bundleId: 'com.example.ios'\n        },\n        android: {\n            packageName: 'com.example.android',\n            installApp: true,\n            minimumVersion: '12'\n        },\n        dynamicLinkDomain: 'http://localhost:3000/'\n    };\n\n    if (!validateInput(email, password)) {\n        return;\n    }\n    // Sign in with email and pass.\n    // [START createwithemail]\n    firebase.auth().createUserWithEmailAndPassword(email, password).catch(function(error) {\n        // Handle Errors here.\n        handleError(error.code, error.message);\n        console.log(error);\n        return;\n    });\n\n    firebase.auth().sendSignInLinkToEmail(email, actionCodeSettings)\n    .then(function() {\n        // The link was successfully sent. Inform the user.\n        // Save the email locally so you don't need to ask the user for it again\n        // if they open the link on the same device.\n        window.localStorage.setItem('emailForSignIn', email);\n    })\n    .catch(function(error) {\n        // Some error occurred, you can inspect the code: error.code\n    });\n\n    var user = firebase.auth().currentUser;\n    if (user) {\n        var userName = email.split(/([0-9]+)/)[0];\n        var [first, last] = userName.split('@')[0];\n        user.updateProfile({\n            displayName: first + \" \" + last\n        }).catch(function(error) {\n            console.log(\"An error occurred while creating name. Please try again.\");\n        });\n    }\n}\n\nfunction toggleSignIn() {\n    if (firebase.auth().currentUser) {\n      // [START signout]\n      firebase.auth().signOut();\n      // [END signout]\n    } else {\n        var email = document.getElementById('email').value;\n        var password = document.getElementById('password').value;\n        if (!validateInput(email, password)) {\n            return;\n        }\n        // Sign in with email and pass.\n        firebase.auth().signInWithEmailAndPassword(email, password).catch(function(error) {\n            // Handle Errors here.\n            handleError(error.code, error.message);\n            console.log(error);\n        });\n\n        firebase.auth().onAuthStateChanged(function(user) {\n            if (user) {\n              if (!user.emailVerified) {\n                  setAlert('email', 'Please verify your email.')\n              }\n            }\n        });\n    }\n    //document.getElementById('quickstart-sign-in').disabled = true;\n  }\n\nfunction setAlert(type, alertText) {\n    var errorType = type + 'Error';\n    document.getElementById(errorType).innerHTML = alertText;\n}\nfunction LoginForm() {\n    //var pilots = []\n    //firebase.ref('/pilots').once('name').then(function(snapshot) {\n    //    console.log(snapshot.val())\n    //});\n    \n    return (\n        <form className=\"form\">\n            <h2 className=\"userForm\">Email</h2>\n            <input id=\"email\" type=\"text\"/>\n            <p id=\"emailError\"/>\n            <br/>\n            <h2 className=\"pswdForm\" >Password</h2>\n            <input id=\"password\" type=\"password\"/>\n            <p id=\"passwordError\"/>\n            <RenderFormButtons/>\n        </form> \n    )\n}\n\nfunction RenderFormButtons() {\n    return (\n        <div>\n                <button className=\"sign-up-btn\" type=\"button\" onClick={signUp}>\n                    Sign Up\n                </button>\n                <button className=\"sign-in-btn\" type=\"button\" onClick={toggleSignIn}>\n                    Next\n                </button>\n        </div>\n    );\n}\n\nclass Login extends React.Component{\n    constructor(props) {\n        super(props)\n    }\n    render() {\n        return (\n            <LoginForm/>\n        )\n    }\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}
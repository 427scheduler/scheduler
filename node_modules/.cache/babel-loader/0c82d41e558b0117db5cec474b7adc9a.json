{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Provides behavior that supports request bundling.\n */\n\nvar at = require(\"lodash.at\");\n/**\n * Compute the identifier of the `obj`. The objects of the same ID\n * will be bundled together.\n *\n * @param {RequestType} obj - The request object.\n * @param {String[]} discriminatorFields - The array of field names.\n *   A field name may include '.' as a separator, which is used to\n *   indicate object traversal.\n * @return {String|undefined} - the identifier string, or undefined if any\n *   discriminator fields do not exist.\n */\n\n\nfunction computeBundleId(obj, discriminatorFields) {\n  var ids = [];\n  var hasIds = false;\n\n  for (var i = 0; i < discriminatorFields.length; ++i) {\n    var id = at(obj, discriminatorFields[i])[0];\n\n    if (id === undefined) {\n      ids.push(null);\n    } else {\n      hasIds = true;\n      ids.push(id);\n    }\n  }\n\n  if (!hasIds) {\n    return undefined;\n  }\n\n  return JSON.stringify(ids);\n}\n\nexports.computeBundleId = computeBundleId;","map":null,"metadata":{},"sourceType":"script"}
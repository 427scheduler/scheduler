{"ast":null,"code":"var _jsxFileName = \"/Users/jenny/Desktop/SOAS/scheduler/src/Flights.js\";\nimport React from 'react';\nimport * as firebase from \"firebase/app\";\nimport \"./Flights.css\"; // Add Firebase services \n\nimport \"firebase/auth\";\nimport \"firebase/firestore\"; //import \"https://www.gstatic.com/firebasejs/6.0.2/firebase-app.js\";\n//import \"https://www.gstatic.com/firebasejs/6.0.2/firebase-firestore.js\";\n\nvar today = new Date();\nvar dd = String(today.getDate()).padStart(2, '0');\nvar mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n\nvar yyyy = today.getFullYear();\ntoday = mm + '/' + dd + '/' + yyyy;\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBUWu46P2u56hwTx4ClhB8upvQBOdE-wWA\",\n  authDomain: \"scheduler-188df.firebaseapp.com\",\n  databaseURL: \"https://scheduler-188df.firebaseio.com\",\n  projectId: \"scheduler-188df\",\n  storageBucket: \"scheduler-188df.appspot.com\",\n  messagingSenderId: \"1042925041868\",\n  appId: \"1:1042925041868:web:dc80c0076e941eeb\"\n}; // Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig);\nvar db = firebase.firestore(); // Add a new document in collection \"cities\"\n\ndb.collection(\"flights\").add({\n  name: \"Los Angeles\",\n  country: \"USA\"\n}).then(function (docRef) {\n  console.log(\"Document successfully written!\", docRef.id);\n}).catch(function (error) {\n  console.error(\"Error writing document: \", error);\n});\n\nfunction RenderInfoBox(props) {\n  return React.createElement(\"div\", {\n    className: \"info-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"info-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"EVENING TWILIGHT\")), React.createElement(\"div\", {\n    className: \"info-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"CIVIL 2051 NAUT 2049\")));\n}\n\nfunction RenderInfoBar(props) {\n  return React.createElement(\"div\", {\n    className: \"info-bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"time-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"CURRENT TIME\")), React.createElement(\"div\", {\n    className: \"time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, props.date.toLocaleTimeString())), React.createElement(RenderInfoBox, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }));\n}\n\nclass Flights extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date()\n    };\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date().getHours() + new Date().getMinutes\n    });\n  }\n\n  render() {\n    return React.createElement(RenderInfoBar, {\n      date: this.state.date,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Flights;","map":{"version":3,"sources":["/Users/jenny/Desktop/SOAS/scheduler/src/Flights.js"],"names":["React","firebase","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","db","firestore","collection","add","name","country","then","docRef","console","log","id","catch","error","RenderInfoBox","props","RenderInfoBar","date","toLocaleTimeString","Flights","Component","constructor","state","componentDidMount","timerID","setInterval","tick","componentWillUnmount","clearInterval","setState","getHours","getMinutes","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as firebase from \"firebase/app\";\nimport \"./Flights.css\";\n\n// Add Firebase services \nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n//import \"https://www.gstatic.com/firebasejs/6.0.2/firebase-app.js\";\n//import \"https://www.gstatic.com/firebasejs/6.0.2/firebase-firestore.js\";\n\nvar today = new Date();\nvar dd = String(today.getDate()).padStart(2, '0');\nvar mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\nvar yyyy = today.getFullYear();\n\ntoday = mm + '/' + dd + '/' + yyyy;\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyBUWu46P2u56hwTx4ClhB8upvQBOdE-wWA\",\n    authDomain: \"scheduler-188df.firebaseapp.com\",\n    databaseURL: \"https://scheduler-188df.firebaseio.com\",\n    projectId: \"scheduler-188df\",\n    storageBucket: \"scheduler-188df.appspot.com\",\n    messagingSenderId: \"1042925041868\",\n    appId: \"1:1042925041868:web:dc80c0076e941eeb\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nvar db = firebase.firestore();\n\n\n\n// Add a new document in collection \"cities\"\ndb.collection(\"flights\").add({\n    name: \"Los Angeles\",\n    country: \"USA\"\n})\n.then(function(docRef) {\n    console.log(\"Document successfully written!\", docRef.id);\n})\n.catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});\n\nfunction RenderInfoBox(props) {\n    return (\n        <div className=\"info-box\">\n            <div className=\"info-title\">\n                <h5>EVENING TWILIGHT</h5>\n            </div>\n            <div className=\"info-content\">\n                <h5>CIVIL 2051 NAUT 2049</h5>\n            </div>\n        </div>\n    )\n}\n\nfunction RenderInfoBar(props) {\n    return (\n        <div className=\"info-bar\">\n            <div className=\"time-title\">\n                <h5>CURRENT TIME</h5>\n            </div>\n            <div className=\"time\">\n                <h2>{props.date.toLocaleTimeString()}</h2>\n            </div>\n            <RenderInfoBox/>\n        </div>\n    )\n}\n\nclass Flights extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {date: new Date()};\n    }\n    componentDidMount() {\n        this.timerID = setInterval(() => this.tick(), 1000);\n    }\n\n    componentWillUnmount() {clearInterval(this.timerID);}\n\n    tick() {this.setState({date: new Date().getHours() + new Date().getMinutes});}\n\n    render() {\n        return (\n            <RenderInfoBar date={this.state.date}/>\n        )\n    }\n}\n\nexport default Flights;\n"]},"metadata":{},"sourceType":"module"}
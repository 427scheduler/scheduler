{"ast":null,"code":"import _slicedToArray from \"/Users/jenny/Desktop/SOAS/scheduler/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jenny/Desktop/SOAS/scheduler/src/Calendar.js\";\nimport React from 'react';\nimport moment from 'moment';\nimport './Dashboard.css';\n\nfunction DayHeader(props) {\n  return React.createElement(\"div\", {\n    className: \"dayHeader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    id: \"date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, props.day + \"  \"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, props.date));\n}\n\nfunction DayContents(props) {\n  var content = [];\n  props.events.forEach(event => {\n    var _event = _slicedToArray(event, 4),\n        type = _event[0],\n        start = _event[1],\n        end = _event[2],\n        details = _event[3];\n\n    content.push(React.createElement(\"div\", {\n      className: type + 'Event',\n      style: {\n        height: (end - start) * 60 + 'px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, (start < 10 ? '0' : '') + start * 100 + \" - \" + (end < 10 ? '0' : '') + end * 100), React.createElement(\"h5\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, type[0].toUpperCase() + type.slice(1)), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, details)));\n  });\n  return content;\n}\n\nfunction DayView(props) {\n  return React.createElement(\"div\", {\n    className: \"dayView\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(DayHeader, {\n    day: props.day,\n    date: props.date,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(DayContents, {\n    events: props.events,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }));\n}\n\nfunction WeekdaysHeader(props) {\n  var weekdayShort = moment.weekdaysShort();\n  var content = [];\n  weekdayShort.forEach(day => {\n    content.push(React.createElement(\"th\", {\n      key: day,\n      className: \"week-day\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, day));\n  });\n  return content;\n}\n\nfunction DaysOfMonth(props) {\n  var week = [];\n  var startOfWeek = props.curDate.startOf('week');\n\n  for (var i = 0; i < 7; i++) {\n    week.push(startOfWeek.date());\n    startOfWeek.add(1, 'day');\n  }\n\n  console.log(week);\n  let blanks = [];\n\n  for (let i = 0; i < props.firstDayOfMonth; i++) {\n    blanks.push(React.createElement(\"td\", {\n      className: \"calendar-day empty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"\"));\n  }\n\n  let daysInMonth = [];\n\n  for (let d = 1; d <= props.daysInMonth; d++) {\n    let currentDay = week.includes(d) ? \"curweek\" : \"\";\n    daysInMonth.push(React.createElement(\"td\", {\n      key: d,\n      className: \"calendar-day \".concat(currentDay),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, d));\n  }\n\n  var totalSlots = [...blanks, ...daysInMonth];\n  let rows = [];\n  let cells = [];\n  totalSlots.forEach((row, i) => {\n    if (i % 7 !== 0) {\n      cells.push(row); // if index not equal 7 that means not go to next week\n    } else {\n      rows.push(cells); // when reach next week we contain all td in last week to rows \n\n      cells = []; // empty container \n\n      cells.push(row); // in current loop we still push current row to new container\n    }\n\n    if (i === totalSlots.length - 1) {\n      // when end loop we add remain date\n      rows.push(cells);\n    }\n  });\n  let daysinmonth = rows.map((d, i) => {\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, d);\n  });\n  return React.createElement(\"table\", {\n    className: \"calendar-day\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, WeekdaysHeader())), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, daysinmonth));\n}\n\nclass WeekCalendar extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    var days = ['Mon', 'Tues', 'Wed', 'Thur', 'Fri'];\n    var content = [];\n\n    for (var i = 0; i < 5; i++) {\n      content.push(React.createElement(DayView, {\n        day: days[i],\n        date: this.props.dates[i],\n        events: this.props.events[i],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }));\n    }\n\n    return content;\n  }\n\n}\n\nclass MonthCalendar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.firstDayOfMonth = () => {\n      let dateObject = this.state.date;\n      let firstDay = moment(dateObject).startOf(\"month\").format(\"d\");\n      return firstDay;\n    };\n\n    this.month = () => {\n      return this.state.date.format(\"MMMM\");\n    };\n\n    this.onPrev = () => {};\n\n    this.onNext = () => {};\n\n    this.state = {\n      date: moment()\n    };\n  }\n\n  render() {\n    var firstDay = this.firstDayOfMonth();\n    var daysInMonth = this.state.date.daysInMonth();\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tail-datetime-calendar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onClick: e => {\n        this.onPrev();\n      },\n      class: \"calendar-button button-prev\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"calendar-navi\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, this.month()), React.createElement(\"span\", {\n      onClick: e => {\n        this.onNext();\n      },\n      className: \"calendar-button button-next\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    })), React.createElement(DaysOfMonth, {\n      curDate: this.state.date,\n      firstDayOfMonth: firstDay,\n      daysInMonth: daysInMonth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default WeekCalendar;\nexport { MonthCalendar };","map":{"version":3,"sources":["/Users/jenny/Desktop/SOAS/scheduler/src/Calendar.js"],"names":["React","moment","DayHeader","props","day","date","DayContents","content","events","forEach","event","type","start","end","details","push","height","toUpperCase","slice","DayView","WeekdaysHeader","weekdayShort","weekdaysShort","DaysOfMonth","week","startOfWeek","curDate","startOf","i","add","console","log","blanks","firstDayOfMonth","daysInMonth","d","currentDay","includes","totalSlots","rows","cells","row","length","daysinmonth","map","WeekCalendar","Component","constructor","render","days","dates","MonthCalendar","dateObject","state","firstDay","format","month","onPrev","onNext","e"],"mappings":"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","sourcesContent":["import React from 'react';\nimport moment from 'moment'\nimport './Dashboard.css';\n\nfunction DayHeader(props) {\n    return (\n        \n        <div className='dayHeader'>\n            <h3 id='date'>{props.day + \"  \"}</h3><h3>{props.date}</h3>\n        </div>\n    )\n}\n\nfunction DayContents(props) {\n    var content = [];\n    props.events.forEach(event => {\n        var [type, start, end, details] = event;\n        content.push(\n            <div className={type+'Event'} style={{height: ((end-start)*60)+'px'}}>\n                <p>{(start < 10 ? '0' : '')+start*100 + \" - \" + (end < 10 ? '0' : '')+ end*100}</p>\n                <h5 className='name'>{type[0].toUpperCase()+type.slice(1,)}</h5>\n                <h6>{details}</h6>\n            </div>\n        )\n    });\n    return content;\n}\n\nfunction DayView(props) {\n    return (\n        <div className='dayView'>\n            <DayHeader day={props.day} date={props.date}/>\n            <DayContents events={props.events}/>\n        </div>\n    )\n}\n\nfunction WeekdaysHeader(props) {\n    var weekdayShort = moment.weekdaysShort();\n    var content = []\n    weekdayShort.forEach(day => {\n        content.push(<th key={day} className=\"week-day\">\n        {day}\n       </th>);\n    })\n\n    return content;\n}\n\nfunction DaysOfMonth(props) {\n\n    var week = [];\n    var startOfWeek = props.curDate.startOf('week');\n    for (var i =0; i < 7; i++) {\n        week.push(startOfWeek.date());\n        startOfWeek.add(1, 'day');\n    }\n\n    console.log(week)\n    let blanks = [];\n    for (let i = 0; i < props.firstDayOfMonth; i++) {\n      blanks.push(\n        <td className=\"calendar-day empty\">{\"\"}</td>\n      );\n    }\n    let daysInMonth = [];\n    for (let d = 1; d <= props.daysInMonth; d++){ \n        let currentDay = week.includes(d) ? \"curweek\" : \"\";   \n            daysInMonth.push(  \n               <td key={d} className={`calendar-day ${currentDay}`}>   \n                 {d} \n               </td>);\n     }\n    var totalSlots = [...blanks, ...daysInMonth];\n    let rows = [];\n    let cells = [];\n\n    totalSlots.forEach((row, i) => {\n        if (i % 7 !== 0 ) {\n          cells.push(row); // if index not equal 7 that means not go to next week\n        } else {\n          rows.push(cells); // when reach next week we contain all td in last week to rows \n          cells = []; // empty container \n          cells.push(row); // in current loop we still push current row to new container\n        }\n        if (i === totalSlots.length - 1) { // when end loop we add remain date\n          rows.push(cells);\n        }\n      });\n\n      let daysinmonth = rows.map((d, i) => {\n        return <tr>{d}</tr>;\n      });\n\n      return (\n        <table className=\"calendar-day\">\n        <thead>\n          <tr>{WeekdaysHeader()}</tr>\n        </thead>\n        <tbody>{daysinmonth}</tbody>\n      </table>\n      )\n}\n\nclass WeekCalendar extends React.Component {\n\n    constructor(props) {\n        super(props);\n        \n    }\n\n    render () {\n        var days = ['Mon', 'Tues', 'Wed', 'Thur', 'Fri'];\n        var content = [];\n        for (var i=0; i < 5; i++) {\n            content.push(<DayView day={days[i]} date={this.props.dates[i]} events={this.props.events[i]}/>)\n        }\n        return content;\n    }\n}\n\nclass MonthCalendar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            date: moment()\n        }\n    }\n\n    firstDayOfMonth = () => {\n        let dateObject = this.state.date;\n        let firstDay = moment(dateObject)\n                     .startOf(\"month\")\n                     .format(\"d\"); \n       return firstDay;\n    };\n\n    month = () => {\n        return this.state.date.format(\"MMMM\");\n      };\n\n        onPrev = () => {};\nonNext = () => {};\n\n    render () {\n       \n        var firstDay = this.firstDayOfMonth();\n        var daysInMonth = this.state.date.daysInMonth();\n        return (\n        <div>\n            <div className=\"tail-datetime-calendar\">\n                <span  onClick={e => {\n           this.onPrev();\n        }}\n   class=\"calendar-button button-prev\"\n />\n                <div className=\"calendar-navi\">{this.month()}</div>\n                <span onClick={e => {\n         this.onNext();\n      }}\n       className=\"calendar-button button-next\"\n />\n            </div>\n            <DaysOfMonth curDate={this.state.date} firstDayOfMonth={firstDay} daysInMonth={daysInMonth}/>\n        </div>)\n    }\n}\n\nexport default WeekCalendar;\nexport {MonthCalendar};"]},"metadata":{},"sourceType":"module"}
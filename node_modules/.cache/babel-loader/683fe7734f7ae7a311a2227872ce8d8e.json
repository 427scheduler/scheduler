{"ast":null,"code":"var _jsxFileName = \"/Users/jenny/Desktop/SOAS/scheduler/src/Dashboard.js\";\nimport React from 'react';\nimport './index.css';\nimport './Dashboard.css';\nimport firebase from \"./Firebase.js\";\nimport ReactGA from 'react-ga';\nimport moment from 'moment';\nimport HELI_GRAY from './img/helicopter-gray.png';\nimport WeekCalendar, { MonthCalendar } from './Calendar.js';\nimport updateData from './insertDataTest.js';\nimport ErrorPage from './ErrorPage.js';\n\nDate.prototype.toDateInputValue = function () {\n  var local = new Date(this);\n  local.setMinutes(this.getMinutes() - this.getTimezoneOffset());\n  return local.toJSON().slice(0, 10);\n};\n\nDate.prototype.toDateInputValuePos = function () {\n  var local = new Date(this);\n  local.setMinutes(this.getMinutes() + this.getTimezoneOffset());\n  return local.toJSON().slice(0, 10);\n};\n\nfunction initializeReactGA() {\n  ReactGA.initialize('UA-108277898-5');\n  ReactGA.pageview('/Dashboard');\n}\n\nfunction AddFlightCard(props) {\n  return React.createElement(\"div\", {\n    className: \"addFlight\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"addFlightLogo\",\n    src: HELI_GRAY,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"addFlightText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \" No Upcoming Flights \"), React.createElement(\"button\", {\n    className: \"addFlightBtn\",\n    onClick: props.changeTab,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Add a Flight\")));\n}\n\nfunction FlightCard(props) {\n  var date = \"\";\n\n  if (props.data.date == props.today.toDateInputValue()) {\n    date = 'Today';\n  } else if (props.data.date == props.tomorrow.toDateInputValue()) {\n    date = \"Tomorrow\";\n  } else {\n    var tmp = new Date(props.data.date);\n    tmp.setDate(tmp.getDate() + 1);\n    date = tmp.toDateString().slice(0, 10).replace(' ', ', ');\n  }\n\n  var time = props.data.startTime + ' - ' + props.data.endTime;\n  return React.createElement(\"div\", {\n    className: \"flightCard\",\n    onClick: props.toggleOverlay.bind(this, props.data.flightid),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, date), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, time)), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"infoLine\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"CAPT\")), React.createElement(\"div\", {\n    className: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, props.data.captain[0].toUpperCase() + \". \" + props.data.captain[1].toUpperCase() + props.data.captain.slice(2)))), React.createElement(\"div\", {\n    className: \"infoLine\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"FO\")), React.createElement(\"div\", {\n    className: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, props.data.fo[0].toUpperCase() + \". \" + props.data.fo[1].toUpperCase() + props.data.fo.slice(2)))), React.createElement(\"div\", {\n    className: \"infoLine\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"A/C\")), React.createElement(\"div\", {\n    className: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, props.data.ac))), React.createElement(\"div\", {\n    className: \"infoLine\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"TYPE\")), React.createElement(\"div\", {\n    className: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, props.data.details))), React.createElement(\"div\", {\n    className: \"infoLine\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"CONFIG\")), React.createElement(\"div\", {\n    className: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, props.data.config))));\n}\n\nfunction WeekView(props) {\n  return React.createElement(WeekCalendar, {\n    events: props.events,\n    dates: props.curWeek,\n    curWeekData: props.curWeekData,\n    toggleOverlay: (type, id) => {\n      props.toggleOverlay(type, id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  });\n}\n\nfunction MonthView(props) {\n  return React.createElement(MonthCalendar, {\n    curWeek: props.curWeek,\n    changeCurWeek: day => {\n      props.changeCurWeek(day);\n    },\n    id: props.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  });\n}\n\nclass Dashboard extends React.Component {\n  //TODO: Should not be hardcoded userid\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      curDate: new Date(),\n      curWeek: [],\n      curWeekData: [],\n      hasError: false,\n      showWeekends: false,\n      userid: \"aearhart\"\n    };\n  }\n\n  initWeek() {\n    var week = [];\n    var cur = new Date();\n    var startOfWeek = this.state.showWeekends ? moment(cur).startOf('week') : moment(cur).startOf('isoweek');\n    var dayCount = this.state.showWeekends ? 7 : 5;\n\n    for (var i = 0; i < dayCount; i++) {\n      week.push([startOfWeek.month(), startOfWeek.date()]);\n      startOfWeek.add(1, 'day');\n    }\n\n    return week;\n  }\n\n  changeCurWeek(day) {\n    var week = [];\n    var startOfWeek = day.startOf('isoweek');\n\n    for (var i = 0; i < 5; i++) {\n      week.push([startOfWeek.month(), startOfWeek.date()]);\n      startOfWeek.add(1, 'day');\n    }\n\n    this.setState({\n      curWeek: week\n    });\n    this.getData(week);\n  }\n\n  getData(week) {\n    var id = this.props.id[0].toLowerCase() + this.props.id.split(' ')[1].toLowerCase();\n    this.setState({\n      curWeekData: []\n    });\n    week.forEach(day => {\n      var d = this.state.curDate.getFullYear() + '-' + (day[0] < 9 ? '0' : '') + (day[0] + 1) + '-' + (day[1] < 10 ? '0' : '') + day[1];\n      firebase.firestore().collection('dates').doc(d).get().then(querySnapshot => {\n        var tmp = this.state.curWeekData;\n        tmp.push(querySnapshot.data().events[id]);\n        this.setState({\n          curWeekData: tmp\n        });\n      }).catch(function (error) {\n        console.log(\"Error getting documents: \", error);\n      });\n    });\n  }\n\n  renderUpcomingEvents() {\n    return React.createElement(\"div\", {\n      className: \"upcomingEvents\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"weekView\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(WeekView, {\n      curWeek: this.state.curWeek,\n      curWeekData: this.state.curWeekData,\n      toggleOverlay: (type, id) => {\n        this.props.toggleOverlay(type, id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"monthView\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(MonthView, {\n      curWeek: this.state.curWeek,\n      changeCurWeek: day => {\n        this.changeCurWeek(day);\n      },\n      id: this.props.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    })));\n  }\n\n  renderUpcomingFlights() {\n    var cards = [];\n    var today = new Date(this.state.curDate);\n    var tomorrow = new Date(this.state.curDate);\n    tomorrow.setDate(today.getDate() + 1);\n\n    if (this.state.data.length > 0) {\n      for (var i = 0; i < this.state.data.length; i++) {\n        cards.push(React.createElement(FlightCard, {\n          key: this.state.data[i].data().flightid,\n          data: this.state.data[i].data(),\n          today: today,\n          tomorrow: tomorrow,\n          toggleOverlay: id => {\n            this.props.toggleOverlay('flight', id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }));\n      }\n    } else {\n      cards.push(React.createElement(AddFlightCard, {\n        key: 'emptyFlightCard',\n        changeTab: this.props.changeTab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }));\n    }\n\n    return cards;\n  }\n\n  componentDidMount() {\n    //updateData();\n    //this.setState({userid: (this.props.activeUser[0] + this.props.activeUser.split(' ')[1]).toLowerCase()});\n    this.initWeek();\n    var id = (this.props.activeUser[0] + this.props.activeUser.split(' ')[1]).toLowerCase();\n    firebase.firestore().collection(\"pilots\").doc(id).collection('upcoming-events').where('date', '>=', this.state.curDate.toDateInputValue()).get().then(querySnapshot => {\n      if (!querySnapshot.empty) {\n        this.setState({\n          data: querySnapshot.docs\n        });\n      } else {\n        console.log(\"No entries in document\");\n      }\n\n      ;\n    }).catch(function (error) {\n      console.log(\"Error getting documents: \", error);\n    });\n    this.getData(this.state.curWeek);\n    initializeReactGA();\n  }\n\n  componentDidCatch(error, info) {\n    // Display fallback UI\n    this.setState({\n      hasError: true\n    });\n    console.log(error, info);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return React.createElement(ErrorPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"My Upcoming Flights\"), React.createElement(\"div\", {\n      className: \"upcomingFlights\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, this.renderUpcomingFlights()), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"My Schedule\"), this.renderUpcomingEvents());\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/jenny/Desktop/SOAS/scheduler/src/Dashboard.js"],"names":["React","firebase","ReactGA","moment","HELI_GRAY","WeekCalendar","MonthCalendar","updateData","ErrorPage","Date","prototype","toDateInputValue","local","setMinutes","getMinutes","getTimezoneOffset","toJSON","slice","toDateInputValuePos","initializeReactGA","initialize","pageview","AddFlightCard","props","changeTab","FlightCard","date","data","today","tomorrow","tmp","setDate","getDate","toDateString","replace","time","startTime","endTime","toggleOverlay","bind","flightid","captain","toUpperCase","fo","ac","details","config","WeekView","events","curWeek","curWeekData","type","id","MonthView","day","changeCurWeek","Dashboard","Component","constructor","state","curDate","hasError","showWeekends","userid","initWeek","week","cur","startOfWeek","startOf","dayCount","i","push","month","add","setState","getData","toLowerCase","split","forEach","d","getFullYear","firestore","collection","doc","get","then","querySnapshot","catch","error","console","log","renderUpcomingEvents","renderUpcomingFlights","cards","length","componentDidMount","activeUser","where","empty","docs","componentDidCatch","info","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './index.css';\nimport './Dashboard.css';\nimport firebase from \"./Firebase.js\";\nimport ReactGA from 'react-ga';\nimport moment from 'moment';\nimport HELI_GRAY from './img/helicopter-gray.png';\nimport WeekCalendar, { MonthCalendar } from './Calendar.js';\nimport updateData from './insertDataTest.js';\nimport ErrorPage from './ErrorPage.js';\n\nDate.prototype.toDateInputValue = (function() {\n    var local = new Date(this);\n    local.setMinutes(this.getMinutes() - this.getTimezoneOffset());\n    return local.toJSON().slice(0,10);\n});\nDate.prototype.toDateInputValuePos = (function() {\n    var local = new Date(this);\n    local.setMinutes(this.getMinutes() + this.getTimezoneOffset());\n    return local.toJSON().slice(0,10);\n});\n\nfunction initializeReactGA() {\n    ReactGA.initialize('UA-108277898-5');\n    ReactGA.pageview('/Dashboard');\n}\n\nfunction AddFlightCard(props) {\n    return (\n        <div className=\"addFlight\">\n            <img className=\"addFlightLogo\" src={HELI_GRAY}/>\n            <div className=\"addFlightText\"> \n                <h4> No Upcoming Flights </h4>\n                <button className=\"addFlightBtn\" onClick={props.changeTab}>Add a Flight</button>\n            </div>\n        </div>\n    );\n}\n\nfunction FlightCard(props) {\n    var date = \"\";\n    if (props.data.date == props.today.toDateInputValue()){ date = 'Today';} \n    else if (props.data.date == props.tomorrow.toDateInputValue()) { date = \"Tomorrow\";} \n    else {var tmp = new Date(props.data.date);\n        tmp.setDate(tmp.getDate() + 1);\n        date = tmp.toDateString().slice(0,10).replace(' ', ', ');}\n\n    var time = props.data.startTime + ' - ' + props.data.endTime;\n    return (\n        <div className=\"flightCard\" onClick={props.toggleOverlay.bind(this, props.data.flightid)}>\n            <div className=\"date\">\n                <h2>{date}</h2>\n                <p>{time}</p>\n            </div>\n            <hr/>\n            <div className=\"infoLine\">\n                <div className=\"title\">\n                    <h5>CAPT</h5>\n                </div>\n                <div className=\"text\">\n                    <h5>{props.data.captain[0].toUpperCase() + \". \" + props.data.captain[1].toUpperCase() + props.data.captain.slice(2)}</h5>\n                </div>\n            </div>\n            <div className=\"infoLine\">\n                <div className=\"title\">\n                    <h5>FO</h5>\n                </div>\n                <div className=\"text\">\n                    <h5>{props.data.fo[0].toUpperCase() + \". \" + props.data.fo[1].toUpperCase() + props.data.fo.slice(2)}</h5>\n                </div>\n            </div>\n            <div className=\"infoLine\">\n                <div className=\"title\"><h5>A/C</h5></div>\n                <div className=\"text\"><h5>{props.data.ac}</h5></div>\n            </div>\n            <div className=\"infoLine\">\n                <div className=\"title\"><h5>TYPE</h5></div>\n                <div className=\"text\"><h5>{props.data.details}</h5></div>\n            </div>\n            <div className=\"infoLine\">\n                <div className=\"title\"><h5>CONFIG</h5></div>\n                <div className=\"text\"><h5>{props.data.config}</h5></div>\n            </div>\n        </div>\n    );\n}\n\nfunction WeekView (props) {\n    return (\n        <WeekCalendar events={props.events} dates={props.curWeek} curWeekData={props.curWeekData} toggleOverlay={(type,id)=>{props.toggleOverlay(type,id)}}/>\n    )\n}\n\nfunction MonthView (props) {\n    return (\n        <MonthCalendar curWeek={props.curWeek} changeCurWeek={(day)=>{props.changeCurWeek(day)}} id={props.id}/>\n    )\n}\n\nclass Dashboard extends React.Component {\n\n    //TODO: Should not be hardcoded userid\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {},\n            curDate: new Date(),\n            curWeek: [],\n            curWeekData: [], \n            hasError: false,\n            showWeekends: false,\n            userid: \"aearhart\",\n        }\n    }\n\n    initWeek() {\n        var week = [];\n        var cur = new Date();\n        var startOfWeek = this.state.showWeekends ? moment(cur).startOf('week') : moment(cur).startOf('isoweek');\n        var dayCount = this.state.showWeekends ? 7 : 5\n        for (var i =0; i < dayCount; i++) {\n            week.push([startOfWeek.month(), startOfWeek.date()]);\n            startOfWeek.add(1, 'day');\n        }\n        return week; \n    }\n\n    changeCurWeek(day) {\n        var week = [];\n\n        var startOfWeek = day.startOf('isoweek');\n        for (var i =0; i < 5; i++) {\n            week.push([startOfWeek.month(), startOfWeek.date()]);\n            startOfWeek.add(1, 'day');\n        }\n        \n        this.setState({curWeek: week});\n        this.getData(week);\n    }\n\n    getData(week) {\n        var id = this.props.id[0].toLowerCase() + this.props.id.split(' ')[1].toLowerCase();\n        this.setState({curWeekData: []});\n        week.forEach(day => {\n            var d = this.state.curDate.getFullYear() + '-' + (day[0] < 9 ? '0' : '') + (day[0]+1) + '-' + (day[1] < 10 ? '0' : '') + day[1] ;\n            firebase.firestore().collection('dates').doc(d).get()\n                .then((querySnapshot) => {\n                    var tmp = this.state.curWeekData;\n                    tmp.push(querySnapshot.data().events[id]);\n                    this.setState({curWeekData: tmp});\n                })\n                .catch(function(error) {\n                    console.log(\"Error getting documents: \", error);\n            });\n        })\n    }\n\n\n    renderUpcomingEvents() {\n        return (\n            <div className=\"upcomingEvents\">\n                <div className=\"weekView\">\n                    <WeekView curWeek={this.state.curWeek} curWeekData={this.state.curWeekData} toggleOverlay={(type,id)=>{this.props.toggleOverlay(type,id)}}/>\n                </div>\n                <div className=\"monthView\">\n                    <MonthView curWeek={this.state.curWeek} changeCurWeek={(day)=>{this.changeCurWeek(day)}} id={this.props.id} />\n                </div>\n            </div>\n        )\n    }\n\n    renderUpcomingFlights() {\n        var cards = [];\n        var today = new Date(this.state.curDate);\n        var tomorrow = new Date(this.state.curDate);\n        tomorrow.setDate(today.getDate() + 1);\n        if (this.state.data.length > 0) {\n            for (var i= 0; i < this.state.data.length; i++) {\n                cards.push(<FlightCard key={this.state.data[i].data().flightid} data={this.state.data[i].data()} today={today} tomorrow={tomorrow} toggleOverlay={(id)=>{this.props.toggleOverlay('flight', id);}}/>)\n            }\n        }\n        else {\n            cards.push(<AddFlightCard key={'emptyFlightCard'} changeTab={this.props.changeTab}/>);\n        }\n        \n        return cards\n    }\n\n    componentDidMount() {\n        //updateData();\n\n        //this.setState({userid: (this.props.activeUser[0] + this.props.activeUser.split(' ')[1]).toLowerCase()});\n        this.initWeek();\n        var id = (this.props.activeUser[0] + this.props.activeUser.split(' ')[1]).toLowerCase();\n        firebase.firestore().collection(\"pilots\").doc(id).collection('upcoming-events').where('date', '>=', this.state.curDate.toDateInputValue())\n        .get()\n        .then((querySnapshot) => {\n            if (!querySnapshot.empty) {\n                this.setState({data: querySnapshot.docs})\n            }\n            else {\n                console.log(\"No entries in document\");\n            };\n        })\n        .catch(function(error) {\n            console.log(\"Error getting documents: \", error);\n        });\n\n        this.getData(this.state.curWeek);\n\n        initializeReactGA();\n    }\n\n    componentDidCatch(error, info) {\n        // Display fallback UI\n        this.setState({ hasError: true });\n        console.log(error, info);\n    }\n\n    render() { \n        if (this.state.hasError) {\n            return <ErrorPage/>\n          }\n        return (\n            <div>\n                <h2>My Upcoming Flights</h2>\n                <div className=\"upcomingFlights\">\n                    {this.renderUpcomingFlights()}\n                </div>\n                <h2>My Schedule</h2>\n                {this.renderUpcomingEvents()}\n            </div>\n            \n        )\n    };\n}\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}
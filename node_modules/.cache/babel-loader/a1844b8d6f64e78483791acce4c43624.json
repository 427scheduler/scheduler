{"ast":null,"code":"var _jsxFileName = \"/Users/jenny/Desktop/SOAS/scheduler/src/FlightForm.js\";\nimport React from \"react\";\nimport \"./Form.css\";\nimport $ from 'jquery';\n\nDate.prototype.toDateInputValue = function () {\n  var local = new Date(this);\n  local.setMinutes(this.getMinutes() - this.getTimezoneOffset());\n  return local.toJSON().slice(0, 10);\n};\n\nconst fields = [[{\n  name: \"date\",\n  size: 'medium',\n  required: true\n}, {\n  name: \"esd\",\n  displayName: \"est. departure\",\n  size: 'medium',\n  required: true\n}, {\n  name: \"esr\",\n  displayName: \"est. return\",\n  size: 'medium',\n  required: true\n}, \"flighttime\"], [{\n  name: \"captain\",\n  size: 'medium',\n  required: true\n}, {\n  name: \"fo\",\n  displayName: \"first officer\",\n  size: 'medium',\n  required: true\n}, {\n  name: \"fe\",\n  displayName: \"flight engineer\",\n  size: 'medium',\n  required: false\n}, {\n  name: \"othercrew\",\n  displayName: \"other crew\",\n  size: 'medium',\n  required: false\n}], [{\n  name: \"a/c\",\n  size: 'small',\n  required: true\n}, {\n  name: \"backup\",\n  size: 'small',\n  required: false\n}, {\n  name: \"mission\",\n  size: 'medium',\n  required: true\n}, {\n  name: \"details\",\n  size: 'medium',\n  required: true\n}, {\n  name: \"config\",\n  size: 'medium',\n  required: true\n}], [{\n  name: \"remarks\",\n  size: 'large',\n  required: false\n}], [\"sqnpriority\", {\n  name: \"meals\",\n  size: 'medium',\n  required: false\n}, {\n  name: \"dco/dpco/dnco\",\n  size: 'medium',\n  required: true\n}]];\n\nclass FlightForm extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    $(document).ready(function () {\n      /*==================================================================\n      [ Focus Contact2 ]*/\n      $('.input').each(function () {\n        $(this).on('blur', function () {\n          if ($(this).val().trim() != \"\") {\n            $(this).addClass('has-val');\n          } else {\n            $(this).removeClass('has-val');\n          }\n        });\n      });\n      /*==================================================================\n      [ Get Data ]*/\n\n      $('.input').on('submit', function () {\n        console.log($(this).val());\n      });\n      /*==================================================================\n      [ Validate ]*/\n\n      var name = $('.validate-input input[name=\"name\"]');\n      $('.validate-form').on('submit', function () {\n        var check = true;\n\n        if ($(name).val().trim() == '') {\n          showValidate(name);\n          check = false;\n        }\n\n        return check;\n      });\n      $('.validate-form .input').each(function () {\n        $(this).focus(function () {\n          hideValidate(this);\n        });\n      });\n\n      function showValidate(input) {\n        var thisAlert = $(input).parent();\n        $(thisAlert).addClass('alert-validate');\n      }\n\n      function hideValidate(input) {\n        var thisAlert = $(input).parent();\n        $(thisAlert).removeClass('alert-validate');\n      }\n    });\n  }\n\n  RenderButton() {\n    return React.createElement(\"div\", {\n      className: \"container-form-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"wrap-form-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-bgbtn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"form-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Add Flight\")));\n  }\n\n  renderField(field) {\n    const name = field.name;\n    const displayName = field.hasOwnProperty(\"displayName\") ? field.displayName.toUpperCase() : field.name.toUpperCase();\n    const className = field.size + \"-wrapper validate-input\";\n    return React.createElement(\"div\", {\n      className: className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"input\",\n      type: \"text\",\n      name: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"focus-input\",\n      \"data-placeholder\": displayName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }));\n  }\n\n  renderCustomField(field) {\n    switch (field) {\n      case \"flighttime\":\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, \"Hello\");\n\n      case \"sqnpriority\":\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, \"Hello\");\n\n      default:\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, \"Hello\");\n    }\n  }\n\n  renderRow(row) {\n    var fields = [];\n    row.forEach(field => {\n      if (typeof field === \"string\") {\n        fields.push(this.renderCustomField(field));\n      } else {\n        fields.push(this.renderField(field));\n      }\n    });\n    return React.createElement(\"div\", {\n      className: \"row-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, fields);\n  }\n\n  RenderForm() {\n    var rows = [];\n    this.fields.forEach(row => {\n      rows.push(this.renderRow(row));\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"form validate-form\",\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, rows, React.createElement(RenderButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    })));\n  }\n\n  render() {\n    return (\n      /*\n      <div>\n          <form className=\"form validate-form\" autoComplete=\"off\">\n              <div className=\"row-wrapper\"> \n                  <div className=\"medium-wrapper validate-input\" data-validate=\"Date is required\">\n                      <input className=\"input has-val\" type=\"date\" name=\"name\" value={new Date().toDateInputValue()}/>\n                      <span className=\"focus-input\" data-placeholder=\"DATE\"></span>\n                  </div>\n                  <div className=\"medium-wrapper validate-input\" data-validate=\"ESP is required\">\n                      <input className=\"input\" type=\"text\" name=\"esp\"/>\n                      <span className=\"focus-input\" data-placeholder=\"EST. DEPARTURE\"></span>\n                  </div>\n                  <div className=\"medium-wrapper validate-input\" data-validate=\"ESR is required\">\n                      <input className=\"input\" type=\"text\" name=\"esr\"/>\n                      <span className=\"focus-input\" data-placeholder=\"EST. RETURN\"></span>\n                  </div>\n              </div>\n              <div className=\"row-wrapper\"> \n                  <div className=\"medium-wrapper validate-input\" data-validate=\"Captain is required\">\n                      <input className=\"input\" type=\"text\" name=\"captain\"/>\n                      <span className=\"focus-input\" data-placeholder=\"CAPTAIN\"></span>\n                  </div>\n                  <div className=\"medium-wrapper validate-input\" data-validate=\"ESP is required\">\n                      <input className=\"input\" type=\"text\" name=\"esp\"/>\n                      <span className=\"focus-input\" data-placeholder=\"FIRST OFFICER\"></span>\n                  </div>\n                  <div className=\"medium-wrapper\">\n                      <input className=\"input\" type=\"text\" name=\"esr\"/>\n                      <span className=\"focus-input\" data-placeholder=\"FLIGHT ENGINEER\"></span>\n                  </div>\n                  <div className=\"medium-wrapper\">\n                      <input className=\"input\" type=\"text\" name=\"esr\"/>\n                      <span className=\"focus-input\" data-placeholder=\"OTHER CREW\"></span>\n                  </div>\n              </div>\n              <div className=\"row-wrapper\">\n                  \n                  <div className=\"small-wrapper\" data-validate=\"A/C is required\">\n                      <input className=\"input\" type=\"text\" name=\"A/C\"/>\n                      <span className=\"focus-input\" data-placeholder=\"A/C\"></span>\n                  </div>\n                  <div className=\"small-wrapper\">\n                      <input className=\"input\" type=\"text\" name=\"BACKUP\"/>\n                      <span className=\"focus-input\" data-placeholder=\"BACKUP\"></span>\n                  </div>\n                  <div className=\"medium-wrapper\" data-validate=\"Mission is required\">\n                      <input className=\"input\" type=\"text\" name=\"MISSION\"/>\n                      <span className=\"focus-input\" data-placeholder=\"MISSION\"></span>\n                  </div>\n                  <div className=\"medium-wrapper\" data-validate=\"Details is required\">\n                      <input className=\"input\" type=\"text\" name=\"DETAILS\"/>\n                      <span className=\"focus-input\" data-placeholder=\"DETAILS\"></span>\n                  </div>\n                  <div className=\"medium-wrapper\" data-validate=\"Config is required\">\n                      <input className=\"input\" type=\"text\" name=\"CONFIG\"/>\n                      <span className=\"focus-input\" data-placeholder=\"CONFIG\"></span>\n                  </div>\n              </div>\n              <div className=\"wrap-input validate-input\" data-validate=\"Name is required\">\n                  <input className=\"input\" type=\"text\" name=\"remarks\"/>\n                  <span className=\"focus-input\" data-placeholder=\"REMARKS\"></span>\n              </div>\n               \n              <div className=\"half-col-wrapper\">\n                  <div className=\"medium-wrapper\" data-validate=\"Name is required\">\n                      <input className=\"input\" type=\"text\" name=\"name\"/>\n                      <span className=\"focus-input\" data-placeholder=\"MEALS\"></span>\n                  </div>\n                  <div className=\"medium-wrapper\" data-validate=\"Name is required\">\n                      <input className=\"input\" type=\"text\" name=\"name\"/>\n                      <span className=\"focus-input\" data-placeholder=\"DCO/DPCO/DNCO\"></span>\n                  </div>\n              </div>\n               <div className=\"container-form-btn\">\n                  <div className=\"wrap-form-btn\">\n                      <div className=\"form-bgbtn\"></div>\n                      <button className=\"form-btn\">\n                          Add Flight\n                      </button>\n                  </div>\n              </div>\n              \n               \n          </form>\n       </div>*/\n      React.createElement(RenderForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      })\n    );\n  }\n\n}\n\nexport default FlightForm;","map":{"version":3,"sources":["/Users/jenny/Desktop/SOAS/scheduler/src/FlightForm.js"],"names":["React","$","Date","prototype","toDateInputValue","local","setMinutes","getMinutes","getTimezoneOffset","toJSON","slice","fields","name","size","required","displayName","FlightForm","Component","constructor","props","componentDidMount","document","ready","each","on","val","trim","addClass","removeClass","console","log","check","showValidate","focus","hideValidate","input","thisAlert","parent","RenderButton","renderField","field","hasOwnProperty","toUpperCase","className","renderCustomField","renderRow","row","forEach","push","RenderForm","rows","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./Form.css\";\nimport $ from 'jquery';\n\n\nDate.prototype.toDateInputValue = (function() {\n    var local = new Date(this);\n    local.setMinutes(this.getMinutes() - this.getTimezoneOffset());\n    return local.toJSON().slice(0,10);\n});\n\nconst fields = [[{name: \"date\", size: 'medium', required: true}, \n{name: \"esd\", displayName: \"est. departure\", size: 'medium', required: true}, \n{name: \"esr\", displayName: \"est. return\", size: 'medium', required: true}, \n\"flighttime\"],\n\n[{name: \"captain\", size: 'medium', required: true}, \n{name: \"fo\", displayName: \"first officer\", size: 'medium', required: true}, \n{name: \"fe\", displayName: \"flight engineer\", size: 'medium', required: false}, \n{name: \"othercrew\", displayName: \"other crew\", size: 'medium', required: false}], \n\n[{name: \"a/c\", size: 'small', required: true}, \n{name: \"backup\", size: 'small', required: false}, \n{name: \"mission\", size: 'medium', required: true}, \n{name: \"details\", size: 'medium', required: true}, \n{name: \"config\", size: 'medium', required: true}], \n[{name: \"remarks\", size: 'large', required: false}], \n[\"sqnpriority\", \n{name: \"meals\", size: 'medium', required: false},\n{name: \"dco/dpco/dnco\", size: 'medium', required: true}] ];\n\nclass FlightForm extends React.Component {\n    constructor(props) { \n        super(props);\n    }\n\n    \n\n    componentDidMount() {\n\n        $(document).ready(function () {\n            /*==================================================================\n            [ Focus Contact2 ]*/\n            $('.input').each(function(){\n                $(this).on('blur', function(){\n                    if($(this).val().trim() != \"\") {\n                        $(this).addClass('has-val');\n                    }\n                    else {\n                        $(this).removeClass('has-val');\n                    }\n                })\n            })\n\n            /*==================================================================\n            [ Get Data ]*/\n\n            $('.input').on('submit',function(){\n                console.log($(this).val());\n            });\n\n\n            /*==================================================================\n            [ Validate ]*/\n            var name = $('.validate-input input[name=\"name\"]');\n\n\n            $('.validate-form').on('submit',function(){\n                var check = true;\n\n                if($(name).val().trim() == ''){\n                    showValidate(name);\n                    check=false;\n                }\n\n                return check;\n            });\n\n\n            $('.validate-form .input').each(function(){\n                $(this).focus(function(){\n                hideValidate(this);\n            });\n            });\n\n            function showValidate(input) {\n                var thisAlert = $(input).parent();\n\n                $(thisAlert).addClass('alert-validate');\n            }\n\n            function hideValidate(input) {\n                var thisAlert = $(input).parent();\n\n                $(thisAlert).removeClass('alert-validate');\n            }\n        });\n\n    }\n    RenderButton() {\n        return (\n            <div className=\"container-form-btn\">\n                <div className=\"wrap-form-btn\">\n                    <div className=\"form-bgbtn\"></div>\n                    <button className=\"form-btn\">\n                        Add Flight\n                    </button>\n                </div>\n            </div>\n        );\n    }\n    renderField(field) {\n        const name = field.name;\n        const displayName = field.hasOwnProperty(\"displayName\") ? field.displayName.toUpperCase() : field.name.toUpperCase();\n        const className = field.size + \"-wrapper validate-input\" \n        return (\n            <div className={className}>\n                <input className=\"input\" type=\"text\" name={name}/>\n                <span className=\"focus-input\" data-placeholder={displayName}></span>\n            </div>\n        )\n    }\n\n    renderCustomField(field) {\n        switch(field) {\n            case \"flighttime\": \n                return (<p>Hello</p>);\n            case \"sqnpriority\": \n                return (<p>Hello</p>);\n            default: \n                return (<p>Hello</p>);\n        }\n    }\n\n    renderRow(row) {\n        var fields = [];\n        row.forEach(field => {\n            if (typeof field === \"string\") {\n                fields.push(this.renderCustomField(field));\n            }\n            else {\n                fields.push(this.renderField(field));\n            }\n            \n        });\n        return (\n            <div className=\"row-wrapper\"> \n                {fields}\n            </div>\n        )\n    }\n\n    RenderForm() {\n        var rows = []\n        this.fields.forEach(row => {\n            rows.push(this.renderRow(row));\n        });\n        return (\n            <div>\n                <form className=\"form validate-form\" autoComplete=\"off\">\n                    {rows}\n                    <RenderButton/>\n                </form>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            /*\n            <div>\n                <form className=\"form validate-form\" autoComplete=\"off\">\n                    <div className=\"row-wrapper\"> \n                        <div className=\"medium-wrapper validate-input\" data-validate=\"Date is required\">\n                            <input className=\"input has-val\" type=\"date\" name=\"name\" value={new Date().toDateInputValue()}/>\n                            <span className=\"focus-input\" data-placeholder=\"DATE\"></span>\n                        </div>\n                        <div className=\"medium-wrapper validate-input\" data-validate=\"ESP is required\">\n                            <input className=\"input\" type=\"text\" name=\"esp\"/>\n                            <span className=\"focus-input\" data-placeholder=\"EST. DEPARTURE\"></span>\n                        </div>\n                        <div className=\"medium-wrapper validate-input\" data-validate=\"ESR is required\">\n                            <input className=\"input\" type=\"text\" name=\"esr\"/>\n                            <span className=\"focus-input\" data-placeholder=\"EST. RETURN\"></span>\n                        </div>\n                    </div>\n                    <div className=\"row-wrapper\"> \n                        <div className=\"medium-wrapper validate-input\" data-validate=\"Captain is required\">\n                            <input className=\"input\" type=\"text\" name=\"captain\"/>\n                            <span className=\"focus-input\" data-placeholder=\"CAPTAIN\"></span>\n                        </div>\n                        <div className=\"medium-wrapper validate-input\" data-validate=\"ESP is required\">\n                            <input className=\"input\" type=\"text\" name=\"esp\"/>\n                            <span className=\"focus-input\" data-placeholder=\"FIRST OFFICER\"></span>\n                        </div>\n                        <div className=\"medium-wrapper\">\n                            <input className=\"input\" type=\"text\" name=\"esr\"/>\n                            <span className=\"focus-input\" data-placeholder=\"FLIGHT ENGINEER\"></span>\n                        </div>\n                        <div className=\"medium-wrapper\">\n                            <input className=\"input\" type=\"text\" name=\"esr\"/>\n                            <span className=\"focus-input\" data-placeholder=\"OTHER CREW\"></span>\n                        </div>\n                    </div>\n                    <div className=\"row-wrapper\">\n                        \n                        <div className=\"small-wrapper\" data-validate=\"A/C is required\">\n                            <input className=\"input\" type=\"text\" name=\"A/C\"/>\n                            <span className=\"focus-input\" data-placeholder=\"A/C\"></span>\n                        </div>\n                        <div className=\"small-wrapper\">\n                            <input className=\"input\" type=\"text\" name=\"BACKUP\"/>\n                            <span className=\"focus-input\" data-placeholder=\"BACKUP\"></span>\n                        </div>\n                        <div className=\"medium-wrapper\" data-validate=\"Mission is required\">\n                            <input className=\"input\" type=\"text\" name=\"MISSION\"/>\n                            <span className=\"focus-input\" data-placeholder=\"MISSION\"></span>\n                        </div>\n                        <div className=\"medium-wrapper\" data-validate=\"Details is required\">\n                            <input className=\"input\" type=\"text\" name=\"DETAILS\"/>\n                            <span className=\"focus-input\" data-placeholder=\"DETAILS\"></span>\n                        </div>\n                        <div className=\"medium-wrapper\" data-validate=\"Config is required\">\n                            <input className=\"input\" type=\"text\" name=\"CONFIG\"/>\n                            <span className=\"focus-input\" data-placeholder=\"CONFIG\"></span>\n                        </div>\n                    </div>\n                    <div className=\"wrap-input validate-input\" data-validate=\"Name is required\">\n                        <input className=\"input\" type=\"text\" name=\"remarks\"/>\n                        <span className=\"focus-input\" data-placeholder=\"REMARKS\"></span>\n                    </div>\n\n                    \n                    <div className=\"half-col-wrapper\">\n                        <div className=\"medium-wrapper\" data-validate=\"Name is required\">\n                            <input className=\"input\" type=\"text\" name=\"name\"/>\n                            <span className=\"focus-input\" data-placeholder=\"MEALS\"></span>\n                        </div>\n                        <div className=\"medium-wrapper\" data-validate=\"Name is required\">\n                            <input className=\"input\" type=\"text\" name=\"name\"/>\n                            <span className=\"focus-input\" data-placeholder=\"DCO/DPCO/DNCO\"></span>\n                        </div>\n                    </div>\n\n                    <div className=\"container-form-btn\">\n                        <div className=\"wrap-form-btn\">\n                            <div className=\"form-bgbtn\"></div>\n                            <button className=\"form-btn\">\n                                Add Flight\n                            </button>\n                        </div>\n                    </div>\n                    \n\n                    \n                </form>\n\n            </div>*/\n            <RenderForm/>\n\n        );\n    }\n}\n\nexport default FlightForm;"]},"metadata":{},"sourceType":"module"}
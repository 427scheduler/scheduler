{"ast":null,"code":"import XLSX from 'xlsx';\n\nfunction Export() {\n  var data = ['lafsijoda', 'gsijaofafs', 'gsaijofa'];\n  /* convert from array of arrays to workbook */\n\n  var worksheet = XLSX.utils.aoa_to_sheet(data);\n  var new_workbook = XLSX.utils.book_new();\n  XLSX.utils.book_append_sheet(new_workbook, worksheet, \"ExportedFile\");\n  /* write file */\n\n  const wbout = XLSX.write(new_workbook, {\n    type: 'binary',\n    bookType: \"xlsx\"\n  });\n  const file = \"sheetjsw.xlsx\";\n  writeFile(file, output(wbout), 'ascii').then(res => {\n    Alert.alert(\"exportFile success\", \"Exported to \" + file);\n  }).catch(err => {\n    Alert.alert(\"exportFile Error\", \"Error \" + err.message);\n  });\n}\n\nexport default Export;","map":{"version":3,"sources":["/Users/jenny/Desktop/SOAS/scheduler/src/Export.js"],"names":["XLSX","Export","data","worksheet","utils","aoa_to_sheet","new_workbook","book_new","book_append_sheet","wbout","write","type","bookType","file","writeFile","output","then","res","Alert","alert","catch","err","message"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;;AAEA,SAASC,MAAT,GAAkB;AAEd,MAAIC,IAAI,GAAG,CAAC,WAAD,EAAc,YAAd,EAA4B,UAA5B,CAAX;AACA;;AACA,MAAIC,SAAS,GAAGH,IAAI,CAACI,KAAL,CAAWC,YAAX,CAAwBH,IAAxB,CAAhB;AACA,MAAII,YAAY,GAAGN,IAAI,CAACI,KAAL,CAAWG,QAAX,EAAnB;AACAP,EAAAA,IAAI,CAACI,KAAL,CAAWI,iBAAX,CAA6BF,YAA7B,EAA2CH,SAA3C,EAAsD,cAAtD;AAGA;;AACA,QAAMM,KAAK,GAAGT,IAAI,CAACU,KAAL,CAAWJ,YAAX,EAAyB;AAACK,IAAAA,IAAI,EAAC,QAAN;AAAgBC,IAAAA,QAAQ,EAAC;AAAzB,GAAzB,CAAd;AACA,QAAMC,IAAI,GAAG,eAAb;AACAC,EAAAA,SAAS,CAACD,IAAD,EAAOE,MAAM,CAACN,KAAD,CAAb,EAAsB,OAAtB,CAAT,CAAwCO,IAAxC,CAA8CC,GAAD,IAAQ;AAC7CC,IAAAA,KAAK,CAACC,KAAN,CAAY,oBAAZ,EAAkC,iBAAiBN,IAAnD;AACP,GAFD,EAEGO,KAFH,CAEUC,GAAD,IAAS;AAAEH,IAAAA,KAAK,CAACC,KAAN,CAAY,kBAAZ,EAAgC,WAAWE,GAAG,CAACC,OAA/C;AAA0D,GAF9E;AAGH;;AAED,eAAerB,MAAf","sourcesContent":["import XLSX from 'xlsx';\n\nfunction Export() {\n\n    var data = ['lafsijoda', 'gsijaofafs', 'gsaijofa'];\n    /* convert from array of arrays to workbook */\n    var worksheet = XLSX.utils.aoa_to_sheet(data);\n    var new_workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(new_workbook, worksheet, \"ExportedFile\");\n\n\n    /* write file */\n    const wbout = XLSX.write(new_workbook, {type:'binary', bookType:\"xlsx\"});\n    const file = \"sheetjsw.xlsx\";\n    writeFile(file, output(wbout), 'ascii').then((res) =>{\n            Alert.alert(\"exportFile success\", \"Exported to \" + file);\n    }).catch((err) => { Alert.alert(\"exportFile Error\", \"Error \" + err.message); });\n}\n\nexport default Export;\n\n"]},"metadata":{},"sourceType":"module"}
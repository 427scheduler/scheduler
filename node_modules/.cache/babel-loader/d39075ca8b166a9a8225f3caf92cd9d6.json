{"ast":null,"code":"import XLSX from 'xlsx';\nimport firebase from \"./Firebase.js\";\nconst sheetHeader = [\"DAILY FLYING ORDER\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\nconst emptyCells = [\"\", \"\", \"\", \"\", \"\", \"\", \"\"];\nconst emptyRow = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\nconst configCodesHeader = [\"CONFIG CODES\"].concat(emptyRow.slice(1));\nconst flightHeaders = [\"startTime\", \"endTime\", \"A/C\", \"BACKUP\", \"captain\", \"fo\", \"fe\", \"crew\", \"config\", \"details\", \"mission\", \"details\", \"config\", \"remarks\", \"pri\", \"meal\", \"DCO\"];\nconst configCodes = [[\"STANDARD CONFIG\", \"\", \"S\", \"DEP ADAM\", \"\", \"DA\", \"VIP\", \"\", \"V\", \"DUAL C6 SIDE FIRE\", \"\", \"DC6S\", \"INGRESS CONSOLE\", \"\", \"I\", \"\",, \"\"], [\"FRIES KIT\", \"\", \"FR\", \"FULL FUEL\", \"\", \"FF\", \"SDS\", \"\", \"SD\", \"DUAL C6 FRONT FIRE\", \"\", \"DC6F\", \"BARRIER NET\", \"\", \"BN\", \"\",, \"\"], [\"HOOK\", \"\", \"H\", \"NO CONFIG REQUEST\", \"\", \"NR\", \"HOIST\", \"\", \"HO\", \"DUAL GAU\", \"\", \"DGAU\", \"SEE COMMENT\", \"\", \"C\", \"\",, \"\"], [\"AUW BALLAST KIT\", \"\", \"B\", \"RAPPEL\", \"\", \"RP\", \"MX-15 BALL\", \"\", \"MX\", \"1 x GAU / 1 x C6\", \"\", \"G/C6\", \"CABIN INVERTER\", \"\", \"INV\", \"\",, \"\"]];\nconst signature = [\"SIGNATURE\"].concat(emptyRow.slice(1));\nconst notes = [\"NOTES\"].concat(emptyRow.slice(1));\nvar date = [];\nvar numFlights = 0;\n\nfunction s2ab(s) {\n  var buf = new ArrayBuffer(s.length);\n  var view = new Uint8Array(buf);\n\n  for (var i = 0; i < s.length; i++) view[i] = s.charCodeAt(i) & 0xFF;\n\n  return buf;\n}\n\nconst download = (url, name) => {\n  let a = document.createElement('a');\n  a.href = url;\n  a.download = name;\n  a.click();\n  window.URL.revokeObjectURL(url);\n};\n\nfunction Export(ids, d) {\n  var day = [];\n  numFlights = ids.length;\n  day.push([\"DATE: \" + d.date].concat(emptyCells).concat([\"SDO: \" + d.sdo]).concat(emptyCells).concat([\"\"]));\n  day.push([\"TWILIGHT CIV: \" + d.twilightciv].concat(emptyCells).concat([\"TWILIGHT NAUT: \" + d.twilightnaut]).concat(emptyCells).concat([\"\"]));\n  day.push([\"DAY FDO: \" + d.fdoday].concat(emptyCells).concat([\"NIGHT FDO: \" + d.fdonight]).concat(emptyCells).concat([\"\"]));\n  day.push([\"DESK SGT DAY: \" + d.desksgtday].concat(emptyCells).concat([\"DESK SGT NIGHT: \" + d.desksgtnight]).concat(emptyCells).concat([\"\"]));\n  day.push([\"MTP: \" + d.mtp].concat(emptyCells).concat([\"GROUND RUN: \" + d.groundrun]).concat(emptyCells).concat([\"\"])); //Gathering all data: \n  //Flights declared as dict to maintain order in array using keys. We then retrieve only the values\n\n  if (ids.length > 0) {\n    var flights = {};\n    ids.forEach(id => {\n      flights[id] = '';\n    });\n    firebase.firestore().collection(\"events\").where(firebase.firestore.FieldPath.documentId(), 'in', ids).get().then(querySnapshot => {\n      querySnapshot.docs.forEach(d => {\n        var id = d.id;\n        var d = d.data();\n        date = d.date;\n        flights[id] = [d.startTime, d.endTime, d.ac, d.backup, d.captain, d.fo, d.fe, d.crew, d.config, d.details, d.mission, d.details, d.config, d.remarks, d.pri, d.meal, d.dco];\n      });\n      getFile(Object.values(flights), day);\n    }).catch(function (error) {\n      console.log(\"Error getting data: \", error);\n    });\n  } else {\n    //No flights to display\n    getFile([], day);\n  }\n}\n\nfunction getFile(flightData, dayData) {\n  var exportData = [sheetHeader].concat(dayData).concat([flightHeaders]).concat(flightData).concat([emptyRow]).concat([configCodesHeader]).concat(configCodes).concat([emptyRow]).concat([notes]).concat([emptyRow]).concat([signature]);\n  console.log(exportData);\n  /* convert from array of arrays to worksheet */\n\n  var worksheet = XLSX.utils.aoa_to_sheet(exportData);\n  console.log(numFlights);\n  /* merge cells A1:B1 */\n\n  var merges = [XLSX.utils.decode_range(\"A1:Q1\"), XLSX.utils.decode_range(\"A2:H2\"), XLSX.utils.decode_range(\"I2:Q2\"), XLSX.utils.decode_range(\"A3:H3\"), XLSX.utils.decode_range(\"I3:Q3\"), XLSX.utils.decode_range(\"A4:H4\"), XLSX.utils.decode_range(\"I4:Q4\"), XLSX.utils.decode_range(\"A5:H5\"), XLSX.utils.decode_range(\"I5:Q5\"), XLSX.utils.decode_range(\"A6:H6\"), XLSX.utils.decode_range(\"I6:Q6\"), XLSX.utils.decode_range(\"A\" + (8 + numFlights).toString() + \":Q\" + (8 + numFlights).toString()), XLSX.utils.decode_range(\"A\" + (9 + numFlights).toString() + \":Q\" + (9 + numFlights).toString())];\n\n  for (var i = 0; i < 4; i++) {\n    merges.push(XLSX.utils.decode_range(\"A\" + (10 + i + numFlights).toString() + \":B\" + (10 + i + numFlights).toString()));\n    merges.push(XLSX.utils.decode_range(\"D\" + (10 + i + numFlights).toString() + \":E\" + (10 + i + numFlights).toString()));\n    merges.push(XLSX.utils.decode_range(\"G\" + (10 + i + numFlights).toString() + \":H\" + (10 + i + numFlights).toString()));\n    merges.push(XLSX.utils.decode_range(\"J\" + (10 + i + numFlights).toString() + \":K\" + (10 + i + numFlights).toString()));\n    merges.push(XLSX.utils.decode_range(\"M\" + (10 + i + numFlights).toString() + \":N\" + (10 + i + numFlights).toString()));\n  } //merges.push(XLSX.utils.decode_range(XLSX.utils.decode_range(\"A\"+(20+numFlights).toString()+\":Q\"+(20+numFlights).toString())));\n  //merges.push(XLSX.utils.decode_range(XLSX.utils.decode_range(\"A\"+(21+numFlights).toString()+\":Q\"+(21+numFlights).toString())));\n\n  /* add merges */\n\n\n  if (!worksheet['!merges']) worksheet['!merges'] = [];\n  worksheet['!merges'] = merges;\n  /** formatting */\n\n  var wsrows = [{\n    hpt: 30\n  }];\n  worksheet['!rows'] = wsrows; // ws - worksheet\n\n  /** generate workbook */\n\n  var new_workbook = XLSX.utils.book_new();\n  XLSX.utils.book_append_sheet(new_workbook, worksheet, date);\n  /* write file */\n\n  const wbout = XLSX.write(new_workbook, {\n    type: 'binary',\n    bookType: \"xlsx\"\n  });\n  let url = window.URL.createObjectURL(new Blob([s2ab(wbout)], {\n    type: 'application/octet-stream'\n  }));\n  download(url, 'DailyFlyingOrder.xlsx');\n}\n\nexport default Export;","map":{"version":3,"sources":["/Users/jenny/Desktop/SOAS/scheduler/src/Export.js"],"names":["XLSX","firebase","sheetHeader","emptyCells","emptyRow","configCodesHeader","concat","slice","flightHeaders","configCodes","signature","notes","date","numFlights","s2ab","s","buf","ArrayBuffer","length","view","Uint8Array","i","charCodeAt","download","url","name","a","document","createElement","href","click","window","URL","revokeObjectURL","Export","ids","d","day","push","sdo","twilightciv","twilightnaut","fdoday","fdonight","desksgtday","desksgtnight","mtp","groundrun","flights","forEach","id","firestore","collection","where","FieldPath","documentId","get","then","querySnapshot","docs","data","startTime","endTime","ac","backup","captain","fo","fe","crew","config","details","mission","remarks","pri","meal","dco","getFile","Object","values","catch","error","console","log","flightData","dayData","exportData","worksheet","utils","aoa_to_sheet","merges","decode_range","toString","wsrows","hpt","new_workbook","book_new","book_append_sheet","wbout","write","type","bookType","createObjectURL","Blob"],"mappings":"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","sourcesContent":["import XLSX from 'xlsx';\nimport firebase from \"./Firebase.js\";\n\nconst sheetHeader =[\"DAILY FLYING ORDER\", \"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"];\nconst emptyCells = [\"\",\"\",\"\",\"\",\"\",\"\",\"\"];\nconst emptyRow = [\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"];\nconst configCodesHeader = [\"CONFIG CODES\"].concat(emptyRow.slice(1));\nconst flightHeaders = [\"startTime\",\"endTime\",\"A/C\",\"BACKUP\",\"captain\",\"fo\",\"fe\",\"crew\",\"config\",\"details\",\"mission\",\"details\",\"config\",\"remarks\",\"pri\",\"meal\",\"DCO\"];\nconst configCodes=[[\"STANDARD CONFIG\",\"\",\"S\",\"DEP ADAM\",\"\",\"DA\",\"VIP\",\"\",\"V\",\"DUAL C6 SIDE FIRE\",\"\",\"DC6S\",\"INGRESS CONSOLE\",\"\",\"I\",\"\",,\"\",],\n[\"FRIES KIT\",\"\",\"FR\",\"FULL FUEL\",\"\",\"FF\",\"SDS\",\"\",\"SD\",\"DUAL C6 FRONT FIRE\",\"\",\"DC6F\",\"BARRIER NET\",\"\",\"BN\",\"\",,\"\",],\n[\"HOOK\",\"\",\"H\",\"NO CONFIG REQUEST\",\"\",\"NR\",\"HOIST\",\"\",\"HO\",\"DUAL GAU\",\"\",\"DGAU\",\"SEE COMMENT\",\"\",\"C\",\"\",,\"\",],\n[\"AUW BALLAST KIT\",\"\",\"B\",\"RAPPEL\",\"\",\"RP\",\"MX-15 BALL\",\"\",\"MX\",\"1 x GAU / 1 x C6\",\"\",\"G/C6\",\"CABIN INVERTER\",\"\",\"INV\",\"\",,\"\",]];\nconst signature = [\"SIGNATURE\"].concat(emptyRow.slice(1));\nconst notes = [\"NOTES\"].concat(emptyRow.slice(1));\nvar date = [];\nvar numFlights = 0;\n\nfunction s2ab(s) {\n    var buf = new ArrayBuffer(s.length);\n    var view = new Uint8Array(buf);\n    for (var i=0; i<s.length; i++) view[i] = s.charCodeAt(i) & 0xFF;\n    return buf;\n}\n\nconst download = (url, name) => {\n    let a = document.createElement('a')\n    a.href = url\n    a.download = name\n    a.click()\n\n    window.URL.revokeObjectURL(url)\n}\n\nfunction Export(ids, d) {\n    var day = [];\n    numFlights = ids.length;\n    day.push([\"DATE: \" + d.date].concat(emptyCells).concat([\"SDO: \"+d.sdo]).concat(emptyCells).concat([\"\"]));\n    day.push([\"TWILIGHT CIV: \" + d.twilightciv].concat(emptyCells).concat([\"TWILIGHT NAUT: \"+d.twilightnaut]).concat(emptyCells).concat([\"\"]));\n    day.push([\"DAY FDO: \" + d.fdoday].concat(emptyCells).concat([\"NIGHT FDO: \"+d.fdonight]).concat(emptyCells).concat([\"\"]));\n    day.push([\"DESK SGT DAY: \" + d.desksgtday].concat(emptyCells).concat([\"DESK SGT NIGHT: \"+d.desksgtnight]).concat(emptyCells).concat([\"\"]));\n    day.push([\"MTP: \" + d.mtp].concat(emptyCells).concat([\"GROUND RUN: \"+d.groundrun]).concat(emptyCells).concat([\"\"]));\n                        \n    //Gathering all data: \n    //Flights declared as dict to maintain order in array using keys. We then retrieve only the values\n\n    if (ids.length > 0) {\n        var flights = {};\n        ids.forEach((id) => {\n            flights[id] = '';\n        })\n        firebase.firestore().collection(\"events\").where(firebase.firestore.FieldPath.documentId(), 'in', ids)\n            .get()\n            .then((querySnapshot) => {\n                querySnapshot.docs.forEach((d) => {\n                    var id = d.id;\n                    var d = d.data();\n                    date = d.date;\n                    flights[id] = [\n                        d.startTime,\n                        d.endTime,\n                        d.ac,\n                        d.backup,\n                        d.captain,\n                        d.fo,\n                        d.fe,\n                        d.crew,\n                        d.config,\n                        d.details,\n                        d.mission,\n                        d.details,\n                        d.config,\n                        d.remarks,\n                        d.pri,\n                        d.meal,\n                        d.dco];\n                    })\n                    getFile(Object.values(flights), day);\n                })\n            \n            .catch(function(error) {\n                console.log(\"Error getting data: \", error);\n            });\n    }\n    else {\n        //No flights to display\n        getFile([], day);\n    }\n    \n}\n\nfunction getFile(flightData, dayData) {\n    var exportData = [sheetHeader].concat(dayData).concat([flightHeaders])\n                        .concat(flightData)\n                        .concat([emptyRow])\n                        .concat([configCodesHeader])\n                        .concat(configCodes)\n                        .concat([emptyRow])\n                        .concat([notes])\n                        .concat([emptyRow])\n                        .concat([signature]);\n    console.log(exportData);\n    /* convert from array of arrays to worksheet */\n    var worksheet = XLSX.utils.aoa_to_sheet(exportData);\n    console.log(numFlights);\n\n    /* merge cells A1:B1 */\n    var merges = [XLSX.utils.decode_range(\"A1:Q1\"), XLSX.utils.decode_range(\"A2:H2\"),XLSX.utils.decode_range(\"I2:Q2\"), XLSX.utils.decode_range(\"A3:H3\"),XLSX.utils.decode_range(\"I3:Q3\"), XLSX.utils.decode_range(\"A4:H4\"),XLSX.utils.decode_range(\"I4:Q4\"), XLSX.utils.decode_range(\"A5:H5\"),XLSX.utils.decode_range(\"I5:Q5\"), XLSX.utils.decode_range(\"A6:H6\"),XLSX.utils.decode_range(\"I6:Q6\"), \n    XLSX.utils.decode_range(\"A\"+(8+numFlights).toString()+\":Q\"+(8+numFlights).toString()),XLSX.utils.decode_range(\"A\"+(9+numFlights).toString()+\":Q\"+(9+numFlights).toString()) ];\n\n    for (var i= 0; i <4; i++) {\n        merges.push(XLSX.utils.decode_range(\"A\"+(10+i+numFlights).toString()+\":B\"+(10+i+numFlights).toString()));\n        merges.push(XLSX.utils.decode_range(\"D\"+(10+i+numFlights).toString()+\":E\"+(10+i+numFlights).toString()));\n        merges.push(XLSX.utils.decode_range(\"G\"+(10+i+numFlights).toString()+\":H\"+(10+i+numFlights).toString()));\n        merges.push(XLSX.utils.decode_range(\"J\"+(10+i+numFlights).toString()+\":K\"+(10+i+numFlights).toString()));\n        merges.push(XLSX.utils.decode_range(\"M\"+(10+i+numFlights).toString()+\":N\"+(10+i+numFlights).toString()));\n    }\n\n    //merges.push(XLSX.utils.decode_range(XLSX.utils.decode_range(\"A\"+(20+numFlights).toString()+\":Q\"+(20+numFlights).toString())));\n    //merges.push(XLSX.utils.decode_range(XLSX.utils.decode_range(\"A\"+(21+numFlights).toString()+\":Q\"+(21+numFlights).toString())));\n\n    /* add merges */\n    if(!worksheet['!merges']) worksheet['!merges'] = [];\n    worksheet['!merges'] = merges;\n\n    /** formatting */\n    var wsrows =  [\n        {hpt: 30}, // row 1 sets to the height of 30 in pixels\n      ];\n\n    worksheet['!rows'] = wsrows; // ws - worksheet\n\n    /** generate workbook */\n    var new_workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(new_workbook, worksheet, date);\n\n    /* write file */\n    const wbout = XLSX.write(new_workbook, {type:'binary', bookType:\"xlsx\"});\n\n    let url = window.URL.createObjectURL(new Blob([s2ab(wbout)], {type:'application/octet-stream'}))\n\n    download(url, 'DailyFlyingOrder.xlsx');\n}\n\nexport default Export;\n\n"]},"metadata":{},"sourceType":"module"}
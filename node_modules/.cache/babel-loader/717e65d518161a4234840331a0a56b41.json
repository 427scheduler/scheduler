{"ast":null,"code":"\"use strict\";\n/*\n * Copyright 2020 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\n * The groups correspond to URI parts as follows:\n * 1. scheme\n * 2. authority\n * 3. path\n */\n\nvar URI_REGEX = /^(?:([A-Za-z0-9+.-]+):)?(?:\\/\\/([^/]*)\\/)?(.+)$/;\n\nfunction parseUri(uriString) {\n  var parsedUri = URI_REGEX.exec(uriString);\n\n  if (parsedUri === null) {\n    return null;\n  }\n\n  return {\n    scheme: parsedUri[1],\n    authority: parsedUri[2],\n    path: parsedUri[3]\n  };\n}\n\nexports.parseUri = parseUri;\nvar NUMBER_REGEX = /^\\d+$/;\n\nfunction splitHostPort(path) {\n  if (path.startsWith('[')) {\n    var hostEnd = path.indexOf(']');\n\n    if (hostEnd === -1) {\n      return null;\n    }\n\n    var host = path.substring(1, hostEnd);\n    /* Only an IPv6 address should be in bracketed notation, and an IPv6\n     * address should have at least one colon */\n\n    if (host.indexOf(':') === -1) {\n      return null;\n    }\n\n    if (path.length > hostEnd + 1) {\n      if (path[hostEnd + 1] === ':') {\n        var portString = path.substring(hostEnd + 2);\n\n        if (NUMBER_REGEX.test(portString)) {\n          return {\n            host: host,\n            port: +portString\n          };\n        } else {\n          return null;\n        }\n      } else {\n        return null;\n      }\n    } else {\n      return {\n        host: host\n      };\n    }\n  } else {\n    var splitPath = path.split(':');\n    /* Exactly one colon means that this is host:port. Zero colons means that\n     * there is no port. And multiple colons means that this is a bare IPv6\n     * address with no port */\n\n    if (splitPath.length === 2) {\n      if (NUMBER_REGEX.test(splitPath[1])) {\n        return {\n          host: splitPath[0],\n          port: +splitPath[1]\n        };\n      } else {\n        return null;\n      }\n    } else {\n      return {\n        host: path\n      };\n    }\n  }\n}\n\nexports.splitHostPort = splitHostPort;\n\nfunction uriToString(uri) {\n  var result = '';\n\n  if (uri.scheme !== undefined) {\n    result += uri.scheme + ':';\n  }\n\n  if (uri.authority !== undefined) {\n    result += '//' + uri.authority + '/';\n  }\n\n  result += uri.path;\n  return result;\n}\n\nexports.uriToString = uriToString;","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"var _jsxFileName = \"/Users/jenny/Desktop/SOAS/scheduler/src/Flights.js\";\nimport React from 'react';\nimport \"./Flights.css\";\nimport RIGHT_BTN from './img/right-arrow.png';\nimport LEFT_BTN from './img/left-arrow.png';\nimport firebase from \"./Firebase.js\";\nvar today = new Date();\nvar dd = String(today.getDate()).padStart(2, '0');\nvar mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n\nvar yyyy = today.getFullYear();\ntoday = mm + '/' + dd + '/' + yyyy;\n/** var data = []\nfirebase.collection(\"flights\").get().then(querySnapshot => {\nquerySnapshot.docs.map(doc => {\n    console.log(doc)\n});})*/\n\nfunction date(curDate) {\n  //var today = new Date();\n  var weekday = curDate.getDay();\n  var day = curDate.getDate();\n  var month = curDate.getMonth();\n  var year = curDate.getFullYear();\n  var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  return React.createElement(\"div\", {\n    className: \"flight-date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, days[weekday] + \", \" + months[month] + \" \" + day + \", \" + year));\n}\n\nfunction RenderFlightDayHeader(props) {\n  var displayDate = new Date(props.date);\n  var curDate = new Date();\n  var diff = Math.round((displayDate.getTime() - curDate.getTime()) / (24 * 60 * 60 * 1000)); // Only show flights for last 3 days to the next 2 weeks\n\n  var disableLeft = diff == -3;\n  var disableRight = diff == 14;\n  return React.createElement(\"div\", {\n    className: \"flight-day-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: 'date-btn' + (disableLeft ? ' disabled' : ''),\n    src: LEFT_BTN,\n    onClick: () => {\n      props.changeDate(disableLeft ? 0 : -1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), date(displayDate), React.createElement(\"img\", {\n    className: 'date-btn' + (disableRight ? ' disabled' : ''),\n    src: RIGHT_BTN,\n    onClick: () => {\n      props.changeDate(disableRight ? 0 : 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }));\n}\n\nfunction parseName(name) {\n  return name[1].toUpperCase() + name.slice(2);\n}\n\nfunction RenderFlightDay(props) {\n  var headers = ['ETD', 'AC', 'CREW', 'MISSION', 'DETAILS', 'CONFIG', 'REMARKS', 'SQ PRI', 'DCO', 'ETR'];\n  var tableHeaders = [];\n  var ac = React.createElement(\"div\", {\n    className: \"ac-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"462\");\n  var dot = React.createElement(\"div\", {\n    className: \"dot ok\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  });\n  headers.forEach(title => {\n    tableHeaders.push(React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, title));\n  });\n  var data = props.data != null ? props.data : [['0900', ac, 'Amelia E | Charlies L', '427 AU H102 G00', 'SME', 'DC6S', \"\", '1 SOA', dot, '1030'], ['2520', ac, 'D.B. Cooper | Maverick', '427 AU H105 G00', 'ALP1', 'DC6S', \"\", '3 SOA', dot, '1230']];\n  var tableRows = [];\n\n  if (data != props.data) {\n    data.forEach(row => {\n      var r = [];\n\n      for (var i = 0; i < row.length; i++) {\n        r.push(React.createElement(\"td\", {\n          className: headers[i].toLowerCase(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, row[i]));\n      }\n\n      var hr = parseInt(row[0][0] + row[0][1]);\n      var min = parseInt(row[0][2] + row[0][3]);\n      tableRows.push(React.createElement(\"tr\", {\n        className: props.curTime.getHours() > hr || hr == props.curTime.getHours() && props.curTime.getMinutes() > min ? 'expired' : '',\n        onClick: props.toggleOverlay.bind(this, '521512'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, r));\n    });\n  } else {\n    data.forEach(entry => {\n      var d = entry.data();\n      var r = [React.createElement(\"td\", {\n        className: \"etd\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, d.timeStart), React.createElement(\"td\", {\n        className: \"ac\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ac-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, d.ac)), React.createElement(\"td\", {\n        className: \"crew\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, parseName(d.captain) + ' | ' + parseName(d.fo[0])), React.createElement(\"td\", {\n        className: \"mission\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, d.mission), React.createElement(\"td\", {\n        className: \"details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, d.details), React.createElement(\"td\", {\n        className: \"config\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, d.config), React.createElement(\"td\", {\n        className: \"remarks\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, d.remarks), React.createElement(\"td\", {\n        className: \"pri\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, d.pri + ' SOA'), React.createElement(\"td\", {\n        className: \"dco\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"dot \" + d.dco,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        className: \"etr\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, d.timeEnd)];\n      var startTime = parseInt(d.timeStart);\n      console.log(props.curTime, props.date, startTime, props.curTime.getHours() * 100 + props.curTime.getMinutes());\n      tableRows.push(React.createElement(\"tr\", {\n        className: props.curTime == props.date && startTime < props.curTime.getHours() * 100 + props.curTime.getMinutes() ? 'expired' : '',\n        onClick: props.toggleOverlay.bind(this, '521512'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, r));\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"flight-day\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, tableHeaders), tableRows));\n}\n\nfunction RenderFlightDayBox(props) {\n  return React.createElement(\"div\", {\n    className: \"flight-day-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(RenderFlightDayHeader, {\n    date: props.date,\n    changeDate: offset => {\n      props.changeDate(offset);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(RenderFlightDay, {\n    date: props.date,\n    data: props.data,\n    curTime: props.curTime,\n    toggleOverlay: id => {\n      props.toggleOverlay(id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }));\n}\n\nfunction RenderInfoBox(props) {\n  return React.createElement(\"div\", {\n    className: \"info-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"info-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, props.title)), React.createElement(\"div\", {\n    className: \"info-content\",\n    contentEditable: true,\n    suppressContentEditableWarning: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"N/A\")));\n}\n\nfunction RenderInfoBar(props) {\n  const default_info = [\"EVENING TWILIGHT\", \"SNAGS DESK SGT\", \"DUTY MVP\", \"FDO\", \"DUTY GROUND RUN\"];\n  var boxes = [];\n\n  for (var i = 0; i < default_info.length; i++) {\n    var title = default_info[i];\n    boxes.push(React.createElement(RenderInfoBox, {\n      title: title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"info-bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"time-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"CURRENT TIME\")), React.createElement(\"div\", {\n    className: \"time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, (props.curTime.getHours() < 10 ? \"0\" : \"\") + props.curTime.getHours() + ':' + (props.curTime.getMinutes() < 10 ? \"0\" : \"\") + props.curTime.getMinutes())), boxes);\n}\n\nclass Flights extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      curTime: new Date(),\n      date: new Date(),\n      data: null\n    };\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n    this.getData(new Date());\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      curTime: new Date()\n    });\n  }\n\n  getData(newDate) {\n    var date = (newDate.getMonth() < 9 ? '0' : '') + (newDate.getMonth() + 1) + '-' + (newDate.getDate() < 10 ? '0' : '') + newDate.getDate() + '-' + newDate.getFullYear(); //get new data\n\n    firebase.firestore().collection(\"events\").where('type', '==', 'flight').where('date', '==', date).get().then(querySnapshot => {\n      if (!querySnapshot.empty) {\n        this.setState({\n          data: querySnapshot\n        });\n      } else {\n        console.log(\"Document doesn't exist\");\n        this.setState({\n          data: null\n        });\n      }\n\n      ;\n    }).catch(function (error) {\n      console.log(\"Error getting documents: \", error);\n    });\n  }\n\n  changeDate(offset) {\n    if (offset != 0) {\n      var newDate = new Date(this.state.date);\n      newDate.setDate(newDate.getDate() + offset);\n      this.setState({\n        date: new Date(newDate)\n      });\n      this.getData(newDate);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(RenderFlightDayBox, {\n      date: this.state.date,\n      data: this.state.data,\n      curTime: this.state.curTime,\n      toggleOverlay: id => {\n        this.props.toggleOverlay(id);\n      },\n      changeDate: offset => {\n        this.changeDate(offset);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(RenderInfoBar, {\n      date: this.state.date,\n      curTime: this.state.curTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Flights;","map":{"version":3,"sources":["/Users/jenny/Desktop/SOAS/scheduler/src/Flights.js"],"names":["React","RIGHT_BTN","LEFT_BTN","firebase","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","date","curDate","weekday","getDay","day","month","year","days","months","RenderFlightDayHeader","props","displayDate","diff","Math","round","getTime","disableLeft","disableRight","changeDate","parseName","name","toUpperCase","slice","RenderFlightDay","headers","tableHeaders","ac","dot","forEach","title","push","data","tableRows","row","r","i","length","toLowerCase","hr","parseInt","min","curTime","getHours","getMinutes","toggleOverlay","bind","entry","d","timeStart","captain","fo","mission","details","config","remarks","pri","dco","timeEnd","startTime","console","log","RenderFlightDayBox","offset","id","RenderInfoBox","RenderInfoBar","default_info","boxes","Flights","Component","constructor","state","componentDidMount","timerID","setInterval","tick","getData","componentWillUnmount","clearInterval","setState","newDate","firestore","collection","where","get","then","querySnapshot","empty","catch","error","setDate","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport \"./Flights.css\";\nimport RIGHT_BTN from './img/right-arrow.png';\nimport LEFT_BTN from './img/left-arrow.png';\nimport firebase from \"./Firebase.js\";\n\nvar today = new Date();\nvar dd = String(today.getDate()).padStart(2, '0');\nvar mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\nvar yyyy = today.getFullYear();\n\ntoday = mm + '/' + dd + '/' + yyyy;\n\n/** var data = []\nfirebase.collection(\"flights\").get().then(querySnapshot => {\nquerySnapshot.docs.map(doc => {\n    console.log(doc)\n});})*/\n\n\n\nfunction date(curDate) {\n    //var today = new Date();\n    var weekday = curDate.getDay();\n    var day = curDate.getDate();\n    var month = curDate.getMonth();\n    var year = curDate.getFullYear();\n    var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\",\"December\"];\n    return (\n        <div className='flight-date'>\n            <h2>{days[weekday] +\", \"+months[month]+\" \"+day+\", \"+year}</h2>\n        </div>\n    )\n}\n\nfunction RenderFlightDayHeader(props) {\n    var displayDate = new Date(props.date);\n    var curDate = new Date();\n    var diff = Math.round((displayDate.getTime() - curDate.getTime())/(24*60*60*1000));\n\n    // Only show flights for last 3 days to the next 2 weeks\n    var disableLeft = diff == -3;\n    var disableRight= diff == 14;\n\n    return (\n        <div className=\"flight-day-header\">\n            <img className={'date-btn' + (disableLeft ? ' disabled': '')} src={LEFT_BTN} onClick={()=>{props.changeDate(disableLeft ? 0 : -1)}}></img>\n            {date(displayDate)}\n            <img className={'date-btn' + (disableRight ? ' disabled': '')} src={RIGHT_BTN} onClick={()=>{props.changeDate(disableRight ? 0 : 1)}}></img>\n        </div>\n    )\n}\n\nfunction parseName(name) {\n    return name[1].toUpperCase() + name.slice(2);\n}\n\n\nfunction RenderFlightDay(props) {\n\n    var headers = ['ETD', 'AC', 'CREW', 'MISSION', 'DETAILS', 'CONFIG', 'REMARKS', 'SQ PRI', 'DCO', 'ETR'];\n    var tableHeaders = [];\n    var ac = <div className='ac-wrap'>462</div>;\n    var dot = <div className=\"dot ok\"></div>;\n    headers.forEach(title => {\n        tableHeaders.push(<th>{title}</th>)\n    });\n    var data = props.data != null ? props.data : [['0900', ac, 'Amelia E | Charlies L', '427 AU H102 G00', 'SME', 'DC6S', \"\", '1 SOA', dot, '1030'], \n                ['2520', ac, 'D.B. Cooper | Maverick', '427 AU H105 G00', 'ALP1', 'DC6S', \"\", '3 SOA', dot, '1230']]\n    var tableRows = [];\n    \n    if (data != props.data) {\n        data.forEach(row => {\n            var r = [];\n            \n            for (var i = 0; i<row.length; i++) {\n                r.push(<td className={headers[i].toLowerCase()}>{row[i]}</td>);\n            }  \n            var hr = parseInt(row[0][0]+row[0][1]);\n            var min = parseInt(row[0][2]+row[0][3]);\n            \n            tableRows.push(<tr className={(props.curTime.getHours() > hr) || (hr == props.curTime.getHours() && props.curTime.getMinutes() > min) ? 'expired':''} onClick={props.toggleOverlay.bind(this,'521512')}>{r}</tr>);\n        });\n    }\n    else {data.forEach(entry => {\n        var d = entry.data();\n        var r = [<td className='etd'>{d.timeStart}</td>,\n        <td className='ac'><div className='ac-wrap'>{d.ac}</div></td>,\n        <td className='crew'>{parseName(d.captain) + ' | ' + parseName(d.fo[0])}</td>,\n        <td className='mission'>{d.mission}</td>,\n        <td className='details'>{d.details}</td>,\n        <td className='config'>{d.config}</td>,\n        <td className='remarks'>{d.remarks}</td>,\n        <td className='pri'>{d.pri + ' SOA'}</td>,\n        <td className='dco'><div className={\"dot \"+d.dco}></div></td>,\n        <td className='etr'>{d.timeEnd}</td>,\n        ];\n        \n        var startTime = parseInt(d.timeStart);\n        console.log(props.curTime, props.date, startTime, props.curTime.getHours()*100+props.curTime.getMinutes());\n        tableRows.push(<tr className={(props.curTime == props.date && startTime < props.curTime.getHours()*100+props.curTime.getMinutes()) ? 'expired':''} onClick={props.toggleOverlay.bind(this,'521512')}>{r}</tr>);\n        })\n    }\n    return (\n        <div className=\"flight-day\">\n            <table>\n                <tr>\n                    {tableHeaders}\n                </tr>\n                {tableRows}\n            </table>\n        </div>\n    )\n}\n\nfunction RenderFlightDayBox(props) {\n    return (\n        <div className=\"flight-day-box\">\n            <RenderFlightDayHeader date={props.date} changeDate={(offset)=>{props.changeDate(offset)}}/>\n            <RenderFlightDay date={props.date} data={props.data} curTime={props.curTime} toggleOverlay={(id)=>{props.toggleOverlay(id)}}/>\n        </div>\n    )\n}\n\nfunction RenderInfoBox(props) {\n    return (\n        <div className=\"info-box\">\n            <div className=\"info-title\">\n                <h5>{props.title}</h5>\n            </div>\n            <div className=\"info-content\" contentEditable={true} suppressContentEditableWarning={true}>\n                <h5>N/A</h5>\n            </div>\n        </div>\n    )\n}\n\nfunction RenderInfoBar(props) {\n    const default_info = [\"EVENING TWILIGHT\", \"SNAGS DESK SGT\", \"DUTY MVP\", \"FDO\", \"DUTY GROUND RUN\"];\n    var boxes = [];\n    for (var i = 0; i < default_info.length; i++) {\n        var title = default_info[i]\n        boxes.push(<RenderInfoBox title={title}/>)\n    }\n    return (\n        <div className=\"info-bar\">\n            <div className=\"time-title\">\n                <h5>CURRENT TIME</h5>\n            </div>\n            <div className=\"time\">\n                <h2>{(props.curTime.getHours()<10?\"0\":\"\")+props.curTime.getHours()+':'+(props.curTime.getMinutes()<10?\"0\":\"\")+props.curTime.getMinutes()}</h2>\n            </div>\n            {boxes}\n        </div>\n    )\n}\n\nclass Flights extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            curTime: new Date(),\n            date: new Date(),\n            data: null,\n        }\n    }\n    componentDidMount() {\n        this.timerID = setInterval(() => this.tick(), 1000);\n        this.getData(new Date());\n    }\n\n    componentWillUnmount() {clearInterval(this.timerID);}\n\n    tick() {this.setState({curTime: new Date()});}\n\n    getData(newDate) {\n        var date = (newDate.getMonth() < 9 ? '0':'') + (newDate.getMonth()+1) + '-' + (newDate.getDate() < 10 ? '0':'') + (newDate.getDate()) + '-' + newDate.getFullYear();\n        //get new data\n        firebase.firestore().collection(\"events\").where('type', '==', 'flight').where('date', '==', date)\n        .get()\n        .then((querySnapshot) => {\n            if (!querySnapshot.empty) {\n                this.setState({data: querySnapshot})\n            }\n            else {\n                console.log(\"Document doesn't exist\");\n                this.setState({data: null});\n            };\n        })\n        .catch(function(error) {\n            console.log(\"Error getting documents: \", error);\n        });\n    }\n\n    changeDate(offset) {\n        if (offset != 0) {\n            var newDate = new Date(this.state.date);\n            newDate.setDate(newDate.getDate() + offset);\n            this.setState({date: new Date(newDate)})\n            this.getData(newDate);\n        }\n    }\n\n    render() {\n        return (\n            <div className='container'>\n                <RenderFlightDayBox date={this.state.date} \n                                    data={this.state.data}\n                                    curTime={this.state.curTime} \n                                    toggleOverlay={(id)=>{this.props.toggleOverlay(id)}} \n                                    changeDate={(offset)=>{this.changeDate(offset)}}/>\n                <RenderInfoBar date={this.state.date} curTime={this.state.curTime}/>\n            </div>\n        )\n    }\n}\n\nexport default Flights;\n"]},"metadata":{},"sourceType":"module"}
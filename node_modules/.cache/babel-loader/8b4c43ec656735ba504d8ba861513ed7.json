{"ast":null,"code":"import firebase from \"./Firebase.js\";\nimport { randomBytes } from \"crypto\"; // Add a new document in collection \"dates\"\n\n/*for (var i = 1; i <= 3; i++) {\n    var date = '06-' + (i < 10 ? '0': '') + i + '-2019';\nfirebase.firestore().collection(\"dates\").doc(date).set({\ntwilight: {civil: null, naut: null},\ndutymtp: null,\noic: null,\ngroundrun: null,\ndesksgt: {day: null, night: null},\nfdo: {day: null, night: null}\n})\n.then(()=> {\nconsole.log(\"Document successfully written!\");\n})\n.catch(function(error) {\nconsole.error(\"Error writing document: \", error);\n});}*/\n\nfunction getRandom(x, y) {\n  var min = Math.ceil(x);\n  var max = Math.floor(y);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction updateData() {\n  /*** \n  firebase.firestore().collection(\"pilots\").doc('aearhart').set({\n  team: 1, \n  role: 'aviator',\n  lastFlight: '01-01-2019',\n  })\n  .then(function(docRef) {\n  console.log(\"Document successfully written!\", docRef.id);\n  })\n  .catch(function(error) {\n  console.error(\"Error writing document: \", error);\n  });\n  firebase.firestore().collection(\"pilots\").doc('clindbergh').set({\n  team: 1, \n  role: 'aviator',\n  lastFlight: '01-01-2019',\n  })\n  .then(function(docRef) {\n  console.log(\"Document successfully written!\", docRef.id);\n  })\n  .catch(function(error) {\n  console.error(\"Error writing document: \", error);\n  });\n  firebase.firestore().collection(\"pilots\").doc('pmitchell').set({\n  team: 1, \n  displayName: 'Pete Mitchell',\n  role: 'ace',\n  lastFlight: '01-01-2019',\n  })\n  .then(function(docRef) {\n  console.log(\"Document successfully written!\", docRef.id);\n  })\n  .catch(function(error) {\n  console.error(\"Error writing document: \", error);\n  });\n  firebase.firestore().collection(\"pilots\").doc('jdoolittle').set({\n  team: 1, \n  displayName: 'Jimmy Doolittle',\n  role: 'aviator',\n  lastFlight: '01-01-2019',\n  })\n  .then(function(docRef) {\n  console.log(\"Document successfully written!\", docRef.id);\n  })\n  .catch(function(error) {\n  console.error(\"Error writing document: \", error);\n  });\n  firebase.firestore().collection(\"pilots\").doc('cyeager').set({\n  team: 2, \n  displayName: 'Chuck Yeager',\n  role: 'test pilot',\n  lastFlight: '01-01-2019',\n  })\n  .then(function(docRef) {\n  console.log(\"Document successfully written!\", docRef.id);\n  })\n  .catch(function(error) {\n  console.error(\"Error writing document: \", error);\n  });\n  firebase.firestore().collection(\"pilots\").doc('owright').set({\n  team: 1, \n  displayName: 'Orvill Wright',\n  role: 'test pilot',\n  lastFlight: '01-01-2019',\n  })\n  .then(function(docRef) {\n  console.log(\"Document successfully written!\", docRef.id);\n  })\n  .catch(function(error) {\n  console.error(\"Error writing document: \", error);\n  });\n  firebase.firestore().collection(\"pilots\").doc('ehartmann').set({\n  team: 2,\n  displayName: 'Erich Hartmann',\n  role: 'ace',\n  lastFlight: '01-01-2019',\n  })\n  .then(function(docRef) {\n  console.log(\"Document successfully written!\", docRef.id);\n  })\n  .catch(function(error) {\n  console.error(\"Error writing document: \", error);\n  });\n  firebase.firestore().collection(\"pilots\").doc('wwright').set({\n  team: 2,\n  displayName: 'Wilbur Wright',\n  role: 'aviator',\n  lastFlight: '01-01-2019',\n  })\n  .then(function(docRef) {\n  console.log(\"Document successfully written!\", docRef.id);\n  })\n  .catch(function(error) {\n  console.error(\"Error writing document: \", error);\n  });*/\n\n  /** \n  \n  var ac = [472, 582, 479, 496, 428, 409]\n  var pilots = ['wwright', 'clindbergh', 'cyeager', 'aearhart', 'pmitchell', 'jdoolittle', 'ehartmann', 'owright'];\n  var config = ['NR FF', \"V FF\", \"DC6S\", \"DC0S\"];\n  var dco = ['ok','ok','ok','ok','ok','ok','warn', 'warn', 'bad'];\n  var details = ['SME', \"ALP2\"];\n  \n  for (var i  = 0; i < 10 ; i ++) {\n      var pilot = pilots[getRandom(0, 7)];\n      var fo = pilots[getRandom(0, 7)];\n      var date = \"2019-07-\" + getRandom(18, 30);\n      var acval = ac[getRandom(0, 5)];\n      var configval = config[getRandom(0, 3)];\n      var detail = details[getRandom(0, 1)];\n      var end=  parseInt(getRandom(0, 23) + getRandom(0, 5) +'0');\n      var start = parseInt(getRandom(Math.floor(end/100), 23) + getRandom(0, 5) +'0');\n  var newEvent = firebase.firestore().collection(\"events\").doc();\n  var newUpcomingEvent = firebase.firestore().collection('pilots').doc(pilot).collection('upcoming-events').doc();\n  \n  \n  \n  newUpcomingEvent.set({\n      ac: acval,\n      captain: pilot,\n      flightid: newEvent.id,\n      config: configval,\n      date: date,\n      fo: fo,\n      details: detail,\n      timeEnd: end,\n      timeStart: start,\n      })\n  .then(function(docRef) {\n      console.log(\"Document successfully written!\");})\n  .catch(function(error) {\n      console.error(\"Error writing document: \", error);\n  })\n  \n  newEvent.set({\n      ac: acval,\n      captain: pilot,\n      config: configval,\n      date: date,\n      dco: dco[getRandom(0, 8)],\n      details: detail,\n      fo: fo,\n      mission: \"427 AU H\"+ getRandom(1, 8) + getRandom(0,6) + \"3 G0\" + getRandom(0, 9),\n      pri: getRandom(1, 6),\n      remarks: getRandom(1,6) == 4 ? 'Academic Shoot' : '',\n      meal: getRandom(1,15) == 6 ? true : false,\n      timeEnd: end,\n      timeStart: start,\n      type: \"flight\",\n      })\n  .then(function(docRef) {\n      console.log(\"Document successfully written!\");})\n  .catch(function(error) {\n      console.error(\"Error writing document: \", error);\n  })\n  \n  \n  \n  }\n  */\n\n  /*\n  firebase.firestore().collection(\"pilots\").doc('aearhart').set({\n      ac: ac[getRandom(0, 5)],\n      captain: pilots[getRandom(0, 7)],\n      config: config[getRandom(0, 3)],\n      date: \"2019-07-\" + getRandom(18, 30),\n      dco: dco[getRandom(0, 8)],\n      details: details[getRandom(0, 1)],\n      fo: pilots[getRandom(0,7)],\n      mission: \"427 AU H\"+ getRandom(1, 8) + getRandom(0,6) + \"3 G0\" + getRandom(0, 9),\n      pri: getRandom(1, 6),\n      remarks: getRandom(1,6) == 4 ? 'Academic Shoot' : '',\n      meal: getRandom(1,15) == 6 ? true : false,\n      timeEnd: parseInt(getRandom(0, 23) + getRandom(0, 5) +'0'),\n      timeStart: parseInt(getRandom(0, 23) + getRandom(0, 5) +'0'),\n      type: \"flight\",\n      })\n  .then(function(docRef) {\n      console.log(\"Document successfully written!\");})\n  .catch(function(error) {\n      console.error(\"Error writing document: \", error);\n  })*/\n\n  /**************************** MASS FLIGHT CREEATION  ****************************/\n\n  /*\n  var ac = [472, 582, 479, 496, 428, 409]\n  var pilots = ['wwright', 'clindbergh', 'cyeager', 'aearhart', 'pmitchell', 'jdoolittle', 'ehartmann', 'owright'];\n  var config = ['NR FF', \"V FF\", \"DC6S\", \"DC0S\"];\n  var dco = ['ok','ok','ok','ok','warn', 'warn', 'bad', 'ok','ok'];\n  var details = ['SME', \"ALP2\"];\n  var state = {};\n  \n  for (var i  = 0; i < 10 ; i ++) {\n      state.captain = pilots[getRandom(0, 7)];\n      state.fo = pilots[getRandom(0, 7)];\n      state.date = \"2019-07-\" + getRandom(18, 30);\n      state.ac = ac[getRandom(0, 5)];\n      state.fe = \"\";\n      state.crew = \"\";\n      state.dco = dco[getRandom(0,8)]\n      state.config = config[getRandom(0, 3)];\n      state.details = details[getRandom(0, 1)];\n      state.timeStart=  parseInt(getRandom(0, 23) + getRandom(0, 5) +'0');\n      state.timeEnd = parseInt(getRandom(Math.floor(state.timeStart/100), 23) + getRandom(0, 5) +'0');\n      console.log(state);\n  \n      var newEvent = firebase.firestore().collection(\"events\").doc();\n      newEvent.set(state)\n      .then(function() {\n          console.log(\"Event successfully added to events!\");})\n      .catch(function(error) {\n          console.error(\"Error adding event: \", error);\n      });\n  \n      var updates = {};\n      updates['events.'+state.captain] = firebase.firestore.FieldValue.arrayUnion({'type':'flight', 'startTime': state.timeStart, 'endTime': state.timeEnd, 'id':newEvent.id});\n      updates['events.'+state.fo] = firebase.firestore.FieldValue.arrayUnion({'type':'flight', 'startTime': state.timeStart, 'endTime': state.timeEnd, 'id':newEvent.id});\n      \n      var newUpcomingEvents = [firebase.firestore().collection('pilots').doc(state.captain).collection('upcoming-events').doc(),\n      firebase.firestore().collection('pilots').doc(state.captain).collection('upcoming-events').doc()];\n  \n      if (state.fe) {\n          updates['events.'+state.fo] = firebase.firestore.FieldValue.arrayUnion({'type':'flight', 'startTime': state.timeStart, 'endTime': state.timeEnd, 'id':newEvent.id});\n          newUpcomingEvents.push(firebase.firestore().collection('pilots').doc(state.fe).collection('upcoming-events').doc());\n      }\n      if (state.crew) {\n          updates['events.'+state.fo] = firebase.firestore.FieldValue.arrayUnion({'type':'flight', 'startTime': state.timeStart, 'endTime': state.timeEnd, 'id':newEvent.id});\n          newUpcomingEvents.push(firebase.firestore().collection('pilots').doc(state.crew).collection('upcoming-events').doc());\n      }\n      firebase.firestore().collection(\"dates\").doc(state.date).update(updates)\n      .then(function() {\n          console.log(\"Event successfully added to dates!\");})\n      .catch(function(error) {\n          console.error(\"Error writing document: \", error);\n      })\n  \n      console.log(newUpcomingEvents)\n      newUpcomingEvents.forEach((x)=>{x.set({\n          ac: state.ac,\n          captain: state.captain,\n          flightid: newEvent.id,\n          config: state.config,\n          date: state.date,\n          fo: state.fo,\n          fe: state.fe,\n          crew: state.crew,\n          details: state.details,\n          timeEnd: state.timeEnd,\n          timeStart: state.timeStart,})\n      .then(function() {\n          console.log(\"Event successfully added to pilots!\");})\n      .catch(function(error) {\n          console.error(\"Error writing document: \", error);\n      })})\n  }*/\n  var l = [30, 60, 60, 60, 90, 90, 90, 90, 120, 120, 120, 150, 180];\n  var pilots = ['wwright', 'clindbergh', 'cyeager', 'aearhart', 'pmitchell', 'jdoolittle', 'ehartmann', 'owright'];\n  var start = [800, 900, 1020, 1150, 1130, 1240, 1320, 1340, 1420, 1530];\n  var location = ['', \"\", '', 'Classroom A', 'Room 201', \"Courtyard\", '', '', ''];\n  var details = ['Strategy Discussion', \"Sync with CO\", \"Lunch Discussion\", \"Review Scheduler\"];\n  var state = {};\n\n  for (var i = 0; i < 10; i++) {\n    state.title = details[getRandom(0, 3)];\n    state.type = \"meeting\";\n    state.date = \"2019-07-\" + getRandom(18, 30);\n    state.startTime = start[getRandom(0, 9)];\n    state.endTime = state.startTime + l[getRandom(0, 11)];\n    state.location = location[getRandom(0, 8)];\n    state.confLink = \"\";\n    state.notes = \"\";\n    state.userid = pilots[getRandom(0, 7)];\n    console.log(state);\n    console.log(state);\n    var newEvent = firebase.firestore().collection(\"events\").doc();\n    newEvent.set(state).then(function () {\n      console.log(\"Event successfully added to events!\");\n    }).catch(function (error) {\n      console.error(\"Error adding event: \", error);\n    });\n    var field = 'events.' + state.userid;\n    firebase.firestore().collection(\"dates\").doc(state.date).update({\n      [field]: firebase.firestore.FieldValue.arrayUnion({\n        'type': 'meeting',\n        'startTime': state.startTime,\n        'endTime': state.endTime,\n        'id': newEvent.id\n      })\n    }).then(function () {\n      console.log(\"Event successfully added to dates!\");\n    }).catch(function (error) {\n      console.error(\"Error writing document: \", error);\n    });\n  }\n}\n\nexport default updateData;","map":{"version":3,"sources":["/Users/jenny/Desktop/SOAS/scheduler/src/insertDataTest.js"],"names":["firebase","randomBytes","getRandom","x","y","min","Math","ceil","max","floor","random","updateData","l","pilots","start","location","details","state","i","title","type","date","startTime","endTime","confLink","notes","userid","console","log","newEvent","firestore","collection","doc","set","then","catch","error","field","update","FieldValue","arrayUnion","id"],"mappings":"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","sourcesContent":["import firebase from \"./Firebase.js\";\nimport { randomBytes } from \"crypto\";\n\n    // Add a new document in collection \"dates\"\n    /*for (var i = 1; i <= 3; i++) {\n        var date = '06-' + (i < 10 ? '0': '') + i + '-2019';\nfirebase.firestore().collection(\"dates\").doc(date).set({\n    twilight: {civil: null, naut: null},\n    dutymtp: null,\n    oic: null,\n    groundrun: null,\n    desksgt: {day: null, night: null},\n    fdo: {day: null, night: null}\n})\n.then(()=> {\n    console.log(\"Document successfully written!\");\n})\n.catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});}*/\n\nfunction getRandom(x, y) {\n    var min = Math.ceil(x);\n    var max = Math.floor(y);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n\nfunction updateData() {\n    /*** \nfirebase.firestore().collection(\"pilots\").doc('aearhart').set({\n    team: 1, \n    role: 'aviator',\n    lastFlight: '01-01-2019',\n})\n    .then(function(docRef) {\n    console.log(\"Document successfully written!\", docRef.id);\n    })\n    .catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});\nfirebase.firestore().collection(\"pilots\").doc('clindbergh').set({\n    team: 1, \n    role: 'aviator',\n    lastFlight: '01-01-2019',\n    })\n    .then(function(docRef) {\n    console.log(\"Document successfully written!\", docRef.id);\n    })\n    .catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});\nfirebase.firestore().collection(\"pilots\").doc('pmitchell').set({\n    team: 1, \n    displayName: 'Pete Mitchell',\n    role: 'ace',\n    lastFlight: '01-01-2019',\n    })\n    .then(function(docRef) {\n    console.log(\"Document successfully written!\", docRef.id);\n    })\n    .catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});\n\nfirebase.firestore().collection(\"pilots\").doc('jdoolittle').set({\n    team: 1, \n    displayName: 'Jimmy Doolittle',\n    role: 'aviator',\n    lastFlight: '01-01-2019',\n    })\n    .then(function(docRef) {\n    console.log(\"Document successfully written!\", docRef.id);\n    })\n    .catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});\nfirebase.firestore().collection(\"pilots\").doc('cyeager').set({\n    team: 2, \n    displayName: 'Chuck Yeager',\n    role: 'test pilot',\n    lastFlight: '01-01-2019',\n    })\n    .then(function(docRef) {\n    console.log(\"Document successfully written!\", docRef.id);\n    })\n    .catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});\nfirebase.firestore().collection(\"pilots\").doc('owright').set({\n    team: 1, \n    displayName: 'Orvill Wright',\n    role: 'test pilot',\n    lastFlight: '01-01-2019',\n    })\n    .then(function(docRef) {\n    console.log(\"Document successfully written!\", docRef.id);\n    })\n    .catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});\nfirebase.firestore().collection(\"pilots\").doc('ehartmann').set({\n    team: 2,\n    displayName: 'Erich Hartmann',\n    role: 'ace',\n    lastFlight: '01-01-2019',\n    })\n    .then(function(docRef) {\n    console.log(\"Document successfully written!\", docRef.id);\n    })\n    .catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});\nfirebase.firestore().collection(\"pilots\").doc('wwright').set({\n    team: 2,\n    displayName: 'Wilbur Wright',\n    role: 'aviator',\n    lastFlight: '01-01-2019',\n    })\n    .then(function(docRef) {\n    console.log(\"Document successfully written!\", docRef.id);\n    })\n    .catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});*/\n\n\n/** \n\nvar ac = [472, 582, 479, 496, 428, 409]\nvar pilots = ['wwright', 'clindbergh', 'cyeager', 'aearhart', 'pmitchell', 'jdoolittle', 'ehartmann', 'owright'];\nvar config = ['NR FF', \"V FF\", \"DC6S\", \"DC0S\"];\nvar dco = ['ok','ok','ok','ok','ok','ok','warn', 'warn', 'bad'];\nvar details = ['SME', \"ALP2\"];\n\nfor (var i  = 0; i < 10 ; i ++) {\n    var pilot = pilots[getRandom(0, 7)];\n    var fo = pilots[getRandom(0, 7)];\n    var date = \"2019-07-\" + getRandom(18, 30);\n    var acval = ac[getRandom(0, 5)];\n    var configval = config[getRandom(0, 3)];\n    var detail = details[getRandom(0, 1)];\n    var end=  parseInt(getRandom(0, 23) + getRandom(0, 5) +'0');\n    var start = parseInt(getRandom(Math.floor(end/100), 23) + getRandom(0, 5) +'0');\nvar newEvent = firebase.firestore().collection(\"events\").doc();\nvar newUpcomingEvent = firebase.firestore().collection('pilots').doc(pilot).collection('upcoming-events').doc();\n\n\n\nnewUpcomingEvent.set({\n    ac: acval,\n    captain: pilot,\n    flightid: newEvent.id,\n    config: configval,\n    date: date,\n    fo: fo,\n    details: detail,\n    timeEnd: end,\n    timeStart: start,\n    })\n.then(function(docRef) {\n    console.log(\"Document successfully written!\");})\n.catch(function(error) {\n    console.error(\"Error writing document: \", error);\n})\n\nnewEvent.set({\n    ac: acval,\n    captain: pilot,\n    config: configval,\n    date: date,\n    dco: dco[getRandom(0, 8)],\n    details: detail,\n    fo: fo,\n    mission: \"427 AU H\"+ getRandom(1, 8) + getRandom(0,6) + \"3 G0\" + getRandom(0, 9),\n    pri: getRandom(1, 6),\n    remarks: getRandom(1,6) == 4 ? 'Academic Shoot' : '',\n    meal: getRandom(1,15) == 6 ? true : false,\n    timeEnd: end,\n    timeStart: start,\n    type: \"flight\",\n    })\n.then(function(docRef) {\n    console.log(\"Document successfully written!\");})\n.catch(function(error) {\n    console.error(\"Error writing document: \", error);\n})\n\n\n\n}\n*/\n\n\n/*\nfirebase.firestore().collection(\"pilots\").doc('aearhart').set({\n    ac: ac[getRandom(0, 5)],\n    captain: pilots[getRandom(0, 7)],\n    config: config[getRandom(0, 3)],\n    date: \"2019-07-\" + getRandom(18, 30),\n    dco: dco[getRandom(0, 8)],\n    details: details[getRandom(0, 1)],\n    fo: pilots[getRandom(0,7)],\n    mission: \"427 AU H\"+ getRandom(1, 8) + getRandom(0,6) + \"3 G0\" + getRandom(0, 9),\n    pri: getRandom(1, 6),\n    remarks: getRandom(1,6) == 4 ? 'Academic Shoot' : '',\n    meal: getRandom(1,15) == 6 ? true : false,\n    timeEnd: parseInt(getRandom(0, 23) + getRandom(0, 5) +'0'),\n    timeStart: parseInt(getRandom(0, 23) + getRandom(0, 5) +'0'),\n    type: \"flight\",\n    })\n.then(function(docRef) {\n    console.log(\"Document successfully written!\");})\n.catch(function(error) {\n    console.error(\"Error writing document: \", error);\n})*/\n\n\n\n\n/**************************** MASS FLIGHT CREEATION  ****************************/\n/*\nvar ac = [472, 582, 479, 496, 428, 409]\nvar pilots = ['wwright', 'clindbergh', 'cyeager', 'aearhart', 'pmitchell', 'jdoolittle', 'ehartmann', 'owright'];\nvar config = ['NR FF', \"V FF\", \"DC6S\", \"DC0S\"];\nvar dco = ['ok','ok','ok','ok','warn', 'warn', 'bad', 'ok','ok'];\nvar details = ['SME', \"ALP2\"];\nvar state = {};\n\nfor (var i  = 0; i < 10 ; i ++) {\n    state.captain = pilots[getRandom(0, 7)];\n    state.fo = pilots[getRandom(0, 7)];\n    state.date = \"2019-07-\" + getRandom(18, 30);\n    state.ac = ac[getRandom(0, 5)];\n    state.fe = \"\";\n    state.crew = \"\";\n    state.dco = dco[getRandom(0,8)]\n    state.config = config[getRandom(0, 3)];\n    state.details = details[getRandom(0, 1)];\n    state.timeStart=  parseInt(getRandom(0, 23) + getRandom(0, 5) +'0');\n    state.timeEnd = parseInt(getRandom(Math.floor(state.timeStart/100), 23) + getRandom(0, 5) +'0');\n    console.log(state);\n\n    var newEvent = firebase.firestore().collection(\"events\").doc();\n    newEvent.set(state)\n    .then(function() {\n        console.log(\"Event successfully added to events!\");})\n    .catch(function(error) {\n        console.error(\"Error adding event: \", error);\n    });\n\n    var updates = {};\n    updates['events.'+state.captain] = firebase.firestore.FieldValue.arrayUnion({'type':'flight', 'startTime': state.timeStart, 'endTime': state.timeEnd, 'id':newEvent.id});\n    updates['events.'+state.fo] = firebase.firestore.FieldValue.arrayUnion({'type':'flight', 'startTime': state.timeStart, 'endTime': state.timeEnd, 'id':newEvent.id});\n    \n    var newUpcomingEvents = [firebase.firestore().collection('pilots').doc(state.captain).collection('upcoming-events').doc(),\n    firebase.firestore().collection('pilots').doc(state.captain).collection('upcoming-events').doc()];\n\n    if (state.fe) {\n        updates['events.'+state.fo] = firebase.firestore.FieldValue.arrayUnion({'type':'flight', 'startTime': state.timeStart, 'endTime': state.timeEnd, 'id':newEvent.id});\n        newUpcomingEvents.push(firebase.firestore().collection('pilots').doc(state.fe).collection('upcoming-events').doc());\n    }\n    if (state.crew) {\n        updates['events.'+state.fo] = firebase.firestore.FieldValue.arrayUnion({'type':'flight', 'startTime': state.timeStart, 'endTime': state.timeEnd, 'id':newEvent.id});\n        newUpcomingEvents.push(firebase.firestore().collection('pilots').doc(state.crew).collection('upcoming-events').doc());\n    }\n    firebase.firestore().collection(\"dates\").doc(state.date).update(updates)\n    .then(function() {\n        console.log(\"Event successfully added to dates!\");})\n    .catch(function(error) {\n        console.error(\"Error writing document: \", error);\n    })\n\n    console.log(newUpcomingEvents)\n    newUpcomingEvents.forEach((x)=>{x.set({\n        ac: state.ac,\n        captain: state.captain,\n        flightid: newEvent.id,\n        config: state.config,\n        date: state.date,\n        fo: state.fo,\n        fe: state.fe,\n        crew: state.crew,\n        details: state.details,\n        timeEnd: state.timeEnd,\n        timeStart: state.timeStart,})\n    .then(function() {\n        console.log(\"Event successfully added to pilots!\");})\n    .catch(function(error) {\n        console.error(\"Error writing document: \", error);\n    })})\n}*/\n\nvar l = [30, 60, 60, 60, 90, 90, 90, 90, 120, 120, 120, 150, 180]\nvar pilots = ['wwright', 'clindbergh', 'cyeager', 'aearhart', 'pmitchell', 'jdoolittle', 'ehartmann', 'owright'];\nvar start = [800, 900, 1020, 1150, 1130, 1240, 1320, 1340, 1420, 1530];\nvar location = ['', \"\", '', 'Classroom A', 'Room 201', \"Courtyard\", '', '', ''];\nvar details = ['Strategy Discussion', \"Sync with CO\", \"Lunch Discussion\", \"Review Scheduler\"];\nvar state = {};\n\nfor (var i  = 0; i < 10 ; i ++) {\n\n    state.title =  details[getRandom(0, 3)];\n    state.type=  \"meeting\";\n    state.date= \"2019-07-\" + getRandom(18, 30);\n    state.startTime= start[getRandom(0,9)];\n    state.endTime= state.startTime + l[getRandom(0,11)];\n    state.location= location[getRandom(0, 8)]; \n    state.confLink= \"\";\n    state.notes= \"\";\n    state.userid=pilots[getRandom(0, 7)];\n    console.log(state);\n\n\n\nconsole.log(state);\nvar newEvent = firebase.firestore().collection(\"events\").doc()\nnewEvent.set(state)\n.then(function() {\n    console.log(\"Event successfully added to events!\");})\n.catch(function(error) {\n    console.error(\"Error adding event: \", error);\n});\n\nvar field = 'events.'+state.userid;\nfirebase.firestore().collection(\"dates\").doc(state.date).update({\n    [field]: firebase.firestore.FieldValue.arrayUnion({'type':'meeting', 'startTime': state.startTime, 'endTime': state.endTime, 'id':newEvent.id})\n    })\n.then(function() {\n    console.log(\"Event successfully added to dates!\");})\n.catch(function(error) {\n    console.error(\"Error writing document: \", error);\n})}\n\n}\n\nexport default updateData;"]},"metadata":{},"sourceType":"module"}
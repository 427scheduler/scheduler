{"ast":null,"code":"import firebase from \"./Firebase.js\";\nimport { randomBytes } from \"crypto\"; // Add a new document in collection \"dates\"\n\n/*for (var i = 1; i <= 3; i++) {\n    var date = '06-' + (i < 10 ? '0': '') + i + '-2019';\nfirebase.firestore().collection(\"dates\").doc(date).set({\ntwilight: {civil: null, naut: null},\ndutymtp: null,\noic: null,\ngroundrun: null,\ndesksgt: {day: null, night: null},\nfdo: {day: null, night: null}\n})\n.then(()=> {\nconsole.log(\"Document successfully written!\");\n})\n.catch(function(error) {\nconsole.error(\"Error writing document: \", error);\n});}*/\n\nfunction getRandom(x, y) {\n  var min = Math.ceil(x);\n  var max = Math.floor(y);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction updateData() {\n  /*** \n  firebase.firestore().collection(\"pilots\").doc('aearhart').set({\n  team: 1, \n  role: 'aviator',\n  lastFlight: '01-01-2019',\n  })\n  .then(function(docRef) {\n  console.log(\"Document successfully written!\", docRef.id);\n  })\n  .catch(function(error) {\n  console.error(\"Error writing document: \", error);\n  });\n  firebase.firestore().collection(\"pilots\").doc('clindbergh').set({\n  team: 1, \n  role: 'aviator',\n  lastFlight: '01-01-2019',\n  })\n  .then(function(docRef) {\n  console.log(\"Document successfully written!\", docRef.id);\n  })\n  .catch(function(error) {\n  console.error(\"Error writing document: \", error);\n  });\n  firebase.firestore().collection(\"pilots\").doc('pmitchell').set({\n  team: 1, \n  displayName: 'Pete Mitchell',\n  role: 'ace',\n  lastFlight: '01-01-2019',\n  })\n  .then(function(docRef) {\n  console.log(\"Document successfully written!\", docRef.id);\n  })\n  .catch(function(error) {\n  console.error(\"Error writing document: \", error);\n  });\n  firebase.firestore().collection(\"pilots\").doc('jdoolittle').set({\n  team: 1, \n  displayName: 'Jimmy Doolittle',\n  role: 'aviator',\n  lastFlight: '01-01-2019',\n  })\n  .then(function(docRef) {\n  console.log(\"Document successfully written!\", docRef.id);\n  })\n  .catch(function(error) {\n  console.error(\"Error writing document: \", error);\n  });\n  firebase.firestore().collection(\"pilots\").doc('cyeager').set({\n  team: 2, \n  displayName: 'Chuck Yeager',\n  role: 'test pilot',\n  lastFlight: '01-01-2019',\n  })\n  .then(function(docRef) {\n  console.log(\"Document successfully written!\", docRef.id);\n  })\n  .catch(function(error) {\n  console.error(\"Error writing document: \", error);\n  });\n  firebase.firestore().collection(\"pilots\").doc('owright').set({\n  team: 1, \n  displayName: 'Orvill Wright',\n  role: 'test pilot',\n  lastFlight: '01-01-2019',\n  })\n  .then(function(docRef) {\n  console.log(\"Document successfully written!\", docRef.id);\n  })\n  .catch(function(error) {\n  console.error(\"Error writing document: \", error);\n  });\n  firebase.firestore().collection(\"pilots\").doc('ehartmann').set({\n  team: 2,\n  displayName: 'Erich Hartmann',\n  role: 'ace',\n  lastFlight: '01-01-2019',\n  })\n  .then(function(docRef) {\n  console.log(\"Document successfully written!\", docRef.id);\n  })\n  .catch(function(error) {\n  console.error(\"Error writing document: \", error);\n  });\n  firebase.firestore().collection(\"pilots\").doc('wwright').set({\n  team: 2,\n  displayName: 'Wilbur Wright',\n  role: 'aviator',\n  lastFlight: '01-01-2019',\n  })\n  .then(function(docRef) {\n  console.log(\"Document successfully written!\", docRef.id);\n  })\n  .catch(function(error) {\n  console.error(\"Error writing document: \", error);\n  });*/\n  var ac = [472, 582, 479, 496, 428, 409];\n  var pilots = ['wwright', 'clindbergh', 'cyeager', 'aearhart', 'pmitchell', 'jdoolittle', 'ehartmann', 'owright'];\n  var config = ['NR FF', \"V FF\", \"DC6S\", \"DC0S\"];\n  var dco = ['ok', 'ok', 'ok', 'ok', 'ok', 'ok', 'warn', 'warn', 'bad'];\n  var details = ['SME', \"ALP2\"];\n\n  for (var i = 0; i < 10; i++) {\n    var pilot = pilots[getRandom(0, 7)];\n    var fo = pilots[getRandom(0, 7)];\n    var date = \"2019-07-\" + getRandom(18, 30);\n    var ac = ac[getRandom(0, 5)];\n    var newEvent = firebase.firestore().collection(\"events\").doc();\n    newEvent.set({\n      ac: {\n        ac\n      },\n      captain: {\n        pilot\n      },\n      config: config[getRandom(0, 3)],\n      date: {\n        date\n      },\n      dco: dco[getRandom(0, 8)],\n      details: details[getRandom(0, 1)],\n      fo: {\n        fo\n      },\n      mission: \"427 AU H\" + getRandom(1, 8) + getRandom(0, 6) + \"3 G0\" + getRandom(0, 9),\n      pri: getRandom(1, 6),\n      remarks: getRandom(1, 6) == 4 ? 'Academic Shoot' : '',\n      meal: getRandom(1, 15) == 6 ? true : false,\n      timeEnd: parseInt(getRandom(0, 23) + getRandom(0, 5) + '0'),\n      timeStart: parseInt(getRandom(0, 23) + getRandom(0, 5) + '0'),\n      type: \"flight\"\n    }).then(function (docRef) {\n      console.log(\"Document successfully written!\");\n    }).catch(function (error) {\n      console.error(\"Error writing document: \", error);\n      let ref1 = firebase.firestore().collection('pilots').doc(pilot).collection('upcoming-events');\n      let ref2 = firebase.firestore().collection('pilots').doc(fo).collection('upcoming-events');\n      firebase.firestore().setAll(ref1, ref2)({\n        ac: ac[getRandom(0, 5)],\n        captain: pilot,\n        config: config[getRandom(0, 3)],\n        date: date,\n        dco: dco[getRandom(0, 8)],\n        details: details[getRandom(0, 1)],\n        fo: fo,\n        mission: \"427 AU H\" + getRandom(1, 8) + getRandom(0, 6) + \"3 G0\" + getRandom(0, 9),\n        pri: getRandom(1, 6),\n        remarks: getRandom(1, 6) == 4 ? 'Academic Shoot' : '',\n        meal: getRandom(1, 15) == 6 ? true : false,\n        timeEnd: parseInt(getRandom(0, 23) + getRandom(0, 5) + '0'),\n        timeStart: parseInt(getRandom(0, 23) + getRandom(0, 5) + '0'),\n        type: \"flight\"\n      }).then(function (docRef) {\n        console.log(\"Document successfully written!\");\n      }).catch(function (error) {\n        console.error(\"Error writing document: \", error);\n      });\n    });\n  }\n  /*\n  firebase.firestore().collection(\"pilots\").doc('aearhart').set({\n      ac: ac[getRandom(0, 5)],\n      captain: pilots[getRandom(0, 7)],\n      config: config[getRandom(0, 3)],\n      date: \"2019-07-\" + getRandom(18, 30),\n      dco: dco[getRandom(0, 8)],\n      details: details[getRandom(0, 1)],\n      fo: pilots[getRandom(0,7)],\n      mission: \"427 AU H\"+ getRandom(1, 8) + getRandom(0,6) + \"3 G0\" + getRandom(0, 9),\n      pri: getRandom(1, 6),\n      remarks: getRandom(1,6) == 4 ? 'Academic Shoot' : '',\n      meal: getRandom(1,15) == 6 ? true : false,\n      timeEnd: parseInt(getRandom(0, 23) + getRandom(0, 5) +'0'),\n      timeStart: parseInt(getRandom(0, 23) + getRandom(0, 5) +'0'),\n      type: \"flight\",\n      })\n  .then(function(docRef) {\n      console.log(\"Document successfully written!\");})\n  .catch(function(error) {\n      console.error(\"Error writing document: \", error);\n  })*/\n\n}\n\nexport default updateData;","map":{"version":3,"sources":["/Users/jenny/Desktop/SOAS/scheduler/src/insertDataTest.js"],"names":["firebase","randomBytes","getRandom","x","y","min","Math","ceil","max","floor","random","updateData","ac","pilots","config","dco","details","i","pilot","fo","date","newEvent","firestore","collection","doc","set","captain","mission","pri","remarks","meal","timeEnd","parseInt","timeStart","type","then","docRef","console","log","catch","error","ref1","ref2","setAll"],"mappings":"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","sourcesContent":["import firebase from \"./Firebase.js\";\nimport { randomBytes } from \"crypto\";\n\n    // Add a new document in collection \"dates\"\n    /*for (var i = 1; i <= 3; i++) {\n        var date = '06-' + (i < 10 ? '0': '') + i + '-2019';\nfirebase.firestore().collection(\"dates\").doc(date).set({\n    twilight: {civil: null, naut: null},\n    dutymtp: null,\n    oic: null,\n    groundrun: null,\n    desksgt: {day: null, night: null},\n    fdo: {day: null, night: null}\n})\n.then(()=> {\n    console.log(\"Document successfully written!\");\n})\n.catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});}*/\n\nfunction getRandom(x, y) {\n    var min = Math.ceil(x);\n    var max = Math.floor(y);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n\nfunction updateData() {\n    /*** \nfirebase.firestore().collection(\"pilots\").doc('aearhart').set({\n    team: 1, \n    role: 'aviator',\n    lastFlight: '01-01-2019',\n})\n    .then(function(docRef) {\n    console.log(\"Document successfully written!\", docRef.id);\n    })\n    .catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});\nfirebase.firestore().collection(\"pilots\").doc('clindbergh').set({\n    team: 1, \n    role: 'aviator',\n    lastFlight: '01-01-2019',\n    })\n    .then(function(docRef) {\n    console.log(\"Document successfully written!\", docRef.id);\n    })\n    .catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});\nfirebase.firestore().collection(\"pilots\").doc('pmitchell').set({\n    team: 1, \n    displayName: 'Pete Mitchell',\n    role: 'ace',\n    lastFlight: '01-01-2019',\n    })\n    .then(function(docRef) {\n    console.log(\"Document successfully written!\", docRef.id);\n    })\n    .catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});\n\nfirebase.firestore().collection(\"pilots\").doc('jdoolittle').set({\n    team: 1, \n    displayName: 'Jimmy Doolittle',\n    role: 'aviator',\n    lastFlight: '01-01-2019',\n    })\n    .then(function(docRef) {\n    console.log(\"Document successfully written!\", docRef.id);\n    })\n    .catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});\nfirebase.firestore().collection(\"pilots\").doc('cyeager').set({\n    team: 2, \n    displayName: 'Chuck Yeager',\n    role: 'test pilot',\n    lastFlight: '01-01-2019',\n    })\n    .then(function(docRef) {\n    console.log(\"Document successfully written!\", docRef.id);\n    })\n    .catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});\nfirebase.firestore().collection(\"pilots\").doc('owright').set({\n    team: 1, \n    displayName: 'Orvill Wright',\n    role: 'test pilot',\n    lastFlight: '01-01-2019',\n    })\n    .then(function(docRef) {\n    console.log(\"Document successfully written!\", docRef.id);\n    })\n    .catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});\nfirebase.firestore().collection(\"pilots\").doc('ehartmann').set({\n    team: 2,\n    displayName: 'Erich Hartmann',\n    role: 'ace',\n    lastFlight: '01-01-2019',\n    })\n    .then(function(docRef) {\n    console.log(\"Document successfully written!\", docRef.id);\n    })\n    .catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});\nfirebase.firestore().collection(\"pilots\").doc('wwright').set({\n    team: 2,\n    displayName: 'Wilbur Wright',\n    role: 'aviator',\n    lastFlight: '01-01-2019',\n    })\n    .then(function(docRef) {\n    console.log(\"Document successfully written!\", docRef.id);\n    })\n    .catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});*/\n\nvar ac = [472, 582, 479, 496, 428, 409]\nvar pilots = ['wwright', 'clindbergh', 'cyeager', 'aearhart', 'pmitchell', 'jdoolittle', 'ehartmann', 'owright'];\nvar config = ['NR FF', \"V FF\", \"DC6S\", \"DC0S\"];\nvar dco = ['ok','ok','ok','ok','ok','ok','warn', 'warn', 'bad'];\nvar details = ['SME', \"ALP2\"];\n\nfor (var i  = 0; i < 10 ; i ++) {\n    var pilot = pilots[getRandom(0, 7)];\n    var fo = pilots[getRandom(0, 7)];\n    var date = \"2019-07-\" + getRandom(18, 30);\n    var ac = ac[getRandom(0, 5)];\nvar newEvent = firebase.firestore().collection(\"events\").doc()\nnewEvent.set({\n    ac: {ac},\n    captain: {pilot},\n    config: config[getRandom(0, 3)],\n    date: {date},\n    dco: dco[getRandom(0, 8)],\n    details: details[getRandom(0, 1)],\n    fo: {fo},\n    mission: \"427 AU H\"+ getRandom(1, 8) + getRandom(0,6) + \"3 G0\" + getRandom(0, 9),\n    pri: getRandom(1, 6),\n    remarks: getRandom(1,6) == 4 ? 'Academic Shoot' : '',\n    meal: getRandom(1,15) == 6 ? true : false,\n    timeEnd: parseInt(getRandom(0, 23) + getRandom(0, 5) +'0'),\n    timeStart: parseInt(getRandom(0, 23) + getRandom(0, 5) +'0'),\n    type: \"flight\",\n    })\n.then(function(docRef) {\n    console.log(\"Document successfully written!\");})\n.catch(function(error) {\n    console.error(\"Error writing document: \", error);\n\n\n    let ref1 = firebase.firestore().collection('pilots').doc(pilot).collection('upcoming-events')\nlet ref2 = firebase.firestore().collection('pilots').doc(fo).collection('upcoming-events')\n\nfirebase.firestore().setAll(ref1, ref2)({\n    ac: ac[getRandom(0, 5)],\n    captain: pilot,\n    config: config[getRandom(0, 3)],\n    date: date,\n    dco: dco[getRandom(0, 8)],\n    details: details[getRandom(0, 1)],\n    fo: fo,\n    mission: \"427 AU H\"+ getRandom(1, 8) + getRandom(0,6) + \"3 G0\" + getRandom(0, 9),\n    pri: getRandom(1, 6),\n    remarks: getRandom(1,6) == 4 ? 'Academic Shoot' : '',\n    meal: getRandom(1,15) == 6 ? true : false,\n    timeEnd: parseInt(getRandom(0, 23) + getRandom(0, 5) +'0'),\n    timeStart: parseInt(getRandom(0, 23) + getRandom(0, 5) +'0'),\n    type: \"flight\",\n    })\n.then(function(docRef) {\n    console.log(\"Document successfully written!\");})\n.catch(function(error) {\n    console.error(\"Error writing document: \", error);\n})\n})}\n\n\n\n/*\nfirebase.firestore().collection(\"pilots\").doc('aearhart').set({\n    ac: ac[getRandom(0, 5)],\n    captain: pilots[getRandom(0, 7)],\n    config: config[getRandom(0, 3)],\n    date: \"2019-07-\" + getRandom(18, 30),\n    dco: dco[getRandom(0, 8)],\n    details: details[getRandom(0, 1)],\n    fo: pilots[getRandom(0,7)],\n    mission: \"427 AU H\"+ getRandom(1, 8) + getRandom(0,6) + \"3 G0\" + getRandom(0, 9),\n    pri: getRandom(1, 6),\n    remarks: getRandom(1,6) == 4 ? 'Academic Shoot' : '',\n    meal: getRandom(1,15) == 6 ? true : false,\n    timeEnd: parseInt(getRandom(0, 23) + getRandom(0, 5) +'0'),\n    timeStart: parseInt(getRandom(0, 23) + getRandom(0, 5) +'0'),\n    type: \"flight\",\n    })\n.then(function(docRef) {\n    console.log(\"Document successfully written!\");})\n.catch(function(error) {\n    console.error(\"Error writing document: \", error);\n})*/\n\n}\n\nexport default updateData;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"(function (l) {\n  function m() {}\n\n  function k(c, a) {\n    c = void 0 === c ? \"utf-8\" : c;\n    a = void 0 === a ? {\n      fatal: !1\n    } : a;\n    if (-1 === n.indexOf(c.toLowerCase())) throw new RangeError(\"Failed to construct 'TextDecoder': The encoding label provided ('\" + c + \"') is invalid.\");\n    if (a.fatal) throw Error(\"Failed to construct 'TextDecoder': the 'fatal' option is unsupported.\");\n  }\n\n  if (l.TextEncoder && l.TextDecoder) return !1;\n  var n = [\"utf-8\", \"utf8\", \"unicode-1-1-utf-8\"];\n  Object.defineProperty(m.prototype, \"encoding\", {\n    value: \"utf-8\"\n  });\n\n  m.prototype.encode = function (c, a) {\n    a = void 0 === a ? {\n      stream: !1\n    } : a;\n    if (a.stream) throw Error(\"Failed to encode: the 'stream' option is unsupported.\");\n    a = 0;\n\n    for (var g = c.length, f = 0, b = Math.max(32, g + (g >> 1) + 7), e = new Uint8Array(b >> 3 << 3); a < g;) {\n      var d = c.charCodeAt(a++);\n\n      if (55296 <= d && 56319 >= d) {\n        if (a < g) {\n          var h = c.charCodeAt(a);\n          56320 === (h & 64512) && (++a, d = ((d & 1023) << 10) + (h & 1023) + 65536);\n        }\n\n        if (55296 <= d && 56319 >= d) continue;\n      }\n\n      f + 4 > e.length && (b += 8, b *= 1 + a / c.length * 2, b = b >> 3 << 3, h = new Uint8Array(b), h.set(e), e = h);\n      if (0 === (d & 4294967168)) e[f++] = d;else {\n        if (0 === (d & 4294965248)) e[f++] = d >> 6 & 31 | 192;else if (0 === (d & 4294901760)) e[f++] = d >> 12 & 15 | 224, e[f++] = d >> 6 & 63 | 128;else if (0 === (d & 4292870144)) e[f++] = d >> 18 & 7 | 240, e[f++] = d >> 12 & 63 | 128, e[f++] = d >> 6 & 63 | 128;else continue;\n        e[f++] = d & 63 | 128;\n      }\n    }\n\n    return e.slice ? e.slice(0, f) : e.subarray(0, f);\n  };\n\n  Object.defineProperty(k.prototype, \"encoding\", {\n    value: \"utf-8\"\n  });\n  Object.defineProperty(k.prototype, \"fatal\", {\n    value: !1\n  });\n  Object.defineProperty(k.prototype, \"ignoreBOM\", {\n    value: !1\n  });\n\n  k.prototype.decode = function (c, a) {\n    a = void 0 === a ? {\n      stream: !1\n    } : a;\n    if (a.stream) throw Error(\"Failed to decode: the 'stream' option is unsupported.\");\n    a = c;\n    !(a instanceof Uint8Array) && a.buffer instanceof ArrayBuffer && (a = new Uint8Array(c.buffer));\n    c = 0;\n\n    for (var g = [], f = [];;) {\n      var b = c < a.length;\n\n      if (!b || c & 65536) {\n        f.push(String.fromCharCode.apply(null, g));\n        if (!b) return f.join(\"\");\n        g = [];\n        a = a.subarray(c);\n        c = 0;\n      }\n\n      b = a[c++];\n      if (0 === b) g.push(0);else if (0 === (b & 128)) g.push(b);else if (192 === (b & 224)) {\n        var e = a[c++] & 63;\n        g.push((b & 31) << 6 | e);\n      } else if (224 === (b & 240)) {\n        e = a[c++] & 63;\n        var d = a[c++] & 63;\n        g.push((b & 31) << 12 | e << 6 | d);\n      } else if (240 === (b & 248)) {\n        e = a[c++] & 63;\n        d = a[c++] & 63;\n        var h = a[c++] & 63;\n        b = (b & 7) << 18 | e << 12 | d << 6 | h;\n        65535 < b && (b -= 65536, g.push(b >>> 10 & 1023 | 55296), b = 56320 | b & 1023);\n        g.push(b);\n      }\n    }\n  };\n\n  l.TextEncoder = m;\n  l.TextDecoder = k;\n})(\"undefined\" !== typeof window ? window : \"undefined\" !== typeof global ? global : this);","map":null,"metadata":{},"sourceType":"script"}
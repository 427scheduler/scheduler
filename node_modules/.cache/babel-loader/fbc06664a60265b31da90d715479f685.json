{"ast":null,"code":"import XLSX from 'xlsx';\nimport firebase from \"./Firebase.js\";\nconst sheetHeader = [\"DAILY FLYING ORDER\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\nconst emptyCells = [\"\", \"\", \"\", \"\", \"\", \"\", \"\"];\nconst flightHeaders = [\"startTime\", \"endTime\", \"A/C\", \"BACKUP\", \"captain\", \"fo\", \"fe\", \"crew\", \"config\", \"details\", \"mission\", \"details\", \"config\", \"remarks\", \"pri\", \"meal\", \"DCO\"];\nvar date = [];\n\nfunction s2ab(s) {\n  var buf = new ArrayBuffer(s.length);\n  var view = new Uint8Array(buf);\n\n  for (var i = 0; i < s.length; i++) view[i] = s.charCodeAt(i) & 0xFF;\n\n  return buf;\n}\n\nconst download = (url, name) => {\n  let a = document.createElement('a');\n  a.href = url;\n  a.download = name;\n  a.click();\n  window.URL.revokeObjectURL(url);\n};\n\nfunction Export(ids, d) {\n  var day = [];\n  day.push([\"DATE: \" + d.date].concat(emptyCells).concat([\"SDO: \"]).concat(emptyCells).concat([\"\"]));\n  day.push([\"TWILIGHT CIV: \" + d.twilightciv].concat(emptyCells).concat([\"TWILIGHT NAUT: \" + d.twilightnaut]).concat(emptyCells).concat([\"\"]));\n  day.push([\"DAY FDO: \" + d.fdoday].concat(emptyCells).concat([\"NIGHT FDO: \" + d.fdonight]).concat(emptyCells).concat([\"\"]));\n  day.push([\"DESK SGT DAY: \" + d.desksgtday].concat(emptyCells).concat([\"DESK SGT NIGHT: \" + d.desksgtnight]).concat(emptyCells).concat([\"\"]));\n  day.push([\"MTP: \" + d.mtp].concat(emptyCells).concat([\"GROUND RUN: \" + d.groundrun]).concat(emptyCells).concat([\"\"])); //Gathering all data: \n\n  var flights = [flightHeaders];\n  firebase.firestore().collection(\"events\").where(firebase.firestore.FieldPath.documentId(), 'in', ids).get().then(querySnapshot => {\n    querySnapshot.docs.forEach(d => {\n      var d = d.data();\n      date = d.date;\n      flights.push([d.startTime, d.endTime, d.ac, d.backup, d.captain, d.fo, d.fe, d.crew, d.config, d.details, d.mission, d.details, d.config, d.remarks, d.pri, d.meal, d.dco]);\n    });\n    getFile(flights, day);\n  }).catch(function (error) {\n    console.log(\"Error getting data: \", error);\n  });\n}\n\nfunction getFile(flightData, dayData) {\n  var exportData = [sheetHeader].concat(dayData).concat(flightData);\n  console.log(exportData);\n  /* convert from array of arrays to worksheet */\n\n  var worksheet = XLSX.utils.aoa_to_sheet(exportData);\n  /* merge cells A1:B1 */\n\n  var merges = [XLSX.utils.decode_range(\"A1:Q1\"), XLSX.utils.decode_range(\"A2:H2\"), XLSX.utils.decode_range(\"I2:Q2\"), XLSX.utils.decode_range(\"A3:H3\"), XLSX.utils.decode_range(\"I3:Q3\"), XLSX.utils.decode_range(\"A4:H4\"), XLSX.utils.decode_range(\"I4:Q4\"), XLSX.utils.decode_range(\"A5:H5\"), XLSX.utils.decode_range(\"I5:Q5\"), XLSX.utils.decode_range(\"A6:H6\"), XLSX.utils.decode_range(\"I6:Q6\")];\n  /* add merges */\n\n  if (!worksheet['!merges']) worksheet['!merges'] = [];\n  merges.forEach(merge => {\n    worksheet['!merges'].push(merge);\n  });\n  /** formatting */\n\n  var wsrows = [{\n    hpt: 30\n  }];\n  worksheet['!rows'] = wsrows; // ws - worksheet\n\n  /** generate workbook */\n\n  var new_workbook = XLSX.utils.book_new();\n  XLSX.utils.book_append_sheet(new_workbook, worksheet, date);\n  /* write file */\n\n  const wbout = XLSX.write(new_workbook, {\n    type: 'binary',\n    bookType: \"xlsx\"\n  });\n  let url = window.URL.createObjectURL(new Blob([s2ab(wbout)], {\n    type: 'application/octet-stream'\n  }));\n  download(url, 'DailyFlyingOrder.xlsx');\n}\n\nexport default Export;","map":{"version":3,"sources":["/Users/jenny/Desktop/SOAS/scheduler/src/Export.js"],"names":["XLSX","firebase","sheetHeader","emptyCells","flightHeaders","date","s2ab","s","buf","ArrayBuffer","length","view","Uint8Array","i","charCodeAt","download","url","name","a","document","createElement","href","click","window","URL","revokeObjectURL","Export","ids","d","day","push","concat","twilightciv","twilightnaut","fdoday","fdonight","desksgtday","desksgtnight","mtp","groundrun","flights","firestore","collection","where","FieldPath","documentId","get","then","querySnapshot","docs","forEach","data","startTime","endTime","ac","backup","captain","fo","fe","crew","config","details","mission","remarks","pri","meal","dco","getFile","catch","error","console","log","flightData","dayData","exportData","worksheet","utils","aoa_to_sheet","merges","decode_range","merge","wsrows","hpt","new_workbook","book_new","book_append_sheet","wbout","write","type","bookType","createObjectURL","Blob"],"mappings":"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","sourcesContent":["import XLSX from 'xlsx';\nimport firebase from \"./Firebase.js\";\n\nconst sheetHeader =[\"DAILY FLYING ORDER\", \"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"];\nconst emptyCells = [\"\",\"\",\"\",\"\",\"\",\"\",\"\"];\nconst flightHeaders = [\"startTime\",\"endTime\",\"A/C\",\"BACKUP\",\"captain\",\"fo\",\"fe\",\"crew\",\"config\",\"details\",\"mission\",\"details\",\"config\",\"remarks\",\"pri\",\"meal\",\"DCO\"];\nvar date = [];\n\nfunction s2ab(s) {\n    var buf = new ArrayBuffer(s.length);\n    var view = new Uint8Array(buf);\n    for (var i=0; i<s.length; i++) view[i] = s.charCodeAt(i) & 0xFF;\n    return buf;\n}\n\nconst download = (url, name) => {\n    let a = document.createElement('a')\n    a.href = url\n    a.download = name\n    a.click()\n\n    window.URL.revokeObjectURL(url)\n}\n\nfunction Export(ids, d) {\n    var day = [];\n    day.push([\"DATE: \" + d.date].concat(emptyCells).concat([\"SDO: \"]).concat(emptyCells).concat([\"\"]));\n    day.push([\"TWILIGHT CIV: \" + d.twilightciv].concat(emptyCells).concat([\"TWILIGHT NAUT: \"+d.twilightnaut]).concat(emptyCells).concat([\"\"]));\n    day.push([\"DAY FDO: \" + d.fdoday].concat(emptyCells).concat([\"NIGHT FDO: \"+d.fdonight]).concat(emptyCells).concat([\"\"]));\n    day.push([\"DESK SGT DAY: \" + d.desksgtday].concat(emptyCells).concat([\"DESK SGT NIGHT: \"+d.desksgtnight]).concat(emptyCells).concat([\"\"]));\n    day.push([\"MTP: \" + d.mtp].concat(emptyCells).concat([\"GROUND RUN: \"+d.groundrun]).concat(emptyCells).concat([\"\"]));\n                        \n    //Gathering all data: \n    var flights = [flightHeaders];\n        firebase.firestore().collection(\"events\").where(firebase.firestore.FieldPath.documentId(), 'in', ids)\n            .get()\n            .then((querySnapshot) => {\n                querySnapshot.docs.forEach((d) => {\n                    var d = d.data();\n                    date = d.date;\n                    flights.push([\n                        d.startTime,\n                        d.endTime,\n                        d.ac,\n                        d.backup,\n                        d.captain,\n                        d.fo,\n                        d.fe,\n                        d.crew,\n                        d.config,\n                        d.details,\n                        d.mission,\n                        d.details,\n                        d.config,\n                        d.remarks,\n                        d.pri,\n                        d.meal,\n                        d.dco,]);\n                    })\n\n                    getFile(flights, day);\n                })\n            \n            .catch(function(error) {\n                console.log(\"Error getting data: \", error);\n            });\n    \n}\n\nfunction getFile(flightData, dayData) {\n    var exportData = [sheetHeader].concat(dayData).concat(flightData);\n    console.log(exportData);\n    /* convert from array of arrays to worksheet */\n    var worksheet = XLSX.utils.aoa_to_sheet(exportData);\n\n    /* merge cells A1:B1 */\n    var merges = [XLSX.utils.decode_range(\"A1:Q1\"), XLSX.utils.decode_range(\"A2:H2\"),XLSX.utils.decode_range(\"I2:Q2\"), XLSX.utils.decode_range(\"A3:H3\"),XLSX.utils.decode_range(\"I3:Q3\"), XLSX.utils.decode_range(\"A4:H4\"),XLSX.utils.decode_range(\"I4:Q4\"), XLSX.utils.decode_range(\"A5:H5\"),XLSX.utils.decode_range(\"I5:Q5\"), XLSX.utils.decode_range(\"A6:H6\"),XLSX.utils.decode_range(\"I6:Q6\"), ];\n\n    /* add merges */\n    if(!worksheet['!merges']) worksheet['!merges'] = [];\n    merges.forEach((merge) => {\n        worksheet['!merges'].push(merge);\n    })\n\n    /** formatting */\n    var wsrows =  [\n        {hpt: 30}, // row 1 sets to the height of 30 in pixels\n      ];\n\n    worksheet['!rows'] = wsrows; // ws - worksheet\n\n    /** generate workbook */\n    var new_workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(new_workbook, worksheet, date);\n\n    /* write file */\n    const wbout = XLSX.write(new_workbook, {type:'binary', bookType:\"xlsx\"});\n\n    let url = window.URL.createObjectURL(new Blob([s2ab(wbout)], {type:'application/octet-stream'}))\n\n    download(url, 'DailyFlyingOrder.xlsx');\n}\n\nexport default Export;\n\n"]},"metadata":{},"sourceType":"module"}
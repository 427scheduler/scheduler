{"ast":null,"code":"import firebase from \"./Firebase.js\"; // Add a new document in collection \"dates\"\n\n/*for (var i = 1; i <= 30; i++) {\n    var a = i < 10 ? '0' : '';\n    var date = '2020-04-'  + a + i ;\n const ref = firebase.firestore().collection(\"dates\").doc(date);\nconsole.log(date);\nref.get()\n    .then((docSnapshot) => {if (!docSnapshot.exists)\n    { ref.set({\n        twilight: {civil: null, naut: null},\n        dutymtp: null,\n        oic: null,\n        groundrun: null,\n        desksgt: {day: null, night: null},\n        fdo: {day: null, night: null}\n    })\n    .then(()=> {\n        console.log(\"Date successfully written!\");\n    })\n    .catch(function(error) {\n        console.error(\"Error writing date: \", error);\n    });\n}});\n}*/\n\nfunction getRandom(x, y) {\n  var min = Math.ceil(x);\n  var max = Math.floor(y);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction updateData() {\n  /*** \n  firebase.firestore().collection(\"pilots\").doc('aearhart').set({\n  team: 1, \n  role: 'aviator',\n  lastFlight: '01-01-2019',\n  })\n  .then(function(docRef) {\n  console.log(\"Document successfully written!\", docRef.id);\n  })\n  .catch(function(error) {\n  console.error(\"Error writing document: \", error);\n  });\n  firebase.firestore().collection(\"pilots\").doc('clindbergh').set({\n  team: 1, \n  role: 'aviator',\n  lastFlight: '01-01-2019',\n  })\n  .then(function(docRef) {\n  console.log(\"Document successfully written!\", docRef.id);\n  })\n  .catch(function(error) {\n  console.error(\"Error writing document: \", error);\n  });\n  firebase.firestore().collection(\"pilots\").doc('pmitchell').set({\n  team: 1, \n  displayName: 'Pete Mitchell',\n  role: 'ace',\n  lastFlight: '01-01-2019',\n  })\n  .then(function(docRef) {\n  console.log(\"Document successfully written!\", docRef.id);\n  })\n  .catch(function(error) {\n  console.error(\"Error writing document: \", error);\n  });\n  firebase.firestore().collection(\"pilots\").doc('jdoolittle').set({\n  team: 1, \n  displayName: 'Jimmy Doolittle',\n  role: 'aviator',\n  lastFlight: '01-01-2019',\n  })\n  .then(function(docRef) {\n  console.log(\"Document successfully written!\", docRef.id);\n  })\n  .catch(function(error) {\n  console.error(\"Error writing document: \", error);\n  });\n  firebase.firestore().collection(\"pilots\").doc('cyeager').set({\n  team: 2, \n  displayName: 'Chuck Yeager',\n  role: 'test pilot',\n  lastFlight: '01-01-2019',\n  })\n  .then(function(docRef) {\n  console.log(\"Document successfully written!\", docRef.id);\n  })\n  .catch(function(error) {\n  console.error(\"Error writing document: \", error);\n  });\n  firebase.firestore().collection(\"pilots\").doc('owright').set({\n  team: 1, \n  displayName: 'Orvill Wright',\n  role: 'test pilot',\n  lastFlight: '01-01-2019',\n  })\n  .then(function(docRef) {\n  console.log(\"Document successfully written!\", docRef.id);\n  })\n  .catch(function(error) {\n  console.error(\"Error writing document: \", error);\n  });\n  firebase.firestore().collection(\"pilots\").doc('ehartmann').set({\n  team: 2,\n  displayName: 'Erich Hartmann',\n  role: 'ace',\n  lastFlight: '01-01-2019',\n  })\n  .then(function(docRef) {\n  console.log(\"Document successfully written!\", docRef.id);\n  })\n  .catch(function(error) {\n  console.error(\"Error writing document: \", error);\n  });\n  firebase.firestore().collection(\"pilots\").doc('wwright').set({\n  team: 2,\n  displayName: 'Wilbur Wright',\n  role: 'aviator',\n  lastFlight: '01-01-2019',\n  })\n  .then(function(docRef) {\n  console.log(\"Document successfully written!\", docRef.id);\n  })\n  .catch(function(error) {\n  console.error(\"Error writing document: \", error);\n  });*/\n\n  /** \n  \n  var ac = [472, 582, 479, 496, 428, 409]\n  var pilots = ['wwright', 'clindbergh', 'cyeager', 'aearhart', 'pmitchell', 'jdoolittle', 'ehartmann', 'owright'];\n  var config = ['NR FF', \"V FF\", \"DC6S\", \"DC0S\"];\n  var dco = ['ok','ok','ok','ok','ok','ok','warn', 'warn', 'bad'];\n  var details = ['SME', \"ALP2\"];\n  \n  for (var i  = 0; i < 10 ; i ++) {\n      var pilot = pilots[getRandom(0, 7)];\n      var fo = pilots[getRandom(0, 7)];\n      var date = \"2019-07-\" + getRandom(18, 30);\n      var acval = ac[getRandom(0, 5)];\n      var configval = config[getRandom(0, 3)];\n      var detail = details[getRandom(0, 1)];\n      var end=  parseInt(getRandom(0, 23) + getRandom(0, 5) +'0');\n      var start = parseInt(getRandom(Math.floor(end/100), 23) + getRandom(0, 5) +'0');\n  var newEvent = firebase.firestore().collection(\"events\").doc();\n  var newUpcomingEvent = firebase.firestore().collection('pilots').doc(pilot).collection('upcoming-events').doc();\n  \n  \n  \n  newUpcomingEvent.set({\n      ac: acval,\n      captain: pilot,\n      flightid: newEvent.id,\n      config: configval,\n      date: date,\n      fo: fo,\n      details: detail,\n      endTime: end,\n      startTime: start,\n      })\n  .then(function(docRef) {\n      console.log(\"Document successfully written!\");})\n  .catch(function(error) {\n      console.error(\"Error writing document: \", error);\n  })\n  \n  newEvent.set({\n      ac: acval,\n      captain: pilot,\n      config: configval,\n      date: date,\n      dco: dco[getRandom(0, 8)],\n      details: detail,\n      fo: fo,\n      mission: \"427 AU H\"+ getRandom(1, 8) + getRandom(0,6) + \"3 G0\" + getRandom(0, 9),\n      pri: getRandom(1, 6),\n      remarks: getRandom(1,6) == 4 ? 'Academic Shoot' : '',\n      meal: getRandom(1,15) == 6 ? true : false,\n      endTime: end,\n      startTime: start,\n      type: \"flight\",\n      })\n  .then(function(docRef) {\n      console.log(\"Document successfully written!\");})\n  .catch(function(error) {\n      console.error(\"Error writing document: \", error);\n  })\n  \n  \n  \n  }\n  */\n\n  /*\n  firebase.firestore().collection(\"pilots\").doc('aearhart').set({\n      ac: ac[getRandom(0, 5)],\n      captain: pilots[getRandom(0, 7)],\n      config: config[getRandom(0, 3)],\n      date: \"2019-07-\" + getRandom(18, 30),\n      dco: dco[getRandom(0, 8)],\n      details: details[getRandom(0, 1)],\n      fo: pilots[getRandom(0,7)],\n      mission: \"427 AU H\"+ getRandom(1, 8) + getRandom(0,6) + \"3 G0\" + getRandom(0, 9),\n      pri: getRandom(1, 6),\n      remarks: getRandom(1,6) == 4 ? 'Academic Shoot' : '',\n      meal: getRandom(1,15) == 6 ? true : false,\n      endTime: parseInt(getRandom(0, 23) + getRandom(0, 5) +'0'),\n      startTime: parseInt(getRandom(0, 23) + getRandom(0, 5) +'0'),\n      type: \"flight\",\n      })\n  .then(function(docRef) {\n      console.log(\"Document successfully written!\");})\n  .catch(function(error) {\n      console.error(\"Error writing document: \", error);\n  })*/\n\n  /**************************** MASS FLIGHT CREEATION  ****************************/\n  var ac = [472, 582, 479, 496, 428, 409];\n  var pilots = ['wwright', 'clindbergh', 'cyeager', 'aearhart', 'pmitchell', 'jdoolittle', 'ehartmann', 'owright', '', '', '', '', '', '', ''];\n  var config = ['NR FF', \"V FF\", \"DC6S\", \"DC0S\"];\n  var dco = ['ok', 'ok', 'ok', 'ok', 'warn', 'warn', 'bad', 'ok', 'ok'];\n  var details = ['SME', \"ALP2\"];\n  var start = [130, 250, 320, 430, 520, 510, 720, 800, 930, 1020, 1110, 1130, 1230, 1310, 1350, 1420, 1530, 1720, 1820, 1920, 2040];\n  var l = [60, 90, 120, 120, 120, 150, 180, 210, 60, 90, 90, 90, 90, 90, 120, 120, 120, 150, 180];\n  var state = {};\n\n  function firebaseSetBool(pilot, date) {\n    var flightDate = 'flights.' + date;\n    firebase.firestore().collection(\"pilots\").doc(pilot).update({\n      [flightDate]: true\n    }).then(function () {\n      console.log(\"Boolean successfully set for pilot\");\n    }).catch(function (error) {\n      console.error(\"Error setting flight boolean\", error);\n    });\n  }\n\n  for (var i = 0; i < 10; i++) {\n    var s = start[getRandom(0, 20)];\n    var e = s + l[getRandom(0, 18)];\n    state.captain = pilots[getRandom(0, 7)];\n    state.fo = pilots[getRandom(0, 7)];\n    state.date = \"2020-04-\" + getRandom(1, 18);\n    state.ac = ac[getRandom(0, 5)];\n    state.mission = \"427 AU H\" + getRandom(1, 8) + getRandom(0, 6) + \"3 G0\" + getRandom(0, 9);\n    state.fe = pilots[getRandom(0, 13)];\n    state.remarks = getRandom(1, 6) == 4 ? 'Academic Shoot' : '';\n    state.crew = pilots[getRandom(0, 13)];\n    state.dco = dco[getRandom(0, 8)];\n    state.pri = getRandom(1, 6);\n    state.config = config[getRandom(0, 3)];\n    state.details = details[getRandom(0, 1)];\n    state.startTime = (s < 1000 ? '0' : '') + s.toString();\n    state.type = \"flight\";\n    state.endTime = (e < 1000 ? '0' : '') + e.toString();\n    var newEvent = firebase.firestore().collection(\"events\").doc();\n    newEvent.set(state).then(function () {\n      console.log(\"Event successfully added to events!\");\n    }).catch(function (error) {\n      console.error(\"Error adding event: \", error);\n    });\n    var updates = {};\n    updates['events.' + state.captain] = firebase.firestore.FieldValue.arrayUnion({\n      'type': 'flight',\n      'startTime': state.startTime,\n      'endTime': state.endTime,\n      'id': newEvent.id\n    });\n    updates['events.' + state.fo] = firebase.firestore.FieldValue.arrayUnion({\n      'type': 'flight',\n      'startTime': state.startTime,\n      'endTime': state.endTime,\n      'id': newEvent.id\n    });\n    firebaseSetBool(state.captain, state.date);\n    firebaseSetBool(state.fo, state.date);\n    var newUpcomingEvents = [firebase.firestore().collection('pilots').doc(state.captain).collection('upcoming-events').doc(), firebase.firestore().collection('pilots').doc(state.fo).collection('upcoming-events').doc()];\n\n    if (state.fe) {\n      updates['events.' + state.fe] = firebase.firestore.FieldValue.arrayUnion({\n        'type': 'flight',\n        'startTime': state.startTime,\n        'endTime': state.endTime,\n        'id': newEvent.id\n      });\n      newUpcomingEvents.push(firebase.firestore().collection('pilots').doc(state.fe).collection('upcoming-events').doc());\n      firebaseSetBool(state.fe, state.date);\n    }\n\n    if (state.crew) {\n      updates['events.' + state.crew] = firebase.firestore.FieldValue.arrayUnion({\n        'type': 'flight',\n        'startTime': state.startTime,\n        'endTime': state.endTime,\n        'id': newEvent.id\n      });\n      newUpcomingEvents.push(firebase.firestore().collection('pilots').doc(state.crew).collection('upcoming-events').doc());\n      firebaseSetBool(state.crew, state.date);\n    }\n\n    const ref = firebase.firestore().collection(\"dates\").doc(state.date);\n    ref.get().then(docSnapshot => {\n      if (!docSnapshot.exists) {\n        ref.set({\n          twilight: {\n            civil: null,\n            naut: null\n          },\n          dutymtp: null,\n          oic: null,\n          groundrun: null,\n          desksgt: {\n            day: null,\n            night: null\n          },\n          fdo: {\n            day: null,\n            night: null\n          }\n        }).then(() => {\n          console.log(\"Date successfully written!\");\n        }).catch(function (error) {\n          console.error(\"Error writing date: \", error);\n        });\n      }\n    });\n    firebase.firestore().collection(\"dates\").doc(state.date).update(updates).then(function () {\n      console.log(\"Event successfully added to dates!\");\n    }).catch(function (error) {\n      console.error(\"Error writing document: \", error);\n    });\n    console.log(newUpcomingEvents);\n    newUpcomingEvents.forEach(x => {\n      x.set({\n        ac: state.ac,\n        captain: state.captain,\n        flightid: newEvent.id,\n        config: state.config,\n        date: state.date,\n        fo: state.fo,\n        fe: state.fe,\n        crew: state.crew,\n        details: state.details,\n        endTime: state.endTime,\n        startTime: state.startTime\n      }).then(function () {\n        console.log(\"Event successfully added to pilots!\");\n      }).catch(function (error) {\n        console.error(\"Error writing document: \", error);\n      });\n    });\n    firebase.firestore().collection(\"dates\").doc(state.date).update(updates).then(function () {\n      console.log(\"Event successfully added to dates!\");\n    }).catch(function (error) {\n      console.error(\"Error writing document: \", error);\n    });\n  }\n  /*************************************************     MASS MEETING UPDATES **************************************************/\n\n  /*\n  var l = [30, 60, 60, 60, 90, 90, 90, 90, 90, 90, 120, 120, 120, 150, 180]\n  var pilots = ['wwright', 'clindbergh', 'cyeager', 'aearhart', 'pmitchell', 'jdoolittle', 'ehartmann', 'owright'];\n  var start = [800, 900, 1020, 1150, 1130, 1240, 1320, 1340, 1420, 1530];\n  var location = ['', \"\", '', 'Classroom A', 'Room 201', \"Courtyard\", '', '', ''];\n  var details = ['Strategy Discussion', \"Sync with CO\", \"Lunch Discussion\", \"Review Scheduler\"];\n  var state = {};\n  for (var i  = 0; i < 5 ; i ++) {\n      var s = start[getRandom(0,9)];\n     var e = s + l[getRandom(0,14)];\n      state.title =  details[getRandom(0, 3)];\n     state.type= \"meeting\";\n     state.date= \"2020-04-\" + getRandom(1, 30);\n     state.startTime= (s < 1000 ? '0': '') + s.toString();\n     state.endTime= (e < 1000 ? '0': '') + e.toString();\n     state.location= location[getRandom(0, 8)]; \n     state.confLink= \"\";\n     state.notes= \"\";\n     state.userid=pilots[getRandom(0, 7)];\n     console.log(state);\n  \n  console.log(state);\n  var newEvent = firebase.firestore().collection(\"events\").doc()\n  newEvent.set(state)\n  .then(function() {\n     console.log(\"Event successfully added to events!\");})\n  .catch(function(error) {\n     console.error(\"Error adding event: \", error);\n  });\n  var field = 'events.'+state.userid;\n  firebase.firestore().collection(\"dates\").doc(state.date).update({\n     [field]: firebase.firestore.FieldValue.arrayUnion({'type':'meeting', 'startTime': state.startTime, 'endTime': state.endTime, 'id':newEvent.id})\n     })\n  .then(function() {\n     console.log(\"Event successfully added to dates!\");})\n  .catch(function(error) {\n     console.log({'type':'meeting', 'startTime': state.startTime, 'endTime': state.endTime, 'id':newEvent.id});\n     console.error(\"Error writing document: \", error);\n  })}\n  */\n\n  /*************************************************     MASS APT UPDATES **************************************************/\n\n  /*\n  var l = [30,30, 60, 60, 60, 90, 90, 90, 90, 90, 120, 120, 120, 150, 180]\n  var pilots = ['wwright', 'clindbergh', 'cyeager', 'aearhart', 'pmitchell', 'jdoolittle', 'ehartmann', 'owright'];\n  var start = [800, 900, 1020, 1150, 1130, 1240, 1320, 1340, 1420, 1530];\n  var location = ['', \"\", '', 'Classroom A', 'Room 201', \"Courtyard\", '', '', ''];\n  var details = ['Medical', \"Dentist\", \"Course\", \"Temp Leave\"];\n  var event = ['apt', 'leave', 'pers', 'yl'];\n  var state = {};\n  \n  for (var i  = 0; i < 8 ; i ++) {\n  \n      state.title =  details[getRandom(0, 3)];\n      state.type=  \"apt\";\n      var s = start[getRandom(0,9)];\n      var e = s + l[getRandom(0,14)];\n      state.date= \"2020-04-\" + getRandom(1, 30);\n      \n      state.startTime= (s < 1000 ? '0': '') + s.toString();\n      state.endTime= (e < 1000 ? '0': '') + e.toString();\n      state.event = event[getRandom(0, 3)];\n      state.notes= \"\";\n      state.location=location[getRandom(0, 8)];\n      state.userid=pilots[getRandom(0, 7)];\n      console.log(state);\n  \n  \n  \n  console.log(state);\n  var newEvent = firebase.firestore().collection(\"events\").doc()\n  newEvent.set(state)\n  .then(function() {\n      console.log(\"Event successfully added to events!\");})\n  .catch(function(error) {\n      console.error(\"Error adding event: \", error);\n  });\n  \n  var field = 'events.'+state.userid;\n  firebase.firestore().collection(\"dates\").doc(state.date).update({\n      [field]: firebase.firestore.FieldValue.arrayUnion({'type':'apt', 'startTime': state.startTime, 'endTime': state.endTime, 'id':newEvent.id})\n      })\n  .then(function() {\n      console.log(\"Event successfully added to dates!\");})\n  .catch(function(error) {\n      console.error(\"Error writing document: \", error);\n  })}\n  \n  */\n\n}\n\nexport default updateData;","map":{"version":3,"sources":["/Users/jenny/Desktop/SOAS/scheduler/src/insertDataTest.js"],"names":["firebase","getRandom","x","y","min","Math","ceil","max","floor","random","updateData","ac","pilots","config","dco","details","start","l","state","firebaseSetBool","pilot","date","flightDate","firestore","collection","doc","update","then","console","log","catch","error","i","s","e","captain","fo","mission","fe","remarks","crew","pri","startTime","toString","type","endTime","newEvent","set","updates","FieldValue","arrayUnion","id","newUpcomingEvents","push","ref","get","docSnapshot","exists","twilight","civil","naut","dutymtp","oic","groundrun","desksgt","day","night","fdo","forEach","flightid"],"mappings":"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","sourcesContent":["import firebase from \"./Firebase.js\";\n\n    // Add a new document in collection \"dates\"\n    /*for (var i = 1; i <= 30; i++) {\n        var a = i < 10 ? '0' : '';\n        var date = '2020-04-'  + a + i ;\n\n    const ref = firebase.firestore().collection(\"dates\").doc(date);\n    console.log(date);\n    ref.get()\n        .then((docSnapshot) => {if (!docSnapshot.exists)\n        { ref.set({\n            twilight: {civil: null, naut: null},\n            dutymtp: null,\n            oic: null,\n            groundrun: null,\n            desksgt: {day: null, night: null},\n            fdo: {day: null, night: null}\n        })\n        .then(()=> {\n            console.log(\"Date successfully written!\");\n        })\n        .catch(function(error) {\n            console.error(\"Error writing date: \", error);\n        });\n    }});\n}*/\n\nfunction getRandom(x, y) {\n    var min = Math.ceil(x);\n    var max = Math.floor(y);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n\nfunction updateData() {\n    /*** \nfirebase.firestore().collection(\"pilots\").doc('aearhart').set({\n    team: 1, \n    role: 'aviator',\n    lastFlight: '01-01-2019',\n})\n    .then(function(docRef) {\n    console.log(\"Document successfully written!\", docRef.id);\n    })\n    .catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});\nfirebase.firestore().collection(\"pilots\").doc('clindbergh').set({\n    team: 1, \n    role: 'aviator',\n    lastFlight: '01-01-2019',\n    })\n    .then(function(docRef) {\n    console.log(\"Document successfully written!\", docRef.id);\n    })\n    .catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});\nfirebase.firestore().collection(\"pilots\").doc('pmitchell').set({\n    team: 1, \n    displayName: 'Pete Mitchell',\n    role: 'ace',\n    lastFlight: '01-01-2019',\n    })\n    .then(function(docRef) {\n    console.log(\"Document successfully written!\", docRef.id);\n    })\n    .catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});\n\nfirebase.firestore().collection(\"pilots\").doc('jdoolittle').set({\n    team: 1, \n    displayName: 'Jimmy Doolittle',\n    role: 'aviator',\n    lastFlight: '01-01-2019',\n    })\n    .then(function(docRef) {\n    console.log(\"Document successfully written!\", docRef.id);\n    })\n    .catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});\nfirebase.firestore().collection(\"pilots\").doc('cyeager').set({\n    team: 2, \n    displayName: 'Chuck Yeager',\n    role: 'test pilot',\n    lastFlight: '01-01-2019',\n    })\n    .then(function(docRef) {\n    console.log(\"Document successfully written!\", docRef.id);\n    })\n    .catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});\nfirebase.firestore().collection(\"pilots\").doc('owright').set({\n    team: 1, \n    displayName: 'Orvill Wright',\n    role: 'test pilot',\n    lastFlight: '01-01-2019',\n    })\n    .then(function(docRef) {\n    console.log(\"Document successfully written!\", docRef.id);\n    })\n    .catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});\nfirebase.firestore().collection(\"pilots\").doc('ehartmann').set({\n    team: 2,\n    displayName: 'Erich Hartmann',\n    role: 'ace',\n    lastFlight: '01-01-2019',\n    })\n    .then(function(docRef) {\n    console.log(\"Document successfully written!\", docRef.id);\n    })\n    .catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});\nfirebase.firestore().collection(\"pilots\").doc('wwright').set({\n    team: 2,\n    displayName: 'Wilbur Wright',\n    role: 'aviator',\n    lastFlight: '01-01-2019',\n    })\n    .then(function(docRef) {\n    console.log(\"Document successfully written!\", docRef.id);\n    })\n    .catch(function(error) {\n    console.error(\"Error writing document: \", error);\n});*/\n\n\n/** \n\nvar ac = [472, 582, 479, 496, 428, 409]\nvar pilots = ['wwright', 'clindbergh', 'cyeager', 'aearhart', 'pmitchell', 'jdoolittle', 'ehartmann', 'owright'];\nvar config = ['NR FF', \"V FF\", \"DC6S\", \"DC0S\"];\nvar dco = ['ok','ok','ok','ok','ok','ok','warn', 'warn', 'bad'];\nvar details = ['SME', \"ALP2\"];\n\nfor (var i  = 0; i < 10 ; i ++) {\n    var pilot = pilots[getRandom(0, 7)];\n    var fo = pilots[getRandom(0, 7)];\n    var date = \"2019-07-\" + getRandom(18, 30);\n    var acval = ac[getRandom(0, 5)];\n    var configval = config[getRandom(0, 3)];\n    var detail = details[getRandom(0, 1)];\n    var end=  parseInt(getRandom(0, 23) + getRandom(0, 5) +'0');\n    var start = parseInt(getRandom(Math.floor(end/100), 23) + getRandom(0, 5) +'0');\nvar newEvent = firebase.firestore().collection(\"events\").doc();\nvar newUpcomingEvent = firebase.firestore().collection('pilots').doc(pilot).collection('upcoming-events').doc();\n\n\n\nnewUpcomingEvent.set({\n    ac: acval,\n    captain: pilot,\n    flightid: newEvent.id,\n    config: configval,\n    date: date,\n    fo: fo,\n    details: detail,\n    endTime: end,\n    startTime: start,\n    })\n.then(function(docRef) {\n    console.log(\"Document successfully written!\");})\n.catch(function(error) {\n    console.error(\"Error writing document: \", error);\n})\n\nnewEvent.set({\n    ac: acval,\n    captain: pilot,\n    config: configval,\n    date: date,\n    dco: dco[getRandom(0, 8)],\n    details: detail,\n    fo: fo,\n    mission: \"427 AU H\"+ getRandom(1, 8) + getRandom(0,6) + \"3 G0\" + getRandom(0, 9),\n    pri: getRandom(1, 6),\n    remarks: getRandom(1,6) == 4 ? 'Academic Shoot' : '',\n    meal: getRandom(1,15) == 6 ? true : false,\n    endTime: end,\n    startTime: start,\n    type: \"flight\",\n    })\n.then(function(docRef) {\n    console.log(\"Document successfully written!\");})\n.catch(function(error) {\n    console.error(\"Error writing document: \", error);\n})\n\n\n\n}\n*/\n\n\n/*\nfirebase.firestore().collection(\"pilots\").doc('aearhart').set({\n    ac: ac[getRandom(0, 5)],\n    captain: pilots[getRandom(0, 7)],\n    config: config[getRandom(0, 3)],\n    date: \"2019-07-\" + getRandom(18, 30),\n    dco: dco[getRandom(0, 8)],\n    details: details[getRandom(0, 1)],\n    fo: pilots[getRandom(0,7)],\n    mission: \"427 AU H\"+ getRandom(1, 8) + getRandom(0,6) + \"3 G0\" + getRandom(0, 9),\n    pri: getRandom(1, 6),\n    remarks: getRandom(1,6) == 4 ? 'Academic Shoot' : '',\n    meal: getRandom(1,15) == 6 ? true : false,\n    endTime: parseInt(getRandom(0, 23) + getRandom(0, 5) +'0'),\n    startTime: parseInt(getRandom(0, 23) + getRandom(0, 5) +'0'),\n    type: \"flight\",\n    })\n.then(function(docRef) {\n    console.log(\"Document successfully written!\");})\n.catch(function(error) {\n    console.error(\"Error writing document: \", error);\n})*/\n\n\n\n\n/**************************** MASS FLIGHT CREEATION  ****************************/\n\nvar ac = [472, 582, 479, 496, 428, 409]\nvar pilots = ['wwright', 'clindbergh', 'cyeager', 'aearhart', 'pmitchell', 'jdoolittle', 'ehartmann', 'owright', '', '', '', '', '', '', ''];\nvar config = ['NR FF', \"V FF\", \"DC6S\", \"DC0S\"];\nvar dco = ['ok','ok','ok','ok','warn', 'warn', 'bad', 'ok','ok'];\nvar details = ['SME', \"ALP2\"];\nvar start = [130, 250, 320, 430, 520, 510, 720, 800, 930, 1020, 1110, 1130, 1230, 1310, 1350, 1420, 1530, 1720, 1820, 1920, 2040];\nvar l = [60,90, 120, 120, 120, 150, 180, 210, 60,  90, 90, 90, 90, 90, 120, 120, 120, 150, 180]\nvar state = {};\n\nfunction firebaseSetBool(pilot, date) {\n    var flightDate = 'flights.' + date;\n    firebase.firestore().collection(\"pilots\").doc(pilot).update({[flightDate]: true})\n    .then(function() {\n        console.log(\"Boolean successfully set for pilot\");})\n    .catch(function(error) {\n        console.error(\"Error setting flight boolean\", error);\n    })\n}\n\nfor (var i  = 0; i < 10 ; i ++) {\n    var s = start[getRandom(0,20)];\n    var e = s + l[getRandom(0,18)];\n    state.captain = pilots[getRandom(0, 7)];\n    state.fo = pilots[getRandom(0, 7)];\n    state.date = \"2020-04-\"+ getRandom(1, 18);\n    state.ac = ac[getRandom(0, 5)];\n    state.mission= \"427 AU H\"+ getRandom(1, 8) + getRandom(0,6) + \"3 G0\" + getRandom(0, 9);\n    state.fe = pilots[getRandom(0, 13)];\n    state.remarks= getRandom(1,6) == 4 ? 'Academic Shoot' : '';\n    state.crew = pilots[getRandom(0, 13)];\n    state.dco = dco[getRandom(0,8)];\n    state.pri = getRandom(1, 6);\n    state.config = config[getRandom(0, 3)];\n    state.details = details[getRandom(0, 1)];\n    state.startTime= (s < 1000 ? '0': '') + s.toString();\n    state.type=\"flight\";\n    state.endTime= (e < 1000 ? '0': '') + e.toString();\n\n    var newEvent = firebase.firestore().collection(\"events\").doc();\n    newEvent.set(state)\n    .then(function() {\n        console.log(\"Event successfully added to events!\");})\n    .catch(function(error) {\n        console.error(\"Error adding event: \", error);\n    });\n\n    var updates = {};\n    updates['events.'+state.captain] = firebase.firestore.FieldValue.arrayUnion({'type':'flight', 'startTime': state.startTime, 'endTime': state.endTime, 'id':newEvent.id});\n    updates['events.'+state.fo] = firebase.firestore.FieldValue.arrayUnion({'type':'flight', 'startTime': state.startTime, 'endTime': state.endTime, 'id':newEvent.id});\n    firebaseSetBool(state.captain, state.date);\n    firebaseSetBool(state.fo, state.date);\n    var newUpcomingEvents = [firebase.firestore().collection('pilots').doc(state.captain).collection('upcoming-events').doc(),\n    firebase.firestore().collection('pilots').doc(state.fo).collection('upcoming-events').doc()];\n\n    if (state.fe) {\n        updates['events.'+state.fe] = firebase.firestore.FieldValue.arrayUnion({'type':'flight', 'startTime': state.startTime, 'endTime': state.endTime, 'id':newEvent.id});\n        newUpcomingEvents.push(firebase.firestore().collection('pilots').doc(state.fe).collection('upcoming-events').doc());\n        firebaseSetBool(state.fe, state.date);\n    }\n    if (state.crew) {\n        updates['events.'+state.crew] = firebase.firestore.FieldValue.arrayUnion({'type':'flight', 'startTime': state.startTime, 'endTime': state.endTime, 'id':newEvent.id});\n        newUpcomingEvents.push(firebase.firestore().collection('pilots').doc(state.crew).collection('upcoming-events').doc());\n        firebaseSetBool(state.crew, state.date);\n    }\n\n    const ref = firebase.firestore().collection(\"dates\").doc(state.date);\n    ref.get()\n        .then((docSnapshot) => {if (!docSnapshot.exists)\n        { ref.set({\n            twilight: {civil: null, naut: null},\n            dutymtp: null,\n            oic: null,\n            groundrun: null,\n            desksgt: {day: null, night: null},\n            fdo: {day: null, night: null}\n        })\n        .then(()=> {\n            console.log(\"Date successfully written!\");\n        })\n        .catch(function(error) {\n            console.error(\"Error writing date: \", error);\n        });\n    }});\n    firebase.firestore().collection(\"dates\").doc(state.date).update(updates)\n    .then(function() {\n        console.log(\"Event successfully added to dates!\");})\n    .catch(function(error) {\n        console.error(\"Error writing document: \", error);\n    })\n\n    console.log(newUpcomingEvents)\n    newUpcomingEvents.forEach((x)=>{x.set({\n        ac: state.ac,\n        captain: state.captain,\n        flightid: newEvent.id,\n        config: state.config,\n        date: state.date,\n        fo: state.fo,\n        fe: state.fe,\n        crew: state.crew,\n        details: state.details,\n        endTime: state.endTime,\n        startTime: state.startTime,})\n    .then(function() {\n        console.log(\"Event successfully added to pilots!\");})\n    .catch(function(error) {\n        console.error(\"Error writing document: \", error);\n    })})\n\n    firebase.firestore().collection(\"dates\").doc(state.date).update(updates)\n    .then(function() {\n        console.log(\"Event successfully added to dates!\");})\n    .catch(function(error) {\n        console.error(\"Error writing document: \", error);\n    })\n}\n/*************************************************     MASS MEETING UPDATES **************************************************/\n /*\nvar l = [30, 60, 60, 60, 90, 90, 90, 90, 90, 90, 120, 120, 120, 150, 180]\nvar pilots = ['wwright', 'clindbergh', 'cyeager', 'aearhart', 'pmitchell', 'jdoolittle', 'ehartmann', 'owright'];\nvar start = [800, 900, 1020, 1150, 1130, 1240, 1320, 1340, 1420, 1530];\nvar location = ['', \"\", '', 'Classroom A', 'Room 201', \"Courtyard\", '', '', ''];\nvar details = ['Strategy Discussion', \"Sync with CO\", \"Lunch Discussion\", \"Review Scheduler\"];\nvar state = {};\n\nfor (var i  = 0; i < 5 ; i ++) {\n\n    var s = start[getRandom(0,9)];\n    var e = s + l[getRandom(0,14)];\n\n    state.title =  details[getRandom(0, 3)];\n    state.type= \"meeting\";\n    state.date= \"2020-04-\" + getRandom(1, 30);\n    state.startTime= (s < 1000 ? '0': '') + s.toString();\n    state.endTime= (e < 1000 ? '0': '') + e.toString();\n    state.location= location[getRandom(0, 8)]; \n    state.confLink= \"\";\n    state.notes= \"\";\n    state.userid=pilots[getRandom(0, 7)];\n    console.log(state);\n\n\n\nconsole.log(state);\nvar newEvent = firebase.firestore().collection(\"events\").doc()\nnewEvent.set(state)\n.then(function() {\n    console.log(\"Event successfully added to events!\");})\n.catch(function(error) {\n    console.error(\"Error adding event: \", error);\n});\n\nvar field = 'events.'+state.userid;\nfirebase.firestore().collection(\"dates\").doc(state.date).update({\n    [field]: firebase.firestore.FieldValue.arrayUnion({'type':'meeting', 'startTime': state.startTime, 'endTime': state.endTime, 'id':newEvent.id})\n    })\n.then(function() {\n    console.log(\"Event successfully added to dates!\");})\n.catch(function(error) {\n    console.log({'type':'meeting', 'startTime': state.startTime, 'endTime': state.endTime, 'id':newEvent.id});\n    console.error(\"Error writing document: \", error);\n})}\n\n*/\n\n/*************************************************     MASS APT UPDATES **************************************************/\n/*\nvar l = [30,30, 60, 60, 60, 90, 90, 90, 90, 90, 120, 120, 120, 150, 180]\nvar pilots = ['wwright', 'clindbergh', 'cyeager', 'aearhart', 'pmitchell', 'jdoolittle', 'ehartmann', 'owright'];\nvar start = [800, 900, 1020, 1150, 1130, 1240, 1320, 1340, 1420, 1530];\nvar location = ['', \"\", '', 'Classroom A', 'Room 201', \"Courtyard\", '', '', ''];\nvar details = ['Medical', \"Dentist\", \"Course\", \"Temp Leave\"];\nvar event = ['apt', 'leave', 'pers', 'yl'];\nvar state = {};\n\nfor (var i  = 0; i < 8 ; i ++) {\n\n    state.title =  details[getRandom(0, 3)];\n    state.type=  \"apt\";\n    var s = start[getRandom(0,9)];\n    var e = s + l[getRandom(0,14)];\n    state.date= \"2020-04-\" + getRandom(1, 30);\n    \n    state.startTime= (s < 1000 ? '0': '') + s.toString();\n    state.endTime= (e < 1000 ? '0': '') + e.toString();\n    state.event = event[getRandom(0, 3)];\n    state.notes= \"\";\n    state.location=location[getRandom(0, 8)];\n    state.userid=pilots[getRandom(0, 7)];\n    console.log(state);\n\n\n\nconsole.log(state);\nvar newEvent = firebase.firestore().collection(\"events\").doc()\nnewEvent.set(state)\n.then(function() {\n    console.log(\"Event successfully added to events!\");})\n.catch(function(error) {\n    console.error(\"Error adding event: \", error);\n});\n\nvar field = 'events.'+state.userid;\nfirebase.firestore().collection(\"dates\").doc(state.date).update({\n    [field]: firebase.firestore.FieldValue.arrayUnion({'type':'apt', 'startTime': state.startTime, 'endTime': state.endTime, 'id':newEvent.id})\n    })\n.then(function() {\n    console.log(\"Event successfully added to dates!\");})\n.catch(function(error) {\n    console.error(\"Error writing document: \", error);\n})}\n\n*/\n\n}\n\nexport default updateData;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import XLSX from 'xlsx';\nimport firebase from \"./Firebase.js\";\nconst sheetHeader = [\"DAILY FLYING ORDER\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\nconst emptyCells = [\"\", \"\", \"\", \"\", \"\", \"\", \"\"];\nconst flightHeaders = [\"startTime\", \"endTime\", \"A/C\", \"BACKUP\", \"captain\", \"fo\", \"fe\", \"crew\", \"config\", \"details\", \"mission\", \"details\", \"config\", \"remarks\", \"pri\", \"meal\", \"DCO\"];\nvar date = [];\n\nfunction s2ab(s) {\n  var buf = new ArrayBuffer(s.length);\n  var view = new Uint8Array(buf);\n\n  for (var i = 0; i < s.length; i++) view[i] = s.charCodeAt(i) & 0xFF;\n\n  return buf;\n}\n\nconst download = (url, name) => {\n  let a = document.createElement('a');\n  a.href = url;\n  a.download = name;\n  a.click();\n  window.URL.revokeObjectURL(url);\n};\n\nfunction Export(ids) {\n  //Gathering all data: \n  var flights = [flightHeaders];\n  firebase.firestore().collection(\"events\").where(firebase.firestore.FieldPath.documentId(), 'in', ids).get().then(querySnapshot => {\n    querySnapshot.docs.forEach(d => {\n      var d = d.data();\n      date = d.date;\n      flights.push([d.startTime, d.endTime, d.ac, d.backup, d.captain, d.fo, d.fe, d.crew, d.config, d.details, d.mission, d.details, d.config, d.remarks, d.pri, d.meal, d.dco]);\n    });\n    var day = []; //Get Day info \n\n    firebase.firestore().collection(\"dates\").doc(date).get().then(querySnapshot => {\n      var d = querySnapshot.data();\n      day.push([\"DATE: \" + date, emptyCells, \"SDO: \", emptyCells, \"\"]);\n      day.push([\"TWILIGHT CIV: \" + d.twilightciv, emptyCells, \"TWILIGHT NAUT: \" + d.twilightnaut, emptyCells, \"\"]);\n      day.push([\"DAY FDO: \" + d.fdoday, emptyCells, \"NIGHT FDO: \" + d.fdonight, emptyCells, \"\"]);\n      day.push([\"DESK SGT DAY: \" + d.desksgtday, emptyCells, \"DESK SGT NIGHT: \" + d.desksgtnight, emptyCells, \"\"]);\n      day.push([\"MTP: \" + d.mtp, emptyCells, \"GROUND RUN: \" + d.groundrun, emptyCells, \"\"]);\n      getFile(flights, day);\n    }).catch(function (error) {\n      console.log(\"Error getting data: \", error);\n    });\n  }).catch(function (error) {\n    console.log(\"Error getting data: \", error);\n  });\n}\n\nfunction getFile(flightData, dayData) {\n  var exportData = [dayData, flightData];\n  /* convert from array of arrays to worksheet */\n\n  var worksheet = XLSX.utils.aoa_to_sheet(exportData);\n  /* merge cells A1:B1 */\n\n  var merge = XLSX.utils.decode_range(\"A1:Q1\");\n  /* add merges */\n\n  if (!worksheet['!merges']) worksheet['!merges'] = [];\n  worksheet['!merges'].push(merge);\n  /** generate workbook */\n\n  var new_workbook = XLSX.utils.book_new();\n  XLSX.utils.book_append_sheet(new_workbook, worksheet, date);\n  /* write file */\n\n  const wbout = XLSX.write(new_workbook, {\n    type: 'binary',\n    bookType: \"xlsx\"\n  });\n  let url = window.URL.createObjectURL(new Blob([s2ab(wbout)], {\n    type: 'application/octet-stream'\n  }));\n  download(url, 'DailyFlyingOrder.xlsx');\n}\n\nexport default Export;","map":{"version":3,"sources":["/Users/jenny/Desktop/SOAS/scheduler/src/Export.js"],"names":["XLSX","firebase","sheetHeader","emptyCells","flightHeaders","date","s2ab","s","buf","ArrayBuffer","length","view","Uint8Array","i","charCodeAt","download","url","name","a","document","createElement","href","click","window","URL","revokeObjectURL","Export","ids","flights","firestore","collection","where","FieldPath","documentId","get","then","querySnapshot","docs","forEach","d","data","push","startTime","endTime","ac","backup","captain","fo","fe","crew","config","details","mission","remarks","pri","meal","dco","day","doc","twilightciv","twilightnaut","fdoday","fdonight","desksgtday","desksgtnight","mtp","groundrun","getFile","catch","error","console","log","flightData","dayData","exportData","worksheet","utils","aoa_to_sheet","merge","decode_range","new_workbook","book_new","book_append_sheet","wbout","write","type","bookType","createObjectURL","Blob"],"mappings":"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","sourcesContent":["import XLSX from 'xlsx';\nimport firebase from \"./Firebase.js\";\n\nconst sheetHeader =[\"DAILY FLYING ORDER\", \"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"];\nconst emptyCells = [\"\",\"\",\"\",\"\",\"\",\"\",\"\"];\nconst flightHeaders = [\"startTime\",\"endTime\",\"A/C\",\"BACKUP\",\"captain\",\"fo\",\"fe\",\"crew\",\"config\",\"details\",\"mission\",\"details\",\"config\",\"remarks\",\"pri\",\"meal\",\"DCO\"];\nvar date = [];\n\nfunction s2ab(s) {\n    var buf = new ArrayBuffer(s.length);\n    var view = new Uint8Array(buf);\n    for (var i=0; i<s.length; i++) view[i] = s.charCodeAt(i) & 0xFF;\n    return buf;\n}\n\nconst download = (url, name) => {\n    let a = document.createElement('a')\n    a.href = url\n    a.download = name\n    a.click()\n\n    window.URL.revokeObjectURL(url)\n}\n\nfunction Export(ids) {\n    //Gathering all data: \n    var flights = [flightHeaders];\n        firebase.firestore().collection(\"events\").where(firebase.firestore.FieldPath.documentId(), 'in', ids)\n            .get()\n            .then((querySnapshot) => {\n                querySnapshot.docs.forEach((d) => {\n                    var d = d.data();\n                    date = d.date;\n                    flights.push([\n                        d.startTime,\n                        d.endTime,\n                        d.ac,\n                        d.backup,\n                        d.captain,\n                        d.fo,\n                        d.fe,\n                        d.crew,\n                        d.config,\n                        d.details,\n                        d.mission,\n                        d.details,\n                        d.config,\n                        d.remarks,\n                        d.pri,\n                        d.meal,\n                        d.dco,]);\n                    })\n\n                    var day = [];\n                    //Get Day info \n                    firebase.firestore().collection(\"dates\").doc(date).get()\n                    .then((querySnapshot) => {\n                        var d = querySnapshot.data();\n                        day.push([\"DATE: \" + date, emptyCells, \"SDO: \", emptyCells, \"\"]);\n                        day.push([\"TWILIGHT CIV: \" + d.twilightciv, emptyCells, \"TWILIGHT NAUT: \"+d.twilightnaut, emptyCells, \"\"]);\n                        day.push([\"DAY FDO: \" + d.fdoday, emptyCells, \"NIGHT FDO: \"+d.fdonight, emptyCells, \"\"]);\n                        day.push([\"DESK SGT DAY: \" + d.desksgtday, emptyCells, \"DESK SGT NIGHT: \"+d.desksgtnight, emptyCells, \"\"]);\n                        day.push([\"MTP: \" + d.mtp, emptyCells, \"GROUND RUN: \"+d.groundrun, emptyCells, \"\"]);\n\n                        getFile(flights, day);\n                    })\n                    .catch(function(error) {\n                        console.log(\"Error getting data: \", error);\n                    });\n\n                })\n            \n            .catch(function(error) {\n                console.log(\"Error getting data: \", error);\n            });\n    \n}\n\nfunction getFile(flightData, dayData) {\n    var exportData = [dayData, flightData];\n    /* convert from array of arrays to worksheet */\n    var worksheet = XLSX.utils.aoa_to_sheet(exportData);\n\n    /* merge cells A1:B1 */\n    var merge = XLSX.utils.decode_range(\"A1:Q1\");\n\n    /* add merges */\n    if(!worksheet['!merges']) worksheet['!merges'] = [];\n    worksheet['!merges'].push(merge);\n\n    /** generate workbook */\n    var new_workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(new_workbook, worksheet, date);\n\n    /* write file */\n    const wbout = XLSX.write(new_workbook, {type:'binary', bookType:\"xlsx\"});\n\n    let url = window.URL.createObjectURL(new Blob([s2ab(wbout)], {type:'application/octet-stream'}))\n\n    download(url, 'DailyFlyingOrder.xlsx');\n}\n\nexport default Export;\n\n"]},"metadata":{},"sourceType":"module"}
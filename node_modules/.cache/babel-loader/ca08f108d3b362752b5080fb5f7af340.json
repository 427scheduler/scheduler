{"ast":null,"code":"import firebase from \"./Firebase.js\";\nlet firestore = firebase.firestore();\n\nfunction firebaseDeleteFlight(id, props) {\n  //Delete from events \n  firestore.collection(\"events\").doc(id).delete().then(console.log(\"Document successfully deleted from events\")).catch(function (error) {\n    console.log(\"Error getting documents: \", error);\n  });\n  var pilots = [props.captain, props.fo];\n\n  if (props.crew) {\n    pilots.push(props.crew);\n  }\n\n  ;\n\n  if (props.fe) {\n    pilots.push(props.fe);\n  }\n\n  ;\n  console.log(pilots);\n  pilots.forEach(pilot => {\n    var path = \"events.\" + pilot; //Delete from dates\n\n    console.log(\"Deleting from date: \", props.date);\n    firestore.collection(\"dates\").doc(props.date).update({\n      [path]: firebase.firestore.FieldValue.arrayRemove([path].filter(s => s.id == id))\n    }).then(console.log(\"Document successfully deleted from events\")).catch(function (error) {\n      console.log(\"Error getting documents: \", error);\n    }); //Delete from pilots\n\n    firestore.collection(\"pilots\").doc(pilot).collection('upcoming-events').where('flightid', '==', id).get().then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        doc.ref.delete();\n      });\n    }); //Change events boolean \n\n    var flightDate = 'flights.' + props.date;\n    firebase.firestore().collection(\"pilots\").doc(pilot).update({\n      [flightDate]: false\n    }).then(function () {\n      console.log(\"Boolean successfully set for \" + pilot);\n    }).catch(function (error) {\n      console.error(\"Error setting flight boolean\", error);\n    });\n  });\n}\n\nfunction firebaseDeleteAptMeeting(type, id, props) {\n  //Delete from events \n  firestore.collection(\"events\").doc(id).delete().then(console.log(\"Document successfully deleted from events\")).catch(function (error) {\n    console.log(\"Error getting documents: \", error);\n  });\n  var path = \"events.\" + props.userid; //Delete from dates\n\n  firestore.collection(\"dates\").doc(props.date).update({\n    //[path]: [path].filter(post => post.id !== id)\n    [path]: firebase.firestore.FieldValue.arrayRemove({\n      'type': type,\n      'startTime': props.startTime,\n      'endTime': props.endTime,\n      'id': id\n    })\n  }).then(console.log(\"Document successfully deleted from events\")).catch(function (error) {\n    console.log(\"Error getting documents: \", error);\n  });\n}\n\nfunction firebaseCreateDate(date) {\n  firebase.firestore().collection(\"dates\").doc(date).set({\n    twilight: 'N/A',\n    sgt: 'N/A',\n    mvp: 'N/A',\n    fdo: 'N/A',\n    groundrun: 'N/A',\n    events: {}\n  });\n}\n\nexport { firebaseDeleteFlight, firebaseCreateDate, firebaseDeleteAptMeeting };","map":{"version":3,"sources":["/Users/jenny/Desktop/SOAS/scheduler/src/FirebaseHelper.js"],"names":["firebase","firestore","firebaseDeleteFlight","id","props","collection","doc","delete","then","console","log","catch","error","pilots","captain","fo","crew","push","fe","forEach","pilot","path","date","update","FieldValue","arrayRemove","filter","s","where","get","querySnapshot","ref","flightDate","firebaseDeleteAptMeeting","type","userid","startTime","endTime","firebaseCreateDate","set","twilight","sgt","mvp","fdo","groundrun","events"],"mappings":"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","sourcesContent":["import firebase from \"./Firebase.js\";\n\nlet firestore = firebase.firestore();\n\nfunction firebaseDeleteFlight(id, props) {\n    //Delete from events \n    firestore.collection(\"events\").doc(id)\n        .delete()\n        .then(\n            console.log(\"Document successfully deleted from events\"))\n        .catch(function(error) {\n            console.log(\"Error getting documents: \", error);\n    });\n\n    var pilots = [props.captain, props.fo];\n    if (props.crew) {pilots.push(props.crew)};\n    if (props.fe) {pilots.push(props.fe)};\n    console.log(pilots);\n    \n    pilots.forEach(pilot => {\n        var path = \"events.\" + pilot;\n\n        //Delete from dates\n        console.log(\"Deleting from date: \", props.date);\n        firestore.collection(\"dates\").doc(props.date).update({\n            [path]: firebase.firestore.FieldValue.arrayRemove([path].filter(s => s.id == id))\n        })\n            .then(\n                console.log(\"Document successfully deleted from events\"))\n            .catch(function(error) {\n                console.log(\"Error getting documents: \", error);\n        });\n\n        //Delete from pilots\n        firestore.collection(\"pilots\").doc(pilot).collection('upcoming-events').where('flightid', '==', id)\n            .get()\n            .then(function(querySnapshot) {\n                querySnapshot.forEach(function(doc) {\n                  doc.ref.delete();\n                });\n            });\n\n        //Change events boolean \n        var flightDate = 'flights.' + props.date;\n        firebase.firestore().collection(\"pilots\").doc(pilot).update({[flightDate]: false})\n        .then(function() {\n            console.log(\"Boolean successfully set for \"+pilot);})\n        .catch(function(error) {\n            console.error(\"Error setting flight boolean\", error);\n        })\n    })\n}\n\nfunction firebaseDeleteAptMeeting(type, id, props) {\n    //Delete from events \n    firestore.collection(\"events\").doc(id)\n        .delete()\n        .then(\n            console.log(\"Document successfully deleted from events\"))\n        .catch(function(error) {\n            console.log(\"Error getting documents: \", error);\n    });\n\n    var path = \"events.\" + props.userid;\n\n    //Delete from dates\n    firestore.collection(\"dates\").doc(props.date).update({\n        //[path]: [path].filter(post => post.id !== id)\n        [path]: firebase.firestore.FieldValue.arrayRemove({'type':type, 'startTime':props.startTime, 'endTime': props.endTime, 'id': id})\n    })\n    .then(\n        console.log(\"Document successfully deleted from events\"))\n    .catch(function(error) {\n        console.log(\"Error getting documents: \", error);\n    })\n}\n\n\nfunction firebaseCreateDate(date) {\n    firebase.firestore().collection(\"dates\").doc(date).set({\n        twilight: 'N/A',\n        sgt: 'N/A',\n        mvp: 'N/A',\n        fdo: 'N/A',\n        groundrun: 'N/A',\n        events: {},\n    });\n}\n\nexport {firebaseDeleteFlight, firebaseCreateDate, firebaseDeleteAptMeeting};"]},"metadata":{},"sourceType":"module"}
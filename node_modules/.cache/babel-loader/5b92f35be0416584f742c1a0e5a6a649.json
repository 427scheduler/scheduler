{"ast":null,"code":"var _jsxFileName = \"/Users/jenny/Desktop/SOAS/scheduler/src/Flights.js\";\nimport React from 'react';\nimport \"./Flights.css\";\nimport RIGHT_BTN from './img/right-arrow.png';\nimport LEFT_BTN from './img/left-arrow.png';\nimport firebase from \"./Firebase.js\";\nimport { firebaseCreateDate } from \"./FirebaseHelper.js\";\nimport HELI_BLUE from './img/heli-blue-front.jpeg';\nimport HELI_DARK from './img/heli-dark-front.jpeg';\nimport HELI_LIGHT from './img/heli-light-front.jpeg';\nimport ErrorPage from './ErrorPage.js';\nimport ReactGA from 'react-ga';\nconst headers = ['ETD', 'ETR', 'AC', 'CREW', 'MISSION', 'DETAILS', 'CONFIG', 'SQ PRI', 'DCO'];\nvar today = new Date();\nvar dd = String(today.getDate()).padStart(2, '0');\nvar mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n\nvar yyyy = today.getFullYear();\ntoday = mm + '/' + dd + '/' + yyyy;\n\nfunction initializeReactGA() {\n  ReactGA.initialize('UA-108277898-5');\n  ReactGA.pageview('/Flights');\n}\n/*\nfunction date(curDate) {\n    //var today = new Date();\n    var weekday = curDate.getDay();\n    var day = curDate.getDate();\n    var month = curDate.getMonth();\n    var year = curDate.getFullYear();\n    var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\",\"December\"];\n    return (\n        <div className='flight-date'>\n            <h2>{days[weekday] +\", \"+months[month]+\" \"+day+\", \"+year}</h2>\n        </div>\n    )\n}*/\n\n\nfunction RenderDate(props) {\n  var weekday = props.date.getDay();\n  var day = props.date.getDate();\n  var month = props.date.getMonth();\n  var year = props.date.getFullYear();\n  var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n  if (props.view === 'sm-view') {\n    return React.createElement(\"div\", {\n      className: 'flight-date sm-view',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, month + \" / \" + day + \" / \" + year));\n  }\n\n  return React.createElement(\"div\", {\n    className: 'flight-date lg-view',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, days[weekday] + \", \" + months[month] + \" \" + day + \", \" + year));\n}\n\nfunction RenderFlightDayHeader(props) {\n  var displayDate = new Date(props.date);\n  var curDate = new Date();\n  var diff = Math.round((displayDate.getTime() - curDate.getTime()) / (24 * 60 * 60 * 1000)); // Only show flights for last 3 days to the next 2 weeks\n\n  var disableLeft = diff === -3;\n  var disableRight = diff === 14;\n  return React.createElement(\"div\", {\n    className: \"flight-day-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: 'date-btn' + (disableLeft ? ' disabled' : ''),\n    src: LEFT_BTN,\n    onClick: () => {\n      props.changeDate(disableLeft ? 0 : -1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(RenderDate, {\n    date: displayDate,\n    view: \"lg-view\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(RenderDate, {\n    date: displayDate,\n    view: \"sm-view\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    className: 'date-btn' + (disableRight ? ' disabled' : ''),\n    src: RIGHT_BTN,\n    onClick: () => {\n      props.changeDate(disableRight ? 0 : 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }));\n}\n\nfunction parseName(name) {\n  if (name != \"\") {\n    return name[1].toUpperCase() + name.slice(2);\n  }\n\n  return \"\";\n}\n\nfunction RenderFlightDay(props) {\n  var tableHeaders = [];\n  headers.forEach(title => {\n    tableHeaders.push(React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, title));\n  });\n  var tableRows = [];\n  var meals = 0;\n\n  if (props.data != null) {\n    props.data.forEach(entry => {\n      if (props.test) {\n        var d = entry;\n      } else {\n        var d = entry.data();\n      }\n\n      if (parseInt(d.endTime) >= 2000) {\n        //Meals will be provided \n        meals += 2;\n        meals += d.fe != \"\" ? 1 : 0;\n        meals += d.crew != \"\" ? 1 : 0;\n      }\n\n      var fe = d.fe != '' ? ' | ' + parseName(d.fe) : '';\n      var crew = d.crew != '' ? ' | ' + parseName(d.crew) : '';\n      var r = [React.createElement(\"td\", {\n        className: \"etd\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, d.startTime), React.createElement(\"td\", {\n        className: \"etr\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, d.endTime), React.createElement(\"td\", {\n        className: \"ac\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ac-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, d.ac)), React.createElement(\"td\", {\n        className: \"crew\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, parseName(d.captain) + ' | ' + parseName(d.fo) + fe + crew), React.createElement(\"td\", {\n        className: \"mission\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, d.mission), React.createElement(\"td\", {\n        className: \"details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, d.details), React.createElement(\"td\", {\n        className: \"config\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, d.config), React.createElement(\"td\", {\n        className: \"pri\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, d.pri + ' SOA'), React.createElement(\"td\", {\n        className: \"dco\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"dot \" + d.dco,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }))];\n      var startTime = parseInt(d.startTime);\n      tableRows.push(React.createElement(\"tr\", {\n        className: props.curTime.getDate() == props.date.getDate() && startTime < props.curTime.getHours() * 100 + props.curTime.getMinutes() ? 'expired' : '',\n        onClick: props.toggleOverlay.bind(this, entry.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, r));\n    });\n    props.setMeals(meals);\n    return React.createElement(\"div\", {\n      className: \"flight-day\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, tableHeaders), tableRows));\n  } else {\n    return React.createElement(\"div\", {\n      className: \"noFlights\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"noFlightsContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"noFlightsLogo\",\n      src: HELI_DARK,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: \"noFlightsLogo\",\n      src: HELI_BLUE,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: \"noFlightsLogo\",\n      src: HELI_LIGHT,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"noFlightsText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"No flights today\")));\n  }\n}\n\nfunction getRandom(x, y) {\n  var min = Math.ceil(x);\n  var max = Math.floor(y);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction RenderFlightDayBox(props) {\n  return React.createElement(\"div\", {\n    className: \"flight-day-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(RenderFlightDayHeader, {\n    date: props.date,\n    changeDate: offset => {\n      props.changeDate(offset);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }), React.createElement(RenderFlightDay, {\n    date: props.date,\n    test: props.test,\n    setMeals: m => {\n      props.setMeals(m);\n    },\n    data: props.data,\n    curTime: props.curTime,\n    toggleOverlay: id => {\n      props.toggleOverlay(id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }));\n}\n\nfunction RenderInfoBox(props) {\n  return React.createElement(\"div\", {\n    className: \"info-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"info-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, props.title)), React.createElement(\"div\", {\n    className: \"info-content\",\n    contentEditable: props.edit,\n    suppressContentEditableWarning: true,\n    onBlur: event => {\n      props.updateDayStats(props.id, event.target.textContent);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, props.value[props.id])));\n}\n\nfunction RenderInfoBar(props) {\n  const default_info = {\n    \"EVENING TWILIGHT\": props.twilightciv,\n    \"SNAGS DESK SGT\": props.desksgtday,\n    \"DUTY MVP\": props.mvp,\n    \"FDO\": props.fdoday,\n    \"DUTY GROUND RUN\": props.groundrun\n  };\n  var boxes = [];\n  boxes.push(React.createElement(RenderInfoBox, {\n    title: \"EVENING TWILIGHT\",\n    value: props,\n    id: 'twilightciv',\n    updateDayStats: (f, e) => {\n      props.updateDayStats(f, e);\n    },\n    edit: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }));\n  boxes.push(React.createElement(RenderInfoBox, {\n    title: \"SNAGS DESK SGT\",\n    value: props,\n    id: 'desksgtday',\n    updateDayStats: (f, e) => {\n      props.updateDayStats(f, e);\n    },\n    edit: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }));\n  boxes.push(React.createElement(RenderInfoBox, {\n    title: \"DUTY MVP\",\n    value: props,\n    id: 'mvp',\n    updateDayStats: (f, e) => {\n      props.updateDayStats(f, e);\n    },\n    edit: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }));\n  boxes.push(React.createElement(RenderInfoBox, {\n    title: \"FDO\",\n    value: props,\n    id: 'fdoday',\n    updateDayStats: (f, e) => {\n      props.updateDayStats(f, e);\n    },\n    edit: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }));\n  boxes.push(React.createElement(RenderInfoBox, {\n    title: \"DUTY GROUND RUN\",\n    value: props,\n    id: 'groundrun',\n    updateDayStats: (f, e) => {\n      props.updateDayStats(f, e);\n    },\n    edit: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }));\n  boxes.push(React.createElement(RenderInfoBox, {\n    title: \"MEALS\",\n    value: {\n      'meals': props.meals\n    },\n    id: 'meals',\n    edit: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }));\n  return React.createElement(\"div\", {\n    className: \"info-bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"time-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, \"CURRENT TIME\")), React.createElement(\"div\", {\n    className: \"time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, (props.curTime.getHours() < 10 ? \"0\" : \"\") + props.curTime.getHours() + ':' + (props.curTime.getMinutes() < 10 ? \"0\" : \"\") + props.curTime.getMinutes())), boxes);\n}\n\nclass Flights extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      curTime: new Date(),\n      date: new Date(),\n      data: null,\n      twlightnaut: \"N/A\",\n      twilightciv: \"N/A\",\n      desksgtday: \"N/A\",\n      desksgnight: \"N/A\",\n      mvp: \"N/A\",\n      fdoday: \"N/A\",\n      fdonight: \"N/A\",\n      meals: 0,\n      groundrun: \"N/A\",\n      hasError: false\n    };\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n    this.getData(new Date());\n    initializeReactGA();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      curTime: new Date()\n    });\n  }\n\n  updateDayStats(field, newValue) {\n    if (this.state[field] !== newValue) {\n      this.setState({\n        [field]: newValue\n      });\n      var date = this.state.date.getFullYear() + '-' + (this.state.date.getMonth() < 9 ? '0' : '') + (this.state.date.getMonth() + 1) + '-' + (this.state.date.getDate() < 10 ? '0' : '') + this.state.date.getDate();\n      firebase.firestore().collection(\"dates\").doc(date).set({\n        [field]: newValue\n      }, {\n        merge: true\n      }).then(function () {\n        console.log(\"Document successfully written!\");\n      }).catch(function (error) {\n        console.error(\"Error writing document: \", error);\n      });\n    }\n  }\n\n  getData(newDate) {\n    var date = newDate.getFullYear() + '-' + (newDate.getMonth() < 9 ? '0' : '') + (newDate.getMonth() + 1) + '-' + (newDate.getDate() < 10 ? '0' : '') + newDate.getDate();\n    console.log(\"DATE: \" + date); //get new data\n\n    firebase.firestore().collection(\"events\").where('type', '==', 'flight').where('date', '==', date).where('startTime', '>=', '0000').orderBy(\"startTime\").get().then(querySnapshot => {\n      if (!querySnapshot.empty) {\n        this.setState({\n          data: querySnapshot\n        });\n      } else {\n        console.log(\"Document doesn't exist\");\n        this.setState({\n          data: null\n        });\n      }\n\n      ;\n    }).catch(function (error) {\n      console.log(\"Error getting documents: \", error);\n    });\n    firebase.firestore().collection(\"dates\").doc(date).get().then(querySnapshot => {\n      var d = querySnapshot.data();\n      this.setState({\n        //TODO: show civil and day/night\n        twilightciv: d.twilightciv != null ? d.twilightciv : \"N/A\",\n        twilightnaut: d.twilightnaut != null ? d.twilightnaut : \"N/A\",\n        desksgtday: d.desksgtday != null ? d.desksgtday : \"N/A\",\n        desksgtnight: d.desksgtnight != null ? d.desksgtnight : \"N/A\",\n        mvp: d.mvp != null ? d.mvp : \"N/A\",\n        fdoday: d.fdoday != null ? d.fdoday : \"N/A\",\n        fdonight: d.fdonight != null ? d.fdonight : \"N/A\",\n        groundrun: d.groundrun != null ? d.groundrun : \"N/A\"\n      });\n    }).catch(function (error) {\n      firebaseCreateDate(date);\n    });\n  }\n\n  changeDate(offset) {\n    if (offset != 0) {\n      var newDate = new Date(this.state.date);\n      newDate.setDate(newDate.getDate() + offset);\n      this.setState({\n        date: new Date(newDate)\n      });\n      this.getData(newDate);\n    }\n  }\n\n  setMeals(m) {\n    if (m != this.state.meals && m >= 0) {\n      this.setState({\n        meals: m\n      });\n    }\n  }\n\n  componentDidCatch(error, info) {\n    // Display fallback UI\n    this.setState({\n      hasError: true\n    });\n    console.log(error, info);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return React.createElement(ErrorPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, React.createElement(RenderFlightDayBox, {\n      date: this.state.date,\n      data: this.state.data != null ? this.state.data : this.state.testData,\n      test: this.state.data == null,\n      curTime: this.state.curTime,\n      toggleOverlay: id => {\n        this.props.toggleOverlay(id);\n      },\n      changeDate: offset => {\n        this.changeDate(offset);\n      },\n      setMeals: m => {\n        this.setMeals(m);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }), React.createElement(RenderInfoBar, {\n      date: this.state.date,\n      curTime: this.state.curTime,\n      updateDayStats: (f, e) => {\n        this.updateDayStats(f, e);\n      },\n      twilightciv: this.state.twilightciv,\n      desksgtday: this.state.desksgtday,\n      mvp: this.state.mvp,\n      fdoday: this.state.fdoday,\n      groundrun: this.state.groundrun,\n      meals: this.state.meals,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Flights;","map":{"version":3,"sources":["/Users/jenny/Desktop/SOAS/scheduler/src/Flights.js"],"names":["React","RIGHT_BTN","LEFT_BTN","firebase","firebaseCreateDate","HELI_BLUE","HELI_DARK","HELI_LIGHT","ErrorPage","ReactGA","headers","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","initializeReactGA","initialize","pageview","RenderDate","props","weekday","date","getDay","day","month","year","days","months","view","RenderFlightDayHeader","displayDate","curDate","diff","Math","round","getTime","disableLeft","disableRight","changeDate","parseName","name","toUpperCase","slice","RenderFlightDay","tableHeaders","forEach","title","push","tableRows","meals","data","entry","test","d","parseInt","endTime","fe","crew","r","startTime","ac","captain","fo","mission","details","config","pri","dco","curTime","getHours","getMinutes","toggleOverlay","bind","id","setMeals","getRandom","x","y","min","ceil","max","floor","random","RenderFlightDayBox","offset","m","RenderInfoBox","edit","event","updateDayStats","target","textContent","value","RenderInfoBar","default_info","twilightciv","desksgtday","mvp","fdoday","groundrun","boxes","f","e","Flights","Component","constructor","state","twlightnaut","desksgnight","fdonight","hasError","componentDidMount","timerID","setInterval","tick","getData","componentWillUnmount","clearInterval","setState","field","newValue","firestore","collection","doc","set","merge","then","console","log","catch","error","newDate","where","orderBy","get","querySnapshot","empty","twilightnaut","desksgtnight","setDate","componentDidCatch","info","render","testData"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,SAAQC,kBAAR,QAAiC,qBAAjC;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,OAAP,MAAoB,UAApB;AAEA,MAAMC,OAAO,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,IAAf,EAAqB,MAArB,EAA6B,SAA7B,EAAwC,SAAxC,EAAmD,QAAnD,EAA6D,QAA7D,EAAuE,KAAvE,CAAhB;AAEA,IAAIC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACA,IAAIC,EAAE,GAAGC,MAAM,CAACH,KAAK,CAACI,OAAN,EAAD,CAAN,CAAwBC,QAAxB,CAAiC,CAAjC,EAAoC,GAApC,CAAT;AACA,IAAIC,EAAE,GAAGH,MAAM,CAACH,KAAK,CAACO,QAAN,KAAmB,CAApB,CAAN,CAA6BF,QAA7B,CAAsC,CAAtC,EAAyC,GAAzC,CAAT,C,CAAwD;;AACxD,IAAIG,IAAI,GAAGR,KAAK,CAACS,WAAN,EAAX;AAEAT,KAAK,GAAGM,EAAE,GAAG,GAAL,GAAWJ,EAAX,GAAgB,GAAhB,GAAsBM,IAA9B;;AAEA,SAASE,iBAAT,GAA6B;AACzBZ,EAAAA,OAAO,CAACa,UAAR,CAAmB,gBAAnB;AACAb,EAAAA,OAAO,CAACc,QAAR,CAAiB,UAAjB;AACH;AAED;;;;;;;;;;;;;;;;;AAgBA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACvB,MAAIC,OAAO,GAAGD,KAAK,CAACE,IAAN,CAAWC,MAAX,EAAd;AACA,MAAIC,GAAG,GAAGJ,KAAK,CAACE,IAAN,CAAWZ,OAAX,EAAV;AACA,MAAIe,KAAK,GAAGL,KAAK,CAACE,IAAN,CAAWT,QAAX,EAAZ;AACA,MAAIa,IAAI,GAAGN,KAAK,CAACE,IAAN,CAAWP,WAAX,EAAX;AACA,MAAIY,IAAI,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,QAAzD,EAAmE,UAAnE,CAAX;AACA,MAAIC,MAAM,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,QAAjE,EAA2E,WAA3E,EAAwF,SAAxF,EAAmG,UAAnG,EAA8G,UAA9G,CAAb;;AAEA,MAAIR,KAAK,CAACS,IAAN,KAAe,SAAnB,EAA8B;AAC1B,WACI;AAAK,MAAA,SAAS,EAAE,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKJ,KAAK,GAAC,KAAN,GAAYD,GAAZ,GAAgB,KAAhB,GAAsBE,IAA3B,CADJ,CADJ;AAKH;;AACD,SACI;AAAK,IAAA,SAAS,EAAE,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,IAAI,CAACN,OAAD,CAAJ,GAAe,IAAf,GAAoBO,MAAM,CAACH,KAAD,CAA1B,GAAkC,GAAlC,GAAsCD,GAAtC,GAA0C,IAA1C,GAA+CE,IAApD,CADJ,CADJ;AAKH;;AAED,SAASI,qBAAT,CAA+BV,KAA/B,EAAsC;AAClC,MAAIW,WAAW,GAAG,IAAIxB,IAAJ,CAASa,KAAK,CAACE,IAAf,CAAlB;AACA,MAAIU,OAAO,GAAG,IAAIzB,IAAJ,EAAd;AACA,MAAI0B,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACJ,WAAW,CAACK,OAAZ,KAAwBJ,OAAO,CAACI,OAAR,EAAzB,KAA6C,KAAG,EAAH,GAAM,EAAN,GAAS,IAAtD,CAAX,CAAX,CAHkC,CAKlC;;AACA,MAAIC,WAAW,GAAGJ,IAAI,KAAK,CAAC,CAA5B;AACA,MAAIK,YAAY,GAAEL,IAAI,KAAK,EAA3B;AAEA,SACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAE,cAAcI,WAAW,GAAG,WAAH,GAAgB,EAAzC,CAAhB;AAA8D,IAAA,GAAG,EAAExC,QAAnE;AAA6E,IAAA,OAAO,EAAE,MAAI;AAACuB,MAAAA,KAAK,CAACmB,UAAN,CAAiBF,WAAW,GAAG,CAAH,GAAO,CAAC,CAApC;AAAuC,KAAlI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEN,WAAlB;AAA+B,IAAA,IAAI,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEA,WAAlB;AAA+B,IAAA,IAAI,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII;AAAK,IAAA,SAAS,EAAE,cAAcO,YAAY,GAAG,WAAH,GAAgB,EAA1C,CAAhB;AAA+D,IAAA,GAAG,EAAE1C,SAApE;AAA+E,IAAA,OAAO,EAAE,MAAI;AAACwB,MAAAA,KAAK,CAACmB,UAAN,CAAiBD,YAAY,GAAG,CAAH,GAAO,CAApC;AAAuC,KAApI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAQH;;AAED,SAASE,SAAT,CAAmBC,IAAnB,EAAyB;AACrB,MAAIA,IAAI,IAAI,EAAZ,EAAgB;AACZ,WAAOA,IAAI,CAAC,CAAD,CAAJ,CAAQC,WAAR,KAAwBD,IAAI,CAACE,KAAL,CAAW,CAAX,CAA/B;AACH;;AACD,SAAO,EAAP;AACH;;AAGD,SAASC,eAAT,CAAyBxB,KAAzB,EAAgC;AAC5B,MAAIyB,YAAY,GAAG,EAAnB;AACAxC,EAAAA,OAAO,CAACyC,OAAR,CAAgBC,KAAK,IAAI;AACrBF,IAAAA,YAAY,CAACG,IAAb,CAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,KAAL,CAAlB;AACH,GAFD;AAGA,MAAIE,SAAS,GAAG,EAAhB;AACA,MAAIC,KAAK,GAAG,CAAZ;;AAEA,MAAI9B,KAAK,CAAC+B,IAAN,IAAc,IAAlB,EAAwB;AACpB/B,IAAAA,KAAK,CAAC+B,IAAN,CAAWL,OAAX,CAAmBM,KAAK,IAAI;AAC5B,UAAIhC,KAAK,CAACiC,IAAV,EAAgB;AACZ,YAAIC,CAAC,GAAGF,KAAR;AACH,OAFD,MAGK;AACD,YAAIE,CAAC,GAAGF,KAAK,CAACD,IAAN,EAAR;AACH;;AACD,UAAII,QAAQ,CAACD,CAAC,CAACE,OAAH,CAAR,IAAuB,IAA3B,EAAiC;AAC7B;AACAN,QAAAA,KAAK,IAAI,CAAT;AACAA,QAAAA,KAAK,IAAII,CAAC,CAACG,EAAF,IAAQ,EAAR,GAAa,CAAb,GAAiB,CAA1B;AACAP,QAAAA,KAAK,IAAII,CAAC,CAACI,IAAF,IAAU,EAAV,GAAe,CAAf,GAAmB,CAA5B;AACH;;AAED,UAAID,EAAE,GAAGH,CAAC,CAACG,EAAF,IAAQ,EAAR,GAAa,QAAQjB,SAAS,CAACc,CAAC,CAACG,EAAH,CAA9B,GAAuC,EAAhD;AACA,UAAIC,IAAI,GAAGJ,CAAC,CAACI,IAAF,IAAU,EAAV,GAAe,QAAQlB,SAAS,CAACc,CAAC,CAACI,IAAH,CAAhC,GAA2C,EAAtD;AACA,UAAIC,CAAC,GAAG,CACR;AAAI,QAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqBL,CAAC,CAACM,SAAvB,CADQ,EAER;AAAI,QAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqBN,CAAC,CAACE,OAAvB,CAFQ,EAGR;AAAI,QAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmB;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0BF,CAAC,CAACO,EAA5B,CAAnB,CAHQ,EAIR;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsBrB,SAAS,CAACc,CAAC,CAACQ,OAAH,CAAT,GAAuB,KAAvB,GAA+BtB,SAAS,CAACc,CAAC,CAACS,EAAH,CAAxC,GAAiDN,EAAjD,GAAsDC,IAA5E,CAJQ,EAKR;AAAI,QAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyBJ,CAAC,CAACU,OAA3B,CALQ,EAMR;AAAI,QAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyBV,CAAC,CAACW,OAA3B,CANQ,EAOR;AAAI,QAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwBX,CAAC,CAACY,MAA1B,CAPQ,EAQR;AAAI,QAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqBZ,CAAC,CAACa,GAAF,GAAQ,MAA7B,CARQ,EASR;AAAI,QAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoB;AAAK,QAAA,SAAS,EAAE,SAAOb,CAAC,CAACc,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAApB,CATQ,CAAR;AAaA,UAAIR,SAAS,GAAGL,QAAQ,CAACD,CAAC,CAACM,SAAH,CAAxB;AACAX,MAAAA,SAAS,CAACD,IAAV,CAAe;AAAI,QAAA,SAAS,EAAG5B,KAAK,CAACiD,OAAN,CAAc3D,OAAd,MAA2BU,KAAK,CAACE,IAAN,CAAWZ,OAAX,EAA3B,IAAmDkD,SAAS,GAAGxC,KAAK,CAACiD,OAAN,CAAcC,QAAd,KAAyB,GAAzB,GAA6BlD,KAAK,CAACiD,OAAN,CAAcE,UAAd,EAA7F,GAA2H,SAA3H,GAAqI,EAApJ;AAAwJ,QAAA,OAAO,EAAEnD,KAAK,CAACoD,aAAN,CAAoBC,IAApB,CAAyB,IAAzB,EAA8BrB,KAAK,CAACsB,EAApC,CAAjK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2Mf,CAA3M,CAAf;AACC,KA/BD;AAgCAvC,IAAAA,KAAK,CAACuD,QAAN,CAAezB,KAAf;AAEA,WACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKL,YADL,CADJ,EAIKI,SAJL,CADJ,CADJ;AAUH,GA7CD,MA8CK;AACD,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,GAAG,EAAEhD,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,GAAG,EAAED,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,GAAG,EAAEE,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA,CADJ,EAOI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,CAPJ,CADJ;AAaH;AAEJ;;AAGD,SAAS0E,SAAT,CAAmBC,CAAnB,EAAsBC,CAAtB,EAAyB;AACrB,MAAIC,GAAG,GAAG7C,IAAI,CAAC8C,IAAL,CAAUH,CAAV,CAAV;AACA,MAAII,GAAG,GAAG/C,IAAI,CAACgD,KAAL,CAAWJ,CAAX,CAAV;AACA,SAAO5C,IAAI,CAACgD,KAAL,CAAWhD,IAAI,CAACiD,MAAL,MAAiBF,GAAG,GAAGF,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GAArD;AACH;;AAED,SAASK,kBAAT,CAA4BhE,KAA5B,EAAmC;AAC/B,SACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,qBAAD;AAAuB,IAAA,IAAI,EAAEA,KAAK,CAACE,IAAnC;AAAyC,IAAA,UAAU,EAAG+D,MAAD,IAAU;AAACjE,MAAAA,KAAK,CAACmB,UAAN,CAAiB8C,MAAjB;AAAyB,KAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEjE,KAAK,CAACE,IAA7B;AAAmC,IAAA,IAAI,EAAEF,KAAK,CAACiC,IAA/C;AAAqD,IAAA,QAAQ,EAAGiC,CAAD,IAAK;AAAClE,MAAAA,KAAK,CAACuD,QAAN,CAAeW,CAAf;AAAkB,KAAvF;AAAyF,IAAA,IAAI,EAAElE,KAAK,CAAC+B,IAArG;AAA2G,IAAA,OAAO,EAAE/B,KAAK,CAACiD,OAA1H;AAAmI,IAAA,aAAa,EAAGK,EAAD,IAAM;AAACtD,MAAAA,KAAK,CAACoD,aAAN,CAAoBE,EAApB;AAAwB,KAAjL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH;;AAED,SAASa,aAAT,CAAuBnE,KAAvB,EAA8B;AAC1B,SACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAAC2B,KAAX,CADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,eAAe,EAAE3B,KAAK,CAACoE,IAArD;AAA2D,IAAA,8BAA8B,EAAE,IAA3F;AAAiG,IAAA,MAAM,EAAGC,KAAD,IAAS;AAACrE,MAAAA,KAAK,CAACsE,cAAN,CAAqBtE,KAAK,CAACsD,EAA3B,EAA+Be,KAAK,CAACE,MAAN,CAAaC,WAA5C;AAA0D,KAA7K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKxE,KAAK,CAACyE,KAAN,CAAYzE,KAAK,CAACsD,EAAlB,CAAL,CADJ,CAJJ,CADJ;AAUH;;AAED,SAASoB,aAAT,CAAuB1E,KAAvB,EAA8B;AAC1B,QAAM2E,YAAY,GAAG;AAAC,wBAAmB3E,KAAK,CAAC4E,WAA1B;AAAuC,sBAAkB5E,KAAK,CAAC6E,UAA/D;AAA2E,gBAAY7E,KAAK,CAAC8E,GAA7F;AAAkG,WAAO9E,KAAK,CAAC+E,MAA/G;AAAuH,uBAAmB/E,KAAK,CAACgF;AAAhJ,GAArB;AACA,MAAIC,KAAK,GAAG,EAAZ;AACAA,EAAAA,KAAK,CAACrD,IAAN,CAAW,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAE,kBAAtB;AAA0C,IAAA,KAAK,EAAE5B,KAAjD;AAAwD,IAAA,EAAE,EAAE,aAA5D;AAA2E,IAAA,cAAc,EAAE,CAACkF,CAAD,EAAIC,CAAJ,KAAQ;AAACnF,MAAAA,KAAK,CAACsE,cAAN,CAAqBY,CAArB,EAAuBC,CAAvB;AAA0B,KAA9H;AAAgI,IAAA,IAAI,EAAE,IAAtI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAX;AACAF,EAAAA,KAAK,CAACrD,IAAN,CAAW,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAE,gBAAtB;AAAwC,IAAA,KAAK,EAAE5B,KAA/C;AAAsD,IAAA,EAAE,EAAE,YAA1D;AAAwE,IAAA,cAAc,EAAE,CAACkF,CAAD,EAAIC,CAAJ,KAAQ;AAACnF,MAAAA,KAAK,CAACsE,cAAN,CAAqBY,CAArB,EAAuBC,CAAvB;AAA0B,KAA3H;AAA6H,IAAA,IAAI,EAAE,IAAnI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAX;AACAF,EAAAA,KAAK,CAACrD,IAAN,CAAW,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAE,UAAtB;AAAkC,IAAA,KAAK,EAAE5B,KAAzC;AAAgD,IAAA,EAAE,EAAE,KAApD;AAA2D,IAAA,cAAc,EAAE,CAACkF,CAAD,EAAIC,CAAJ,KAAQ;AAACnF,MAAAA,KAAK,CAACsE,cAAN,CAAqBY,CAArB,EAAuBC,CAAvB;AAA0B,KAA9G;AAAgH,IAAA,IAAI,EAAE,IAAtH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAX;AACAF,EAAAA,KAAK,CAACrD,IAAN,CAAW,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAE,KAAtB;AAA6B,IAAA,KAAK,EAAE5B,KAApC;AAA2C,IAAA,EAAE,EAAE,QAA/C;AAAyD,IAAA,cAAc,EAAE,CAACkF,CAAD,EAAIC,CAAJ,KAAQ;AAACnF,MAAAA,KAAK,CAACsE,cAAN,CAAqBY,CAArB,EAAuBC,CAAvB;AAA0B,KAA5G;AAA8G,IAAA,IAAI,EAAE,IAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAX;AACAF,EAAAA,KAAK,CAACrD,IAAN,CAAW,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAE,iBAAtB;AAAyC,IAAA,KAAK,EAAE5B,KAAhD;AAAuD,IAAA,EAAE,EAAE,WAA3D;AAAwE,IAAA,cAAc,EAAE,CAACkF,CAAD,EAAIC,CAAJ,KAAQ;AAACnF,MAAAA,KAAK,CAACsE,cAAN,CAAqBY,CAArB,EAAuBC,CAAvB;AAA0B,KAA3H;AAA6H,IAAA,IAAI,EAAE,IAAnI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAX;AACAF,EAAAA,KAAK,CAACrD,IAAN,CAAW,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAC,OAArB;AAA6B,IAAA,KAAK,EAAE;AAAC,eAAS5B,KAAK,CAAC8B;AAAhB,KAApC;AAA4D,IAAA,EAAE,EAAE,OAAhE;AAAyE,IAAA,IAAI,EAAE,KAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAX;AAEA,SACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,CAAC9B,KAAK,CAACiD,OAAN,CAAcC,QAAd,KAAyB,EAAzB,GAA4B,GAA5B,GAAgC,EAAjC,IAAqClD,KAAK,CAACiD,OAAN,CAAcC,QAAd,EAArC,GAA8D,GAA9D,IAAmElD,KAAK,CAACiD,OAAN,CAAcE,UAAd,KAA2B,EAA3B,GAA8B,GAA9B,GAAkC,EAArG,IAAyGnD,KAAK,CAACiD,OAAN,CAAcE,UAAd,EAA9G,CADJ,CAJJ,EAOK8B,KAPL,CADJ;AAWH;;AAED,MAAMG,OAAN,SAAsB7G,KAAK,CAAC8G,SAA5B,CAAsC;AAClCC,EAAAA,WAAW,CAACtF,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKuF,KAAL,GAAa;AACTtC,MAAAA,OAAO,EAAE,IAAI9D,IAAJ,EADA;AAETe,MAAAA,IAAI,EAAE,IAAIf,IAAJ,EAFG;AAGT4C,MAAAA,IAAI,EAAE,IAHG;AAITyD,MAAAA,WAAW,EAAE,KAJJ;AAKTZ,MAAAA,WAAW,EAAE,KALJ;AAMTC,MAAAA,UAAU,EAAE,KANH;AAOTY,MAAAA,WAAW,EAAE,KAPJ;AAQTX,MAAAA,GAAG,EAAE,KARI;AASTC,MAAAA,MAAM,EAAE,KATC;AAUTW,MAAAA,QAAQ,EAAE,KAVD;AAWT5D,MAAAA,KAAK,EAAE,CAXE;AAYTkD,MAAAA,SAAS,EAAE,KAZF;AAaTW,MAAAA,QAAQ,EAAE;AAbD,KAAb;AAeH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,OAAL,GAAeC,WAAW,CAAC,MAAM,KAAKC,IAAL,EAAP,EAAoB,IAApB,CAA1B;AACA,SAAKC,OAAL,CAAa,IAAI7G,IAAJ,EAAb;AACAS,IAAAA,iBAAiB;AACpB;;AAEDqG,EAAAA,oBAAoB,GAAG;AAACC,IAAAA,aAAa,CAAC,KAAKL,OAAN,CAAb;AAA6B;;AAErDE,EAAAA,IAAI,GAAG;AAAC,SAAKI,QAAL,CAAc;AAAClD,MAAAA,OAAO,EAAE,IAAI9D,IAAJ;AAAV,KAAd;AAAsC;;AAE9CmF,EAAAA,cAAc,CAAC8B,KAAD,EAAQC,QAAR,EAAkB;AAC5B,QAAI,KAAKd,KAAL,CAAWa,KAAX,MAAsBC,QAA1B,EAAoC;AAChC,WAAKF,QAAL,CAAc;AAAC,SAACC,KAAD,GAASC;AAAV,OAAd;AACA,UAAInG,IAAI,GAAG,KAAKqF,KAAL,CAAWrF,IAAX,CAAgBP,WAAhB,KAAgC,GAAhC,IAAuC,KAAK4F,KAAL,CAAWrF,IAAX,CAAgBT,QAAhB,KAA6B,CAA7B,GAAiC,GAAjC,GAAqC,EAA5E,KAAmF,KAAK8F,KAAL,CAAWrF,IAAX,CAAgBT,QAAhB,KAA2B,CAA9G,IAAmH,GAAnH,IAA0H,KAAK8F,KAAL,CAAWrF,IAAX,CAAgBZ,OAAhB,KAA4B,EAA5B,GAAiC,GAAjC,GAAqC,EAA/J,IAAsK,KAAKiG,KAAL,CAAWrF,IAAX,CAAgBZ,OAAhB,EAAjL;AAEAZ,MAAAA,QAAQ,CAAC4H,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,EAAyCC,GAAzC,CAA6CtG,IAA7C,EAAmDuG,GAAnD,CAAuD;AACnD,SAACL,KAAD,GAASC;AAD0C,OAAvD,EAEO;AAACK,QAAAA,KAAK,EAAE;AAAR,OAFP,EAGKC,IAHL,CAGU,YAAW;AACjBC,QAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACC,OALL,EAMKC,KANL,CAMW,UAASC,KAAT,EAAgB;AACvBH,QAAAA,OAAO,CAACG,KAAR,CAAc,0BAAd,EAA0CA,KAA1C;AACH,OARD;AASH;AACJ;;AAEDf,EAAAA,OAAO,CAACgB,OAAD,EAAU;AACb,QAAI9G,IAAI,GAAG8G,OAAO,CAACrH,WAAR,KAAwB,GAAxB,IAA+BqH,OAAO,CAACvH,QAAR,KAAqB,CAArB,GAAyB,GAAzB,GAA6B,EAA5D,KAAmEuH,OAAO,CAACvH,QAAR,KAAmB,CAAtF,IAA2F,GAA3F,IAAkGuH,OAAO,CAAC1H,OAAR,KAAoB,EAApB,GAAyB,GAAzB,GAA6B,EAA/H,IAAsI0H,OAAO,CAAC1H,OAAR,EAAjJ;AACAsH,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAW3G,IAAvB,EAFa,CAGb;;AACAxB,IAAAA,QAAQ,CAAC4H,SAAT,GAAqBC,UAArB,CAAgC,QAAhC,EAA0CU,KAA1C,CAAgD,MAAhD,EAAwD,IAAxD,EAA8D,QAA9D,EAAwEA,KAAxE,CAA8E,MAA9E,EAAsF,IAAtF,EAA4F/G,IAA5F,EAAkG+G,KAAlG,CAAwG,WAAxG,EAAqH,IAArH,EAA2H,MAA3H,EAAmIC,OAAnI,CAA2I,WAA3I,EACCC,GADD,GAECR,IAFD,CAEOS,aAAD,IAAmB;AACrB,UAAI,CAACA,aAAa,CAACC,KAAnB,EAA0B;AACtB,aAAKlB,QAAL,CAAc;AAACpE,UAAAA,IAAI,EAAEqF;AAAP,SAAd;AACH,OAFD,MAGK;AACDR,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA,aAAKV,QAAL,CAAc;AAACpE,UAAAA,IAAI,EAAE;AAAP,SAAd;AACH;;AAAA;AACJ,KAVD,EAWC+E,KAXD,CAWO,UAASC,KAAT,EAAgB;AACnBH,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCE,KAAzC;AACH,KAbD;AAeArI,IAAAA,QAAQ,CAAC4H,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,EAAyCC,GAAzC,CAA6CtG,IAA7C,EACCiH,GADD,GAECR,IAFD,CAEOS,aAAD,IAAmB;AACrB,UAAIlF,CAAC,GAAGkF,aAAa,CAACrF,IAAd,EAAR;AACA,WAAKoE,QAAL,CAAc;AACV;AACAvB,QAAAA,WAAW,EAAE1C,CAAC,CAAC0C,WAAF,IAAiB,IAAjB,GAAyB1C,CAAC,CAAC0C,WAA3B,GAAyC,KAF5C;AAGV0C,QAAAA,YAAY,EAAEpF,CAAC,CAACoF,YAAF,IAAkB,IAAlB,GAAyBpF,CAAC,CAACoF,YAA3B,GAA0C,KAH9C;AAIVzC,QAAAA,UAAU,EAAE3C,CAAC,CAAC2C,UAAF,IAAgB,IAAhB,GAAuB3C,CAAC,CAAC2C,UAAzB,GAAsC,KAJxC;AAKV0C,QAAAA,YAAY,EAAErF,CAAC,CAACqF,YAAF,IAAkB,IAAlB,GAAyBrF,CAAC,CAACqF,YAA3B,GAA0C,KAL9C;AAMVzC,QAAAA,GAAG,EAAE5C,CAAC,CAAC4C,GAAF,IAAS,IAAT,GAAiB5C,CAAC,CAAC4C,GAAnB,GAAwB,KANnB;AAOVC,QAAAA,MAAM,EAAE7C,CAAC,CAAC6C,MAAF,IAAY,IAAZ,GAAmB7C,CAAC,CAAC6C,MAArB,GAA+B,KAP7B;AAQVW,QAAAA,QAAQ,EAAExD,CAAC,CAACwD,QAAF,IAAc,IAAd,GAAqBxD,CAAC,CAACwD,QAAvB,GAAkC,KARlC;AASVV,QAAAA,SAAS,EAAE9C,CAAC,CAAC8C,SAAF,IAAe,IAAf,GAAsB9C,CAAC,CAAC8C,SAAxB,GAAoC;AATrC,OAAd;AAWH,KAfD,EAgBC8B,KAhBD,CAgBO,UAASC,KAAT,EAAgB;AACnBpI,MAAAA,kBAAkB,CAACuB,IAAD,CAAlB;AACH,KAlBD;AAmBH;;AAEDiB,EAAAA,UAAU,CAAC8C,MAAD,EAAS;AACf,QAAIA,MAAM,IAAI,CAAd,EAAiB;AACb,UAAI+C,OAAO,GAAG,IAAI7H,IAAJ,CAAS,KAAKoG,KAAL,CAAWrF,IAApB,CAAd;AACA8G,MAAAA,OAAO,CAACQ,OAAR,CAAgBR,OAAO,CAAC1H,OAAR,KAAoB2E,MAApC;AACA,WAAKkC,QAAL,CAAc;AAACjG,QAAAA,IAAI,EAAE,IAAIf,IAAJ,CAAS6H,OAAT;AAAP,OAAd;AACA,WAAKhB,OAAL,CAAagB,OAAb;AACH;AACJ;;AAEDzD,EAAAA,QAAQ,CAACW,CAAD,EAAI;AACR,QAAIA,CAAC,IAAI,KAAKqB,KAAL,CAAWzD,KAAhB,IAAyBoC,CAAC,IAAI,CAAlC,EAAsC;AAClC,WAAKiC,QAAL,CAAc;AAACrE,QAAAA,KAAK,EAAEoC;AAAR,OAAd;AACH;AACJ;;AAEDuD,EAAAA,iBAAiB,CAACV,KAAD,EAAQW,IAAR,EAAc;AAC3B;AACA,SAAKvB,QAAL,CAAc;AAAER,MAAAA,QAAQ,EAAE;AAAZ,KAAd;AACAiB,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ,EAAmBW,IAAnB;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKpC,KAAL,CAAWI,QAAf,EAAyB;AACrB,aAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AACH,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,kBAAD;AAAoB,MAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWrF,IAArC;AACoB,MAAA,IAAI,EAAE,KAAKqF,KAAL,CAAWxD,IAAX,IAAmB,IAAnB,GAA0B,KAAKwD,KAAL,CAAWxD,IAArC,GAA4C,KAAKwD,KAAL,CAAWqC,QADjF;AAEoB,MAAA,IAAI,EAAE,KAAKrC,KAAL,CAAWxD,IAAX,IAAmB,IAF7C;AAGoB,MAAA,OAAO,EAAE,KAAKwD,KAAL,CAAWtC,OAHxC;AAIoB,MAAA,aAAa,EAAGK,EAAD,IAAM;AAAC,aAAKtD,KAAL,CAAWoD,aAAX,CAAyBE,EAAzB;AAA6B,OAJvE;AAKoB,MAAA,UAAU,EAAGW,MAAD,IAAU;AAAC,aAAK9C,UAAL,CAAgB8C,MAAhB;AAAwB,OALnE;AAMoB,MAAA,QAAQ,EAAGC,CAAD,IAAK;AAAC,aAAKX,QAAL,CAAcW,CAAd;AAAiB,OANrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAQI,oBAAC,aAAD;AAAe,MAAA,IAAI,EAAE,KAAKqB,KAAL,CAAWrF,IAAhC;AAAsC,MAAA,OAAO,EAAE,KAAKqF,KAAL,CAAWtC,OAA1D;AAAmE,MAAA,cAAc,EAAE,CAACiC,CAAD,EAAGC,CAAH,KAAO;AAAC,aAAKb,cAAL,CAAoBY,CAApB,EAAsBC,CAAtB;AAAyB,OAApH;AACgB,MAAA,WAAW,EAAE,KAAKI,KAAL,CAAWX,WADxC;AAEgB,MAAA,UAAU,EAAE,KAAKW,KAAL,CAAWV,UAFvC;AAGgB,MAAA,GAAG,EAAE,KAAKU,KAAL,CAAWT,GAHhC;AAIgB,MAAA,MAAM,EAAE,KAAKS,KAAL,CAAWR,MAJnC;AAKgB,MAAA,SAAS,EAAE,KAAKQ,KAAL,CAAWP,SALtC;AAMgB,MAAA,KAAK,EAAE,KAAKO,KAAL,CAAWzD,KANlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CADJ;AAkBH;;AAjIiC;;AAoItC,eAAesD,OAAf","sourcesContent":["import React from 'react';\nimport \"./Flights.css\";\nimport RIGHT_BTN from './img/right-arrow.png';\nimport LEFT_BTN from './img/left-arrow.png';\nimport firebase from \"./Firebase.js\";\nimport {firebaseCreateDate} from \"./FirebaseHelper.js\";\nimport HELI_BLUE from './img/heli-blue-front.jpeg';\nimport HELI_DARK from './img/heli-dark-front.jpeg';\nimport HELI_LIGHT from './img/heli-light-front.jpeg';\nimport ErrorPage from './ErrorPage.js';\nimport ReactGA from 'react-ga';\n\nconst headers = ['ETD', 'ETR', 'AC', 'CREW', 'MISSION', 'DETAILS', 'CONFIG', 'SQ PRI', 'DCO'];\n\nvar today = new Date();\nvar dd = String(today.getDate()).padStart(2, '0');\nvar mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\nvar yyyy = today.getFullYear();\n\ntoday = mm + '/' + dd + '/' + yyyy;\n\nfunction initializeReactGA() {\n    ReactGA.initialize('UA-108277898-5');\n    ReactGA.pageview('/Flights');\n}\n\n/*\nfunction date(curDate) {\n    //var today = new Date();\n    var weekday = curDate.getDay();\n    var day = curDate.getDate();\n    var month = curDate.getMonth();\n    var year = curDate.getFullYear();\n    var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\",\"December\"];\n    return (\n        <div className='flight-date'>\n            <h2>{days[weekday] +\", \"+months[month]+\" \"+day+\", \"+year}</h2>\n        </div>\n    )\n}*/\n\nfunction RenderDate(props) {\n    var weekday = props.date.getDay();\n    var day = props.date.getDate();\n    var month = props.date.getMonth();\n    var year = props.date.getFullYear();\n    var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\",\"December\"];\n    \n    if (props.view === 'sm-view') {\n        return (\n            <div className={'flight-date sm-view'}>\n                <h2>{month+\" / \"+day+\" / \"+year}</h2>\n            </div>\n        )\n    }\n    return (\n        <div className={'flight-date lg-view'}>\n            <h2>{days[weekday] +\", \"+months[month]+\" \"+day+\", \"+year}</h2>\n        </div>\n    )\n}\n\nfunction RenderFlightDayHeader(props) {\n    var displayDate = new Date(props.date);\n    var curDate = new Date();\n    var diff = Math.round((displayDate.getTime() - curDate.getTime())/(24*60*60*1000));\n\n    // Only show flights for last 3 days to the next 2 weeks\n    var disableLeft = diff === -3;\n    var disableRight= diff === 14;\n\n    return (\n        <div className=\"flight-day-header\">\n            <img className={'date-btn' + (disableLeft ? ' disabled': '')} src={LEFT_BTN} onClick={()=>{props.changeDate(disableLeft ? 0 : -1)}}></img>\n            <RenderDate date={displayDate} view=\"lg-view\"/>\n            <RenderDate date={displayDate} view=\"sm-view\"/>\n            <img className={'date-btn' + (disableRight ? ' disabled': '')} src={RIGHT_BTN} onClick={()=>{props.changeDate(disableRight ? 0 : 1)}}></img>\n        </div>\n    )\n}\n\nfunction parseName(name) {\n    if (name != \"\") {\n        return name[1].toUpperCase() + name.slice(2);\n    }\n    return \"\";\n}\n\n\nfunction RenderFlightDay(props) {\n    var tableHeaders = [];\n    headers.forEach(title => {\n        tableHeaders.push(<th>{title}</th>)\n    });\n    var tableRows = [];\n    var meals = 0;\n    \n    if (props.data != null) {\n        props.data.forEach(entry => {\n        if (props.test) {\n            var d = entry;\n        }\n        else {\n            var d = entry.data();\n        }\n        if (parseInt(d.endTime) >= 2000) {\n            //Meals will be provided \n            meals += 2;\n            meals += d.fe != \"\" ? 1 : 0;\n            meals += d.crew != \"\" ? 1 : 0;\n        }\n\n        var fe = d.fe != '' ? ' | ' + parseName(d.fe) : '';\n        var crew = d.crew != '' ? ' | ' + parseName(d.crew) : '';\n        var r = [\n        <td className='etd'>{d.startTime}</td>,\n        <td className='etr'>{d.endTime}</td>,\n        <td className='ac'><div className='ac-wrap'>{d.ac}</div></td>,\n        <td className='crew'>{parseName(d.captain) + ' | ' + parseName(d.fo) + fe + crew}</td>,\n        <td className='mission'>{d.mission}</td>,\n        <td className='details'>{d.details}</td>,\n        <td className='config'>{d.config}</td>,\n        <td className='pri'>{d.pri + ' SOA'}</td>,\n        <td className='dco'><div className={\"dot \"+d.dco}></div></td>,\n        \n        ];\n        \n        var startTime = parseInt(d.startTime);\n        tableRows.push(<tr className={(props.curTime.getDate() == props.date.getDate() && startTime < props.curTime.getHours()*100+props.curTime.getMinutes()) ? 'expired':''} onClick={props.toggleOverlay.bind(this,entry.id)}>{r}</tr>);\n        })\n        props.setMeals(meals);\n\n        return (\n            <div className=\"flight-day\">\n                <table>\n                    <tr>\n                        {tableHeaders}\n                    </tr>\n                    {tableRows}\n                </table>\n            </div>\n        )\n    }\n    else {\n        return (\n            <div className=\"noFlights\">\n                <div className=\"noFlightsContent\">\n                    <img className=\"noFlightsLogo\" src={HELI_DARK}/>\n                    <img className=\"noFlightsLogo\" src={HELI_BLUE}/>\n                    <img className=\"noFlightsLogo\" src={HELI_LIGHT}/>\n                <hr/>\n                </div>\n                <div className=\"noFlightsText\">\n                    <p>No flights today</p>\n                </div>\n            </div>\n        )\n    }\n    \n}\n\n\nfunction getRandom(x, y) {\n    var min = Math.ceil(x);\n    var max = Math.floor(y);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction RenderFlightDayBox(props) {\n    return (\n        <div className=\"flight-day-box\">\n            <RenderFlightDayHeader date={props.date} changeDate={(offset)=>{props.changeDate(offset)}}/>\n            <RenderFlightDay date={props.date} test={props.test} setMeals={(m)=>{props.setMeals(m)}} data={props.data} curTime={props.curTime} toggleOverlay={(id)=>{props.toggleOverlay(id)}}/>\n        </div>\n    )\n}\n\nfunction RenderInfoBox(props) {\n    return (\n        <div className=\"info-box\">\n            <div className=\"info-title\">\n                <h5>{props.title}</h5>\n            </div>\n            <div className=\"info-content\" contentEditable={props.edit} suppressContentEditableWarning={true} onBlur={(event)=>{props.updateDayStats(props.id, event.target.textContent);}}>\n                <h5>{props.value[props.id]}</h5>\n            </div>\n        </div>\n    )\n}\n\nfunction RenderInfoBar(props) {\n    const default_info = {\"EVENING TWILIGHT\":props.twilightciv, \"SNAGS DESK SGT\": props.desksgtday, \"DUTY MVP\": props.mvp, \"FDO\": props.fdoday, \"DUTY GROUND RUN\": props.groundrun};\n    var boxes = [];\n    boxes.push(<RenderInfoBox title={\"EVENING TWILIGHT\"} value={props} id={'twilightciv'} updateDayStats={(f, e)=>{props.updateDayStats(f,e)}} edit={true}/>)\n    boxes.push(<RenderInfoBox title={\"SNAGS DESK SGT\"} value={props} id={'desksgtday'} updateDayStats={(f, e)=>{props.updateDayStats(f,e)}} edit={true}/>)\n    boxes.push(<RenderInfoBox title={\"DUTY MVP\"} value={props} id={'mvp'} updateDayStats={(f, e)=>{props.updateDayStats(f,e)}} edit={true}/>)\n    boxes.push(<RenderInfoBox title={\"FDO\"} value={props} id={'fdoday'} updateDayStats={(f, e)=>{props.updateDayStats(f,e)}} edit={true}/>)\n    boxes.push(<RenderInfoBox title={\"DUTY GROUND RUN\"} value={props} id={'groundrun'} updateDayStats={(f, e)=>{props.updateDayStats(f,e)}} edit={true}/>)\n    boxes.push(<RenderInfoBox title=\"MEALS\" value={{'meals': props.meals}} id={'meals'} edit={false}/>)\n    \n    return (\n        <div className=\"info-bar\">\n            <div className=\"time-title\">\n                <h5>CURRENT TIME</h5>\n            </div>\n            <div className=\"time\">\n                <h2>{(props.curTime.getHours()<10?\"0\":\"\")+props.curTime.getHours()+':'+(props.curTime.getMinutes()<10?\"0\":\"\")+props.curTime.getMinutes()}</h2>\n            </div>\n            {boxes}\n        </div>\n    )\n}\n\nclass Flights extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            curTime: new Date(),\n            date: new Date(),\n            data: null,\n            twlightnaut: \"N/A\",\n            twilightciv: \"N/A\",\n            desksgtday: \"N/A\", \n            desksgnight: \"N/A\", \n            mvp: \"N/A\", \n            fdoday: \"N/A\",\n            fdonight: \"N/A\",\n            meals: 0,\n            groundrun: \"N/A\",\n            hasError: false,\n        }\n    }\n    componentDidMount() {\n        this.timerID = setInterval(() => this.tick(), 1000);\n        this.getData(new Date());\n        initializeReactGA();\n    }\n\n    componentWillUnmount() {clearInterval(this.timerID);}\n\n    tick() {this.setState({curTime: new Date()});}\n\n    updateDayStats(field, newValue) {\n        if (this.state[field] !== newValue) {\n            this.setState({[field]: newValue});\n            var date = this.state.date.getFullYear() + '-' + (this.state.date.getMonth() < 9 ? '0':'') + (this.state.date.getMonth()+1) + '-' + (this.state.date.getDate() < 10 ? '0':'') + (this.state.date.getDate());\n            \n            firebase.firestore().collection(\"dates\").doc(date).set({\n                [field]: newValue\n                }, {merge: true})\n                .then(function() {\n                console.log(\"Document successfully written!\");\n                })\n                .catch(function(error) {\n                console.error(\"Error writing document: \", error);\n            });\n        }\n    }    \n\n    getData(newDate) {\n        var date = newDate.getFullYear() + '-' + (newDate.getMonth() < 9 ? '0':'') + (newDate.getMonth()+1) + '-' + (newDate.getDate() < 10 ? '0':'') + (newDate.getDate()) ;\n        console.log(\"DATE: \" + date);\n        //get new data\n        firebase.firestore().collection(\"events\").where('type', '==', 'flight').where('date', '==', date).where('startTime', '>=', '0000').orderBy(\"startTime\")\n        .get()\n        .then((querySnapshot) => {\n            if (!querySnapshot.empty) {\n                this.setState({data: querySnapshot})\n            }\n            else {\n                console.log(\"Document doesn't exist\");\n                this.setState({data: null});\n            };\n        })\n        .catch(function(error) {\n            console.log(\"Error getting documents: \", error);\n        });\n\n        firebase.firestore().collection(\"dates\").doc(date)\n        .get()\n        .then((querySnapshot) => {\n            var d = querySnapshot.data();\n            this.setState({\n                //TODO: show civil and day/night\n                twilightciv: d.twilightciv != null ?  d.twilightciv : \"N/A\",\n                twilightnaut: d.twilightnaut != null ? d.twilightnaut : \"N/A\",\n                desksgtday: d.desksgtday != null ? d.desksgtday : \"N/A\", \n                desksgtnight: d.desksgtnight != null ? d.desksgtnight : \"N/A\", \n                mvp: d.mvp != null ?  d.mvp: \"N/A\", \n                fdoday: d.fdoday != null ? d.fdoday  : \"N/A\",\n                fdonight: d.fdonight != null ? d.fdonight : \"N/A\",\n                groundrun: d.groundrun != null ? d.groundrun : \"N/A\"})\n            \n        })\n        .catch(function(error) {\n            firebaseCreateDate(date);\n        });\n    }\n\n    changeDate(offset) {\n        if (offset != 0) {\n            var newDate = new Date(this.state.date);\n            newDate.setDate(newDate.getDate() + offset);\n            this.setState({date: new Date(newDate)})\n            this.getData(newDate);\n        }\n    }\n\n    setMeals(m) {\n        if (m != this.state.meals && m >= 0 ) {\n            this.setState({meals: m});\n        }\n    }\n\n    componentDidCatch(error, info) {\n        // Display fallback UI\n        this.setState({ hasError: true });\n        console.log(error, info);\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return <ErrorPage/>\n          }\n        return (\n            <div className='container'>\n                <RenderFlightDayBox date={this.state.date} \n                                    data={this.state.data != null ? this.state.data : this.state.testData}\n                                    test={this.state.data == null}\n                                    curTime={this.state.curTime} \n                                    toggleOverlay={(id)=>{this.props.toggleOverlay(id)}} \n                                    changeDate={(offset)=>{this.changeDate(offset)}}\n                                    setMeals={(m)=>{this.setMeals(m)}}/>\n                <RenderInfoBar date={this.state.date} curTime={this.state.curTime} updateDayStats={(f,e)=>{this.updateDayStats(f,e)}}\n                                twilightciv={this.state.twilightciv}\n                                desksgtday={this.state.desksgtday} \n                                mvp={this.state.mvp}\n                                fdoday={this.state.fdoday}\n                                groundrun={this.state.groundrun}\n                                meals={this.state.meals}/>\n            </div>\n        )\n    }\n}\n\nexport default Flights;\n"]},"metadata":{},"sourceType":"module"}